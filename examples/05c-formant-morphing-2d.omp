; OM File Header - Saved 2018/04/08 18:42:50
; (6.1301 :patc (om-make-point 207 70) (om-make-point 720 99) (om-make-point 1022 541) "" 183 0 "2018/04/08 17:22:38" "2018/04/08 18:40:09")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "05c-formant-morphing-2d" (quote ((let ((box (om-load-boxcall (quote genfun) "2D-MORPH 4" (quote 2d-morph) (quote ((om-load-inputfun (quote input-funbox) "formant1" "FMT1" (list (list 800 1.0 80) (list 1150 0.63095737 90) (list 2800 0.1 120) (list 3500 0.015848933 130) (list 4950 0.001 140))) (om-load-inputfun (quote input-funbox) "formant2" "FMT2" (list (list 270 1.0 60) (list 2140 0.25118864 90) (list 2950 0.05011873 100) (list 3900 0.05011873 120) (list 4950 0.0063095726 120))) (om-load-inputfun (quote input-funbox) "scaler [0-1, clipped]" "SCALER" 0.5))) (om-make-point 316 283) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 8" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 245 162) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 7" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 369 157) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 12" (quote t) (quote nil) (om-make-point 248 122) (om-make-point 46 30) (list (quote s) (quote o)) "(s o)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 11" (quote t) (quote nil) (om-make-point 412 127) (om-make-point 43 30) (list (quote s) (quote i)) "(s i)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 360 253) (om-make-point 38 30) 1.0 "1.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "2D-MORPH 3" (quote 2d-morph) (quote ((om-load-inputfun (quote input-funbox) "formant1" "FMT1" (list (list 800 1.0 80) (list 1150 0.63095737 90) (list 2800 0.1 120) (list 3500 0.015848933 130) (list 4950 0.001 140))) (om-load-inputfun (quote input-funbox) "formant2" "FMT2" (list (list 270 1.0 60) (list 2140 0.25118864 90) (list 2950 0.05011873 100) (list 3900 0.05011873 120) (list 4950 0.0063095726 120))) (om-load-inputfun (quote input-funbox) "scaler [0-1, clipped]" "SCALER" 0.5))) (om-make-point 566 283) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 6" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 495 162) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 5" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 619 157) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 498 122) (om-make-point 46 30) (list (quote s) (quote o)) "(s o)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 662 127) (om-make-point 43 30) (list (quote s) (quote i)) "(s i)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 610 253) (om-make-point 38 30) 0.5 "0.5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 167 39) (quote "only the first 5 formants$will be morphed") "" (om-make-point 743 81) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 860 253) (om-make-point 38 30) 0.5 "0.5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 748 122) (om-make-point 34 30) (quote e1) "e1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 912 127) (om-make-point 43 30) (list (quote s) (quote i)) "(s i)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 4" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 869 157) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 3" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 745 162) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "2D-MORPH 2" (quote 2d-morph) (quote ((om-load-inputfun (quote input-funbox) "formant1" "FMT1" (list (list 800 1.0 80) (list 1150 0.63095737 90) (list 2800 0.1 120) (list 3500 0.015848933 130) (list 4950 0.001 140))) (om-load-inputfun (quote input-funbox) "formant2" "FMT2" (list (list 270 1.0 60) (list 2140 0.25118864 90) (list 2950 0.05011873 100) (list 3900 0.05011873 120) (list 4950 0.0063095726 120))) (om-load-inputfun (quote input-funbox) "scaler [0-1, clipped]" "SCALER" 0.5))) (om-make-point 816 283) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 209 52) (quote "0=first formant$1=second formant$0.5=between the two formants") "" (om-make-point 250 67) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 130 253) (om-make-point 38 30) 0.0 "0.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 182 127) (om-make-point 43 30) (list (quote s) (quote i)) "(s i)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 18 122) (om-make-point 46 30) (list (quote s) (quote o)) "(s o)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 2" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 139 157) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 15 162) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "2D-MORPH" (quote 2d-morph) (quote ((om-load-inputfun (quote input-funbox) "formant1" "FMT1" (list (list 800 1.0 80) (list 1150 0.63095737 90) (list 2800 0.1 120) (list 3500 0.015848933 130) (list 4950 0.001 140))) (om-load-inputfun (quote input-funbox) "formant2" "FMT2" (list (list 270 1.0 60) (list 2140 0.25118864 90) (list 2950 0.05011873 100) (list 3900 0.05011873 120) (list 4950 0.0063095726 120))) (om-load-inputfun (quote input-funbox) "scaler [0-1, clipped]" "SCALER" 0.5))) (om-make-point 86 283) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 277 44) (quote "FORMANT MORPHING: 2D") "" (om-make-point 306 6) nil (om-make-color 0.0 0.0 1.0) (om-make-font "Verdana" 18.0D0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 0 0 nil 0) (2 0 0 1 nil 0) (5 0 0 2 nil 0) (3 0 1 0 nil 0) (4 0 2 0 nil 0) (7 0 6 0 nil 0) (8 0 6 1 nil 0) (11 0 6 2 nil 0) (9 0 7 0 nil 0) (10 0 8 0 nil 0) (15 0 16 0 nil 0) (14 0 17 0 nil 0) (17 0 18 0 nil 0) (16 0 18 1 nil 0) (13 0 18 2 nil 0) (21 0 23 0 nil 0) (22 0 24 0 nil 0) (24 0 25 0 nil 0) (23 0 25 1 nil 0) (20 0 25 2 nil 0))) nil 6.1301))
