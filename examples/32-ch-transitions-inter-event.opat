
(:patch
 (:om-version 0.011)
 (:name "32-ch-transitions-inter-event")
 (:doc "")
 (:info
  (:created "2019/08/01 0:25:38")
  (:modified "2019/08/01 15:22:17"))
 (:window (:size (835 708)) (:position (462 169)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:reference simple-base-string)
   (:type :value)
   (:group-id nil)
   (:name "list")
   (:x 170)
   (:y 523)
   (:w 211)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "ch_32-ch-transitions-inter-event")
   (:id 0))
  (:box
   (:reference
    (:patch
     (:om-version 0.011)
     (:name "more-about-gen-inter-events")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (1158 634)) (:position (437 23)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:comment
       (:x 925)
       (:y 177)
       (:w 188)
       (:h 26)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 11) (:style :plain)))
       (:align nil)
       (:text "the :AMP of compnent 4 is 0.1")
       (:id 0))
      (:comment
       (:x 719)
       (:y 77)
       (:w 179)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 11) (:style :plain)))
       (:align nil)
       (:text
        "the :FREQ of compnent 2 is statically determined by a BPF (scaled on the event duration)")
       (:id 1))
      (:comment
       (:x 513)
       (:y 113)
       (:w 179)
       (:h 59)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 11) (:style :plain)))
       (:align nil)
       (:text
        "the :FREQ solt is defined by the patch freq-rule, applied to each pairs of values from the two events")
       (:id 2))
      (:comment
       (:x 506)
       (:y 17)
       (:w 406)
       (:h 41)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 13) (:style :plain)))
       (:align nil)
       (:text
        "GEN-INTER-EVENT ALLOWS TO GENERATE A TRANSITION EVENT FOLLOWING A NUMBER OF \"RULES\"")
       (:id 3))
      (:box
       (:reference single-float)
       (:type :value)
       (:group-id nil)
       (:name "aux 2")
       (:x 1003)
       (:y 198)
       (:w 38)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0.1)
       (:id 4))
      (:box
       (:reference cons)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 919)
       (:y 199)
       (:w 71)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list :amp 4))
       (:id 5))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 976)
       (:y 236)
       (:w 66)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:reference cons)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 727)
       (:y 149)
       (:w 69)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list :freq 2))
       (:id 7))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 761)
       (:y 192)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:reference
        (:patch
         (:om-version 0.011)
         (:name "freqs-rule")
         (:doc "")
         (:info (:created nil) (:modified nil))
         (:window (:size (412 354)) (:position (398 414)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:reference
            (:out (:type omout) (:name nil) (:index 1) (:doc nil)))
           (:type :io)
           (:group-id nil)
           (:name nil)
           (:x 102)
           (:y 278)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:reference
            (:in (:type omin) (:index 1) (:name "v1") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "v1")
           (:x 170)
           (:y 24)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:reference
            (:in (:type omin) (:index 2) (:name "v2") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "v2")
           (:x 322)
           (:y 24)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 5")
           (:x 247)
           (:y 105)
           (:w 34)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 30)
           (:id 3))
          (:box
           (:reference bpf)
           (:type :object)
           (:group-id nil)
           (:name "BPF")
           (:x 108)
           (:y 208)
           (:w 88)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:name "BPF")
           (:display :hidden)
           (:showname nil)
           (:show-markers t)
           (:group-id nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "X-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "Y-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "decimals")
             (:value 4)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "X-POINTS") (:reactive nil))
            (:output (:name "Y-POINTS") (:reactive nil))
            (:output (:name "decimals") (:reactive nil)))
           (:window (:size (nil nil)) (:position (nil nil)))
           (:edition-params)
           (:value
            (:object
             (:class bpf)
             (:slots
              ((:onset 0)
               (:duration 100)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))
               (:action nil)
               (:color (:color 0 0 0 1.0))
               (:decimals 0)
               (:x-points (:list 0 100))
               (:y-points (:list 0 100))))
             (:add-slots
              ((:decimals 0)
               (:color (:color 0 0 0 1.0))
               (:name "BPF")
               (:action nil)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))))))
           (:id 4))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 4")
           (:x 105)
           (:y 105)
           (:w 36)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 100)
           (:id 5))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 3")
           (:x 73)
           (:y 105)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 90)
           (:id 6))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 2")
           (:x 49)
           (:y 105)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 10)
           (:id 7))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux")
           (:x 24)
           (:y 105)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 8))
          (:box
           (:reference list)
           (:type :function)
           (:group-id nil)
           (:name "list")
           (:x 23)
           (:y 143)
           (:w 118)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value 10)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value 90)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value 100)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:reference list)
           (:type :function)
           (:group-id nil)
           (:name "list")
           (:x 222)
           (:y 145)
           (:w 92)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10)))
         (:connections
          (:connection
           (:from (:box 1 :out 0))
           (:to (:box 10 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 10 :in 3))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 10 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 0 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 9 :in 3))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 9 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 9 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 9 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 9 :out 0))
           (:to (:box 4 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 4 :in 2))
           (:attributes (:color nil :style nil :modif nil))))))
       (:type :patch)
       (:group-id nil)
       (:name "freqs-rule")
       (:x 581)
       (:y 179)
       (:w 88)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:group-id nil)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "v1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "v2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name nil) (:reactive nil)))
       (:id 9))
      (:box
       (:reference bpf)
       (:type :object)
       (:group-id nil)
       (:name "BPF")
       (:x 806)
       (:y 126)
       (:w 86)
       (:h 61)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "BPF")
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:group-id nil)
       (:lock :locked)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 100.0)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0 0 0 1.0))
           (:decimals 4)
           (:x-points
            (:list
             4.4757
             7.9775
             10.8614
             14.7753
             18.4831
             21.779
             24.8689
             27.7528
             30.4307
             31.0
             32.9026
             35.5805
             38.0524
             40.3184
             41.7603
             43.8202
             45.0562
             46.9101
             48.3521
             50.0
             51.236
             52.6779
             54.5318
             55.9738
             57.8277
             59.6816
             61.7416
             63.5955
             66.4794
             67.9213
             70.8052
             73.2772
             75.3371
             77.191
             78.839
             80.0749
             81.1049
             82.7528
             84.4007
             85.8427
             86.8727
             100.0))
           (:y-points
            (:list
             92.9121
             101.978
             106.8132
             110.4396
             110.4396
             107.4176
             102.5824
             96.5385
             88.0769
             78.0
             80.8242
             73.5714
             66.9231
             59.6703
             54.2308
             46.3736
             40.9341
             35.4945
             33.0769
             30.6593
             28.8462
             27.6374
             26.4286
             25.8242
             25.2198
             25.2198
             25.2198
             26.4286
             30.6593
             34.2857
             40.3297
             46.3736
             49.3956
             53.6264
             56.6484
             58.4615
             59.6703
             61.4835
             61.4835
             61.4835
             59.6703
             100.0))))
         (:add-slots
          ((:decimals 4)
           (:color (:color 0 0 0 1.0))
           (:name "BPF")
           (:action nil)
           (:interpol
            (:number-or-nil (:number 50) (:t-or-nil nil)))))))
       (:id 10))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 562)
       (:y 222)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 524)
       (:y 179)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value :freq)
       (:id 12))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 558)
       (:y 280)
       (:w 141)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:library "OM-Chant")
       (:reference ch-fof)
       (:type :object)
       (:group-id nil)
       (:name "CH-FOF")
       (:x 118)
       (:y 411)
       (:w 330)
       (:h 173)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-FOF")
       (:display :mini-view)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "freq")
         (:value 609.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "amp")
         (:value 1.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "bw")
         (:value 77.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil))
        (:output (:name "freq") (:reactive nil))
        (:output (:name "amp") (:reactive nil))
        (:output (:name "bw") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-fof)
         (:slots
          ((:elts 5)
           (:field-names
            (:list "freq" "amp" "bw" "win" "wdur" "wout" "phs"))
           (:onset 0)
           (:dur 0.9980001)
           (:kt nil)
           (:user-fun nil)
           (:action-time 2.001)))
         (:add-slots
          ((:data
            (:list
             (:array-field
              (:name "freq")
              (:doc "FOF frequency(-ies) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 609.0)
              (:data
               (:list
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 4)
                   (:x-points (:list 0.0 0.0998 0.8982 0.998))
                   (:y-points (:list 800.0 30.0 30.0 450.0))))
                 (:add-slots
                  ((:decimals 4)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 4)
                   (:x-points (:list 0.0 0.0998 0.8982 0.998))
                   (:y-points (:list 1150.0 30.0 30.0 800.0))))
                 (:add-slots
                  ((:decimals 4)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 4)
                   (:x-points (:list 0.0 0.0998 0.8982 0.998))
                   (:y-points (:list 2800.0 30.0 30.0 2830.0))))
                 (:add-slots
                  ((:decimals 4)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 4)
                   (:x-points (:list 0.0 0.0998 0.8982 0.998))
                   (:y-points (:list 3500.0 30.0 30.0 3500.0))))
                 (:add-slots
                  ((:decimals 4)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 4)
                   (:x-points (:list 0.0 0.0998 0.8982 0.998))
                   (:y-points (:list 4950.0 30.0 30.0 4950.0))))
                 (:add-slots
                  ((:decimals 4)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil
                     (:number 50)
                     (:t-or-nil nil)))))))))
             (:array-field
              (:name "amp")
              (:doc "FOF amplitudes !! Only linear [0.0 -> 1.0]")
              (:type number)
              (:decimals 4)
              (:default 1.0)
              (:data
               (:list
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 1.0 1.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.63096 0.35481))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.1 0.15849))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.01585 0.03981))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.001 0.00178))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil
                     (:number 50)
                     (:t-or-nil nil)))))))))
             (:array-field
              (:name "bw")
              (:doc "FOF bandwidth(s) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 77.0)
              (:data
               (:list
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 80.0 70.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 90.0 80.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 120.0 100.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 130.0 130.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 140.0 135.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil
                     (:number 50)
                     (:t-or-nil nil)))))))))
             (:array-field
              (:name "win")
              (:doc "attack time(s) of the FOFs (aka. Tex) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.003)
              (:data
               (:list
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.003 0.003))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.003 0.003))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.003 0.003))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.003 0.003))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.003 0.003))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil
                     (:number 50)
                     (:t-or-nil nil)))))))))
             (:array-field
              (:name "wdur")
              (:doc "duration(s) of the FOFs (aka. DebAtt) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.02)
              (:data
               (:list
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.02 0.02))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.02 0.02))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.02 0.02))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.02 0.02))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.02 0.02))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil
                     (:number 50)
                     (:t-or-nil nil)))))))))
             (:array-field
              (:name "wout")
              (:doc "decay time(s) of the FOFs (aka. Atten) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.007)
              (:data
               (:list
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.007 0.007))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.007 0.007))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.007 0.007))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.007 0.007))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.007 0.007))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil
                     (:number 50)
                     (:t-or-nil nil)))))))))
             (:array-field
              (:name "phs")
              (:doc "FOF phase")
              (:type number)
              (:decimals 4)
              (:default 0)
              (:data
               (:list
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.0 0.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.0 0.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.0 0.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.0 0.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil))))))
                (:object
                 (:class bpf)
                 (:slots
                  ((:onset 0)
                   (:duration 0.998)
                   (:interpol
                    (:number-or-nil (:number 50) (:t-or-nil nil)))
                   (:action nil)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:decimals 5)
                   (:x-points (:list 0.0 0.998))
                   (:y-points (:list 0.0 0.0))))
                 (:add-slots
                  ((:decimals 5)
                   (:color (:color 0.0 0.0 0.0 1.0))
                   (:name nil)
                   (:action nil)
                   (:interpol
                    (:number-or-nil
                     (:number 50)
                     (:t-or-nil nil)))))))))))))))
       (:id 14))
      (:box
       (:reference length)
       (:type :function)
       (:group-id nil)
       (:name "length")
       (:x 63)
       (:y 80)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:reference length)
       (:type :function)
       (:group-id nil)
       (:name "length")
       (:x 256)
       (:y 78)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:library "OM-Chant")
       (:reference ch-fof)
       (:type :object)
       (:group-id nil)
       (:name "CH-FOF")
       (:x 263)
       (:y 121)
       (:w 152)
       (:h 146)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-FOF")
       (:display :mini-view)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 4)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "freq")
         (:value 609.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "amp")
         (:value 1.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "bw")
         (:value 77.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil))
        (:output (:name "freq") (:reactive nil))
        (:output (:name "amp") (:reactive nil))
        (:output (:name "bw") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-fof)
         (:slots
          ((:elts 5)
           (:field-names
            (:list "freq" "amp" "bw" "win" "wdur" "wout" "phs"))
           (:onset 0)
           (:dur 4)
           (:kt nil)
           (:user-fun nil)
           (:action-time 3)))
         (:add-slots
          ((:data
            (:list
             (:array-field
              (:name "freq")
              (:doc "FOF frequency(-ies) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 609.0)
              (:data (:list 450 800 2830 3500 4950)))
             (:array-field
              (:name "amp")
              (:doc "FOF amplitudes !! Only linear [0.0 -> 1.0]")
              (:type number)
              (:decimals 4)
              (:default 1.0)
              (:data
               (:list
                1.0
                0.3548134
                0.15848932
                0.03981072
                0.0017782794)))
             (:array-field
              (:name "bw")
              (:doc "FOF bandwidth(s) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 77.0)
              (:data (:list 70 80 100 130 135)))
             (:array-field
              (:name "win")
              (:doc "attack time(s) of the FOFs (aka. Tex) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.003)
              (:data (:list 0.003 0.003 0.003 0.003 0.003)))
             (:array-field
              (:name "wdur")
              (:doc "duration(s) of the FOFs (aka. DebAtt) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.02)
              (:data (:list 0.02 0.02 0.02 0.02 0.02)))
             (:array-field
              (:name "wout")
              (:doc "decay time(s) of the FOFs (aka. Atten) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.007)
              (:data (:list 0.007 0.007 0.007 0.007 0.007)))
             (:array-field
              (:name "phs")
              (:doc "FOF phase")
              (:type number)
              (:decimals 4)
              (:default 0)
              (:data (:list 0 0 0 0 0)))))))))
       (:id 17))
      (:box
       (:library "OM-Chant")
       (:reference vowel-formants)
       (:type :function)
       (:group-id nil)
       (:name "vowel-formants")
       (:x 319)
       (:y 40)
       (:w 115)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOWEL")
         (:value (:list a o))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil))
        (:output (:name "out2") (:reactive nil))
        (:output (:name "out3") (:reactive nil)))
       (:id 18))
      (:box
       (:library "OM-Chant")
       (:reference vowel-formants)
       (:type :function)
       (:group-id nil)
       (:name "vowel-formants")
       (:x 127)
       (:y 40)
       (:w 115)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOWEL")
         (:value (:list a a))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil))
        (:output (:name "out2") (:reactive nil))
        (:output (:name "out3") (:reactive nil)))
       (:id 19))
      (:box
       (:library "OM-Chant")
       (:reference ch-fof)
       (:type :object)
       (:group-id nil)
       (:name "CH-FOF")
       (:x 70)
       (:y 123)
       (:w 153)
       (:h 143)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-FOF")
       (:display :mini-view)
       (:showname t)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "freq")
         (:value 609.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "amp")
         (:value 1.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "bw")
         (:value 77.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil))
        (:output (:name "freq") (:reactive nil))
        (:output (:name "amp") (:reactive nil))
        (:output (:name "bw") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-fof)
         (:slots
          ((:elts 5)
           (:field-names
            (:list "freq" "amp" "bw" "win" "wdur" "wout" "phs"))
           (:onset 0)
           (:dur 2)
           (:kt nil)
           (:user-fun nil)
           (:action-time 0)))
         (:add-slots
          ((:data
            (:list
             (:array-field
              (:name "freq")
              (:doc "FOF frequency(-ies) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 609.0)
              (:data (:list 800 1150 2800 3500 4950)))
             (:array-field
              (:name "amp")
              (:doc "FOF amplitudes !! Only linear [0.0 -> 1.0]")
              (:type number)
              (:decimals 4)
              (:default 1.0)
              (:data (:list 1.0 0.63095737 0.1 0.015848933 0.001)))
             (:array-field
              (:name "bw")
              (:doc "FOF bandwidth(s) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 77.0)
              (:data (:list 80 90 120 130 140)))
             (:array-field
              (:name "win")
              (:doc "attack time(s) of the FOFs (aka. Tex) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.003)
              (:data (:list 0.003 0.003 0.003 0.003 0.003)))
             (:array-field
              (:name "wdur")
              (:doc "duration(s) of the FOFs (aka. DebAtt) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.02)
              (:data (:list 0.02 0.02 0.02 0.02 0.02)))
             (:array-field
              (:name "wout")
              (:doc "decay time(s) of the FOFs (aka. Atten) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.007)
              (:data (:list 0.007 0.007 0.007 0.007 0.007)))
             (:array-field
              (:name "phs")
              (:doc "FOF phase")
              (:type number)
              (:decimals 4)
              (:default 0)
              (:data (:list 0 0 0 0 0)))))))))
       (:id 20))
      (:box
       (:library "OM-Chant")
       (:reference gen-inter-event)
       (:type :function)
       (:group-id nil)
       (:name "gen-inter-event")
       (:x 181)
       (:y 332)
       (:w 114)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "EV1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EV2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "RULES")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 6 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 13 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 13 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 11 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 8 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 21 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 20 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 17 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 21 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 1))
       (:to (:box 17 :in 6))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 2))
       (:to (:box 17 :in 7))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 3))
       (:to (:box 17 :in 8))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 1))
       (:to (:box 20 :in 6))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 2))
       (:to (:box 20 :in 7))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 3))
       (:to (:box 20 :in 8))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 14 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "more-about-gen-inter-events")
   (:x 563)
   (:y 387)
   (:w 181)
   (:h 103)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 1))
  (:comment
   (:x 91)
   (:y 380)
   (:w 107)
   (:h 22)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 11) (:style :plain)))
   (:align nil)
   (:text "F0 TRANSITIONS")
   (:id 2))
  (:comment
   (:x 466)
   (:y 260)
   (:w 280)
   (:h 39)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 11) (:style :bold)))
   (:align nil)
   (:text
    "FOF TRANSITIONS
=> GENERATED USING GEN-INTER-EVENT")
   (:id 3))
  (:box
   (:library "OM-Chant")
   (:reference ch-transitions)
   (:type :function)
   (:group-id nil)
   (:name "ch-transitions")
   (:x 37)
   (:y 350)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CH-EVENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TRANS-FUNCTION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:reference synthesize)
   (:type :function)
   (:group-id nil)
   (:name "synthesize")
   (:x 391)
   (:y 561)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name "ch_34-ch-transitions-inter-event.aiff")
   (:x 335)
   (:y 608)
   (:w 192)
   (:h 67)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "ch_34-ch-transitions-inter-event.aiff")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname nil)
       (:sample-rate nil)
       (:n-channels nil)
       (:n-samples nil)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 6))
  (:box
   (:reference x-append)
   (:type :function)
   (:group-id nil)
   (:name "x-append")
   (:x 238)
   (:y 438)
   (:w 84)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "L1?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "L2?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:reference
    (:patch
     (:om-version 0.011)
     (:name "inter-event-transition-handler")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (667 630)) (:position (203 95)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "input 2") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "input 2")
       (:x 55)
       (:y 45)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference
        (:out (:type omout) (:name nil) (:index 1) (:doc nil)))
       (:type :io)
       (:group-id nil)
       (:name nil)
       (:x 179)
       (:y 564)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:reference
        (:patch
         (:om-version 0.011)
         (:name "freqs-rule")
         (:doc "")
         (:info (:created nil) (:modified nil))
         (:window (:size (500 500)) (:position (356 368)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:reference
            (:out (:type omout) (:name nil) (:index 1) (:doc nil)))
           (:type :io)
           (:group-id nil)
           (:name nil)
           (:x 205)
           (:y 318)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:reference
            (:in (:type omin) (:index 1) (:name "v1") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "v1")
           (:x 260)
           (:y 24)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:reference
            (:in (:type omin) (:index 2) (:name "v2") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "v2")
           (:x 412)
           (:y 24)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 5")
           (:x 342)
           (:y 105)
           (:w 34)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 80)
           (:id 3))
          (:box
           (:reference bpf)
           (:type :object)
           (:group-id nil)
           (:name "BPF")
           (:x 198)
           (:y 238)
           (:w 70)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:name "BPF")
           (:display :hidden)
           (:showname nil)
           (:show-markers t)
           (:group-id nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "X-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "Y-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "decimals")
             (:value 4)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "X-POINTS") (:reactive nil))
            (:output (:name "Y-POINTS") (:reactive nil))
            (:output (:name "decimals") (:reactive nil)))
           (:window (:size (nil nil)) (:position (nil nil)))
           (:edition-params)
           (:value
            (:object
             (:class bpf)
             (:slots
              ((:onset 0)
               (:duration 100)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))
               (:action nil)
               (:color (:color 0 0 0 1.0))
               (:decimals 0)
               (:x-points (:list 0 100))
               (:y-points (:list 0 100))))
             (:add-slots
              ((:decimals 0)
               (:color (:color 0 0 0 1.0))
               (:name "BPF")
               (:action nil)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))))))
           (:id 4))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 4")
           (:x 174)
           (:y 125)
           (:w 41)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 100)
           (:id 5))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 3")
           (:x 137)
           (:y 125)
           (:w 34)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 60)
           (:id 6))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 2")
           (:x 96)
           (:y 125)
           (:w 34)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 30)
           (:id 7))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux")
           (:x 62)
           (:y 125)
           (:w 27)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 8))
          (:box
           (:reference list)
           (:type :function)
           (:group-id nil)
           (:name "list")
           (:x 73)
           (:y 163)
           (:w 118)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value 10)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value 90)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value 100)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:reference list)
           (:type :function)
           (:group-id nil)
           (:name "list")
           (:x 312)
           (:y 145)
           (:w 92)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10)))
         (:connections
          (:connection
           (:from (:box 1 :out 0))
           (:to (:box 10 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 10 :in 3))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 10 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 0 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 9 :in 3))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 9 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 9 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 9 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 9 :out 0))
           (:to (:box 4 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 4 :in 2))
           (:attributes (:color nil :style nil :modif nil))))))
       (:type :patch)
       (:group-id nil)
       (:name "freqs-rule")
       (:x 480)
       (:y 266)
       (:w 86)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:group-id nil)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "v1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "v2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name nil) (:reactive nil)))
       (:id 2))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 408)
       (:y 359)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "OM-Chant")
       (:reference gen-inter-event)
       (:type :function)
       (:group-id nil)
       (:name "gen-inter-event")
       (:x 147)
       (:y 399)
       (:w 114)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "EV1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EV2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "RULES")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:reference symbol)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 402)
       (:y 272)
       (:w 48)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value :freq)
       (:id 5))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 413)
       (:y 319)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:library "OM-Chant")
       (:reference ch-fof)
       (:type :object)
       (:group-id nil)
       (:name "CH-FOF")
       (:x 336)
       (:y 206)
       (:w 141)
       (:h 40)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-FOF")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-fof)
         (:slots
          ((:elts 1)
           (:field-names
            (:list "freq" "amp" "bw" "win" "wdur" "wout" "phs"))
           (:onset 0)
           (:dur 0)
           (:kt nil)
           (:user-fun nil)
           (:action-time 0)))
         (:add-slots ((:data nil)))))
       (:id 7))
      (:box
       (:library "OM-Chant")
       (:reference ch-fof)
       (:type :object)
       (:group-id nil)
       (:name "CH-FOF")
       (:x 39)
       (:y 201)
       (:w 138)
       (:h 40)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-FOF")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-fof)
         (:slots
          ((:elts 1)
           (:field-names
            (:list "freq" "amp" "bw" "win" "wdur" "wout" "phs"))
           (:onset 0)
           (:dur nil)
           (:kt nil)
           (:user-fun nil)
           (:action-time 0)))
         (:add-slots
          ((:data
            (:list
             (:array-field
              (:name "freq")
              (:doc "FOF frequency(-ies) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 609.0)
              (:data (:list 609.0)))
             (:array-field
              (:name "amp")
              (:doc "FOF amplitudes !! Only linear [0.0 -> 1.0]")
              (:type number)
              (:decimals 4)
              (:default 1.0)
              (:data (:list 1.0)))
             (:array-field
              (:name "bw")
              (:doc "FOF bandwidth(s) [Hz]")
              (:type number)
              (:decimals 4)
              (:default 77.0)
              (:data (:list 77.0)))
             (:array-field
              (:name "win")
              (:doc "attack time(s) of the FOFs (aka. Tex) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.003)
              (:data (:list 0.003)))
             (:array-field
              (:name "wdur")
              (:doc "duration(s) of the FOFs (aka. DebAtt) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.02)
              (:data (:list 0.02)))
             (:array-field
              (:name "wout")
              (:doc "decay time(s) of the FOFs (aka. Atten) [sec]")
              (:type number)
              (:decimals 4)
              (:default 0.007)
              (:data (:list 0.007)))
             (:array-field
              (:name "phs")
              (:doc "FOF phase")
              (:type number)
              (:decimals 4)
              (:default 0)
              (:data (:list 0)))))))))
       (:id 8))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 111)
       (:y 507)
       (:w 185)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:reference ch-fof)
       (:type :slots)
       (:group-id nil)
       (:name "CH-FOF SLOTS")
       (:x 242)
       (:y 306)
       (:w 107)
       (:h 30)
       (:color (:color 0.9 0.88 0.81 1.0))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil)))
       (:id 10))
      (:box
       (:reference ch-fof)
       (:type :slots)
       (:group-id nil)
       (:name "CH-FOF SLOTS")
       (:x 112)
       (:y 323)
       (:w 107)
       (:h 30)
       (:color (:color 0.9 0.88 0.81 1.0))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil)))
       (:id 11))
      (:comment
       (:x 360)
       (:y 120)
       (:w 284)
       (:h 64)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :italic)))
       (:align nil)
       (:text
        "Information about the \"current\" transition (event 1, event 2, rank, start/end times, overlapping duration, etc.) ")
       (:id 12))
      (:box
       (:library "OM-Chant")
       (:reference transition-info)
       (:type :object)
       (:group-id nil)
       (:name "TRANSITION-INFO")
       (:x 113)
       (:y 119)
       (:w 241)
       (:h 58)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "TRANSITION-INFO")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FULL-LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EVT1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EVT2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "I")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR-INTER")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "FULL-LIST") (:reactive nil))
        (:output (:name "EVT1") (:reactive nil))
        (:output (:name "EVT2") (:reactive nil))
        (:output (:name "I") (:reactive nil))
        (:output (:name "BEG1") (:reactive nil))
        (:output (:name "END1") (:reactive nil))
        (:output (:name "DUR1") (:reactive nil))
        (:output (:name "BEG2") (:reactive nil))
        (:output (:name "END2") (:reactive nil))
        (:output (:name "DUR2") (:reactive nil))
        (:output (:name "DUR-INTER") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class transition-info)
         (:slots
          ((:full-list nil)
           (:evt1 nil)
           (:evt2 nil)
           (:i nil)
           (:beg1 nil)
           (:end1 nil)
           (:dur1 nil)
           (:beg2 nil)
           (:end2 nil)
           (:dur2 nil)
           (:dur-inter nil)))))
       (:id 13)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 6 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 4 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 4 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 2))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 3))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 6))
       (:to (:box 10 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 7))
       (:to (:box 11 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 10))
       (:to (:box 10 :in 3))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "inter-event-transition-handler")
   (:x 384)
   (:y 300)
   (:w 185)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name nil) (:reactive nil)))
   (:id 8))
  (:box
   (:library "OM-Chant")
   (:reference ch-transitions)
   (:type :function)
   (:group-id nil)
   (:name "ch-transitions")
   (:x 330)
   (:y 335)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CH-EVENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TRANS-FUNCTION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:comment
   (:x 324)
   (:y 43)
   (:w 408)
   (:h 43)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 13) (:style :bold)))
   (:align nil)
   (:text
    "Handling Transitions with compound Chant events:
Generating new events on the overlapping intetrvals")
   (:id 10))
  (:box
   (:reference null)
   (:type :value)
   (:group-id nil)
   (:name "aux 4")
   (:x 126)
   (:y 523)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 11))
  (:box
   (:reference sdiffile)
   (:type :object)
   (:group-id nil)
   (:name "my_synt.sdif")
   (:x 88)
   (:y 593)
   (:w 107)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "my_synt.sdif")
   (:display :hidden)
   (:showname nil)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (770 291)) (:position (351 76)))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:slots nil)
     (:add-slots ((:file-pathname nil)))))
   (:id 12))
  (:box
   (:reference synthesize)
   (:type :function)
   (:group-id nil)
   (:name "synthesize")
   (:x 102)
   (:y 561)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "run") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:reference flat)
   (:type :function)
   (:group-id nil)
   (:name "flat")
   (:x 172)
   (:y 124)
   (:w 54)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "list 2")
   (:x 248)
   (:y 180)
   (:w 106)
   (:h 46)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list s e)
     (:list s o)
     (:list s e)
     (:list s o)
     (:list s e)
     (:list s o)
     (:list s e)
     (:list s o)))
   (:id 15))
  (:box
   (:reference ms->sec)
   (:type :function)
   (:group-id nil)
   (:name "ms->sec")
   (:x 160)
   (:y 175)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:reference ms->sec)
   (:type :function)
   (:group-id nil)
   (:name "ms->sec")
   (:x 90)
   (:y 148)
   (:w 78)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:reference
    (:patch
     (:om-version 0.011)
     (:name "GEN-EVENTS-LOOP")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size (700 664)) (:position (685 224)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "freqs") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "freqs")
       (:x 29)
       (:y 42)
       (:w 49)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference
        (:out (:type omout) (:name "F0s") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "F0s")
       (:x 358)
       (:y 471)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:reference
        (:in (:type omin) (:index 2) (:name "onsets") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "onsets")
       (:x 294)
       (:y 118)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:reference
        (:out (:type omout) (:name "FOFs") (:index 2) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "FOFs")
       (:x 493)
       (:y 467)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:reference
        (:in (:type omin) (:index 3) (:name "durs") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "durs")
       (:x 370)
       (:y 109)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:reference
        (:in (:type omin) (:index 4) (:name "vowels") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "vowels")
       (:x 450)
       (:y 91)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:reference
        (:object
         (:class omcollect)
         (:slots ((:name "collect") (:protected-p nil) (:icon nil)))))
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 479)
       (:y 410)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 6))
      (:box
       (:reference length)
       (:type :function)
       (:group-id nil)
       (:name "length")
       (:x 435)
       (:y 302)
       (:w 69)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:comment
       (:x 4)
       (:y 320)
       (:w 166)
       (:h 47)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 11) (:style :plain)))
       (:align nil)
       (:text
        "Generate a CH-FOF and a CH-F0 for each note in the CHORD-SEQ")
       (:id 8))
      (:box
       (:library "OM-Chant")
       (:reference ch-fof)
       (:type :object)
       (:group-id nil)
       (:name "CH-FOF")
       (:x 480)
       (:y 346)
       (:w 140)
       (:h 53)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-FOF")
       (:display :hidden)
       (:showname t)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "freq")
         (:value 609.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "amp")
         (:value 1.0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "bw")
         (:value 77.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil))
        (:output (:name "freq") (:reactive nil))
        (:output (:name "amp") (:reactive nil))
        (:output (:name "bw") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-fof)
         (:slots
          ((:elts 1)
           (:field-names
            (:list "freq" "amp" "bw" "win" "wdur" "wout" "phs"))
           (:onset 0)
           (:dur 0)
           (:kt nil)
           (:user-fun nil)
           (:action-time 0)))
         (:add-slots ((:data nil)))))
       (:id 9))
      (:box
       (:library "OM-Chant")
       (:reference vowel-formants)
       (:type :function)
       (:group-id nil)
       (:name "vowel-formants")
       (:x 452)
       (:y 198)
       (:w 115)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOWEL")
         (:value (:list a a))
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "amp")
         (:value lin)
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil))
        (:output (:name "out2") (:reactive nil))
        (:output (:name "out3") (:reactive nil)))
       (:id 10))
      (:box
       (:reference bpf)
       (:type :object)
       (:group-id nil)
       (:name "BPF 2")
       (:x 175)
       (:y 89)
       (:w 70)
       (:h 55)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "BPF 2")
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 0.5 1))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0.01 0.06 0.01))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 4)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 1.0)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0 0 0 1.0))
           (:decimals 4)
           (:x-points (:list 0.0 0.5 1.0))
           (:y-points (:list 0.01 0.06 0.01))))
         (:add-slots
          ((:decimals 4)
           (:color (:color 0 0 0 1.0))
           (:name "BPF")
           (:action nil)
           (:interpol
            (:number-or-nil (:number 50) (:t-or-nil nil)))))))
       (:id 11))
      (:box
       (:reference bpf)
       (:type :object)
       (:group-id nil)
       (:name "BPF")
       (:x 95)
       (:y 90)
       (:w 70)
       (:h 52)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "BPF")
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:group-id nil)
       (:lock :locked)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 1 2))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 5 7 6))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 3)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 2.0)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0 0 0 1.0))
           (:decimals 3)
           (:x-points (:list 0.0 1.0 2.0))
           (:y-points (:list 5.0 7.0 6.0))))
         (:add-slots
          ((:decimals 3)
           (:color (:color 0 0 0 1.0))
           (:name "BPF")
           (:action nil)
           (:interpol
            (:number-or-nil (:number 50) (:t-or-nil nil)))))))
       (:id 12))
      (:box
       (:library "OM-Chant")
       (:reference ch-f0)
       (:type :object)
       (:group-id nil)
       (:name "CH-F0")
       (:x 211)
       (:y 317)
       (:w 124)
       (:h 45)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-F0")
       (:display :hidden)
       (:showname t)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "F0")
         (:value 110.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "F0") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-f0)
         (:slots ((:onset 0) (:action-time 0) (:dur 0) (:f0 110.0)))))
       (:id 13))
      (:box
       (:reference
        (:object
         (:class omcollect)
         (:slots ((:name "collect") (:protected-p nil) (:icon nil)))))
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 339)
       (:y 416)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 14))
      (:box
       (:reference param-process)
       (:type :function)
       (:group-id nil)
       (:name "param-process")
       (:x 125)
       (:y 245)
       (:w 110)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "INITVAL")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PROCESS")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DURATION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value 0.01)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OP")
         (:value a)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:reference vibrato)
       (:type :function)
       (:group-id nil)
       (:name "vibrato")
       (:x 125)
       (:y 151)
       (:w 73)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FREQS")
         (:value 6.0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AMPS")
         (:value 0.06)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:reference
        (:object
         (:class ompatchiterator)
         (:slots
          ((:name "iterate")
           (:protected-p nil)
           (:icon nil)
           (:n-iter 0)))))
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 338)
       (:y 595)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 17))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 448)
       (:y 146)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 360)
       (:y 163)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 19))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 290)
       (:y 164)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 20))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 21)
       (:y 90)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 20 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 19 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 17 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 1))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 1))
       (:to (:box 9 :in 6))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 2))
       (:to (:box 9 :in 7))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 3))
       (:to (:box 9 :in 8))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 16 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 14 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 17 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 1))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 13 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 15 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 9 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 15 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 9 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 13 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "GEN-EVENTS-LOOP")
   (:x 79)
   (:y 246)
   (:w 131)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "freqs")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "onsets")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "durs")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "vowels")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "F0s") (:reactive nil))
    (:output (:name "FOFs") (:reactive nil)))
   (:id 18))
  (:box
   (:reference flat)
   (:type :function)
   (:group-id nil)
   (:name "flat")
   (:x 58)
   (:y 116)
   (:w 54)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 59)
   (:y 20)
   (:w 229)
   (:h 78)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (580 292)) (:position (205 207)))
   (:edition-params (:duration-display t))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 6880)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6300)
         (:list 6700)
         (:list 7200)
         (:list 6400)
         (:list 5900)
         (:list 6500)
         (:list 7300)
         (:list 6400)))
       (:lonset (:list 0 888 1514 2028 2750 3625 4500 5680 6880))
       (:ldur
        (:list
         (:list 1300)
         (:list 900)
         (:list 800)
         (:list 1000)
         (:list 1100)
         (:list 1300)
         (:list 1700)
         (:list 1200)))
       (:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport (:list nil nil nil nil nil nil nil nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport (:list nil nil nil nil nil nil nil nil))
       (:llegato nil)))))
   (:id 20))
  (:box
   (:reference mc->f)
   (:type :function)
   (:group-id nil)
   (:name "mc->f")
   (:x 52)
   (:y 182)
   (:w 66)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MIDICS?")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:reference
    (:patch
     (:om-version 0.011)
     (:name "crossfade-transition")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "tr-data") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "tr-data")
       (:x 124)
       (:y 40)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:reference
        (:out (:type omout) (:name nil) (:index 1) (:doc nil)))
       (:type :io)
       (:group-id nil)
       (:name nil)
       (:x 148)
       (:y 382)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:comment
       (:x 280)
       (:y 334)
       (:w 194)
       (:h 46)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Verdana") (:size 12) (:style :bold)))
       (:align nil)
       (:text "2 events produce 1 single (crossfaded) event")
       (:id 2))
      (:box
       (:reference bpf-offset)
       (:type :function)
       (:group-id nil)
       (:name "BPF-OFFSET")
       (:x 291)
       (:y 222)
       (:w 96)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OFFSET")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:reference bpf-crossfade)
       (:type :function)
       (:group-id nil)
       (:name "BPF-CROSSFADE")
       (:x 161)
       (:y 271)
       (:w 118)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BPF1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BPF2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-Chant")
       (:reference ch-f0)
       (:type :object)
       (:group-id nil)
       (:name "CH-F0")
       (:x 80)
       (:y 321)
       (:w 159)
       (:h 40)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-F0")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "F0")
         (:value 110.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "F0") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class ch-f0)
         (:slots ((:onset 0) (:action-time 0) (:dur 0) (:f0 110.0)))))
       (:id 5))
      (:box
       (:reference ch-f0)
       (:type :slots)
       (:group-id nil)
       (:name "CH-F0 SLOTS")
       (:x 48)
       (:y 157)
       (:w 100)
       (:h 30)
       (:color (:color 0.9 0.88 0.81 1.0))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "F0")
         (:value 110.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "F0") (:reactive nil)))
       (:id 6))
      (:box
       (:reference ch-f0)
       (:type :slots)
       (:group-id nil)
       (:name "CH-F0 SLOTS")
       (:x 180)
       (:y 184)
       (:w 100)
       (:h 30)
       (:color (:color 0.9 0.88 0.81 1.0))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "F0")
         (:value 110.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "F0") (:reactive nil)))
       (:id 7))
      (:box
       (:library "OM-Chant")
       (:reference transition-info)
       (:type :object)
       (:group-id nil)
       (:name "TRANSITION-INFO")
       (:x 133)
       (:y 90)
       (:w 209)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "TRANSITION-INFO")
       (:display :hidden)
       (:showname nil)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FULL-LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EVT1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "EVT2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "I")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "BEG2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR-INTER")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "FULL-LIST") (:reactive nil))
        (:output (:name "EVT1") (:reactive nil))
        (:output (:name "EVT2") (:reactive nil))
        (:output (:name "I") (:reactive nil))
        (:output (:name "BEG1") (:reactive nil))
        (:output (:name "END1") (:reactive nil))
        (:output (:name "DUR1") (:reactive nil))
        (:output (:name "BEG2") (:reactive nil))
        (:output (:name "END2") (:reactive nil))
        (:output (:name "DUR2") (:reactive nil))
        (:output (:name "DUR-INTER") (:reactive nil)))
       (:window (:size (nil nil)) (:position (nil nil)))
       (:edition-params)
       (:value
        (:object
         (:class transition-info)
         (:slots
          ((:full-list nil)
           (:evt1 nil)
           (:evt2 nil)
           (:i nil)
           (:beg1 nil)
           (:end1 nil)
           (:dur1 nil)
           (:beg2 nil)
           (:end2 nil)
           (:dur2 nil)
           (:dur-inter nil)))))
       (:id 8)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 8 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 4 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 5 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 1))
       (:to (:box 5 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 3))
       (:to (:box 4 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 3))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 2))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 3))
       (:to (:box 7 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 7))
       (:to (:box 3 :in 1))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "crossfade-transition")
   (:x 80)
   (:y 313)
   (:w 135)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda :lambda)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "tr-data")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name nil) (:reactive nil)))
   (:id 22)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 5 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 5 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 7 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 18 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 18 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 18 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 18 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 18 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 18 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 1))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 1))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 21 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 21 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 1))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 1))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 2))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 2))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 3))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 3))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 4 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 4 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))