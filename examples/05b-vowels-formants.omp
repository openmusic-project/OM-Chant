; OM File Header - Saved 2018/04/08 18:42:50
; (6.1301 :patc (om-make-point 207 70) (om-make-point 50 50) (om-make-point 999 351) "" 183 0 "2018/04/08 16:31:40" "2018/04/08 17:20:01")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "05b-vowels-formants" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 666 161) (om-make-point 34 30) (quote db) "db" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 541 129) (om-make-point 37 30) (quote me) "me" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 3" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))) (om-load-inputkeyword (quote input-keyword) "" "high-formants" (quote :high-formants) nil nil) (om-load-inputkeyword (quote input-keyword) "" "amp" (quote :amp) nil nil))) (om-make-point 548 191) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 606 129) (om-make-point 109 30) (list 5 1000 0.0 10) "(5 1000 0.0 10)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 125 39) (quote "5 added formants$amp dB") "" (om-make-point 537 89) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 8" (om-make-point 125 26) (quote "5 added formants") "" (om-make-point 327 99) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 33 137) (om-make-point 45 30) (list (quote t) (quote a)) "(t a)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 7" (om-make-point 213 39) (quote "look in the three databases$eventually with added formants") "" (om-make-point 77 89) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 396 129) (om-make-point 109 30) (list 5 1000 0.0 10) "(5 1000 0.0 10)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS 2" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))) (om-load-inputkeyword (quote input-keyword) "" "high-formants" (quote :high-formants) nil nil))) (om-make-point 338 159) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 331 129) (om-make-point 37 30) (quote me) "me" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 83 137) (om-make-point 37 30) (quote me) "me" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ALL-VOWEL-FORMS" (quote all-vowel-forms) (quote ((om-load-inputfun (quote input-funbox) "a sung vowel" "VOWEL" (list (quote a) (quote a))))) (om-make-point 88 169) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 358 44) (quote "COMPACT FORMANT EXTRACTION") "" (om-make-point 306 6) nil (om-make-color 0.0 0.0 1.0) (om-make-font "Verdana" 18.0D0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 2 0 nil 0) (3 0 2 1 nil 0) (0 0 2 2 nil 0) (10 0 9 0 nil 0) (8 0 9 1 nil 0) (11 0 12 0 nil 0))) nil 6.1301))
