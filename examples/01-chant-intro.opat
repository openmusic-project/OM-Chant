
(:patch
 (:om-version 0.011)
 (:name "01-chant-intro")
 (:doc "")
 (:info
  (:created "2019/07/31 9:33:59")
  (:modified "2019/07/31 9:37:20"))
 (:window (:size (847 591)) (:position (248 92)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 205)
   (:y 503)
   (:w 123)
   (:h 38)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text "<= this sound will be empty and last 1s.")
   (:id 0))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "aux 2")
   (:x 200)
   (:y 228)
   (:w 55)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 44100)
   (:id 1))
  (:box
   (:library "OM-Chant")
   (:reference chant-synth)
   (:type :function)
   (:group-id nil)
   (:name "chant-synth")
   (:x 85)
   (:y 415)
   (:w 96)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "outfile")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:comment
   (:x 286)
   (:y 19)
   (:w 155)
   (:h 34)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text "OM-CHANT - Intro")
   (:id 3))
  (:comment
   (:x 356)
   (:y 249)
   (:w 294)
   (:h 248)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "The main control data are given as SDIFFrame objects. 
Here is the basic SDIF types description:

FOF : 
     Frames \"1FOB\" (streamID=0) 
     Matrices \"1FQ0\": fundamental frequency 
                  \"1FOF\": FOF parameters
                  \"1CHA\": channels panning

Filter : 
     Frames \"1REB\" (streamID=1)
     Matrices \"1RES\": filter parameters 
                  \"1CHA\": channels panning

Noise : 
     Frames \"1NOI\" (streamID=2) 
     Matrices \"1IDS\": noise distribution

Sound : 
    No SDIF frame required")
   (:id 4))
  (:comment
   (:x 360)
   (:y 216)
   (:w 174)
   (:h 24)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :bold)))
   (:align nil)
   (:text "<control-data>:")
   (:id 5))
  (:comment
   (:x 285)
   (:y 99)
   (:w 174)
   (:h 24)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :bold)))
   (:align nil)
   (:text "<fof>, <reb>, <noi>, <snd>")
   (:id 6))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name "01_ch-chant-intro.aiff")
   (:x 54)
   (:y 493)
   (:w 144)
   (:h 58)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "01_ch-chant-intro.aiff")
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "markers")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "markers") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples nil)
       (:n-channels nil)
       (:sample-rate nil)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname nil)
       (:sample-rate nil)
       (:n-channels nil)
       (:n-samples nil)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 7))
  (:box
   (:reference simple-base-string)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 132)
   (:y 321)
   (:w 151)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "ch_01-chant-intro.aiff")
   (:id 8))
  (:box
   (:reference outfile)
   (:type :function)
   (:group-id nil)
   (:name "outfile")
   (:x 148)
   (:y 359)
   (:w 70)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NAME")
     (:value "")
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OM-Chant")
   (:reference chant-patch)
   (:type :function)
   (:group-id nil)
   (:name "chant-patch")
   (:x 677)
   (:y 200)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MODULES")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:comment
   (:x 670)
   (:y 160)
   (:w 136)
   (:h 33)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text "Use CHANT-PATCH to choose a patch number:")
   (:id 11))
  (:comment
   (:x 14)
   (:y 102)
   (:w 213)
   (:h 93)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "WRITE-CHANT-SDIF-FILE allows to generate the file from control and setup parameters. The main data has to be given as a list of SDIF frames.

Open the online reference page for a complete description")
   (:id 12))
  (:comment
   (:x 13)
   (:y 47)
   (:w 227)
   (:h 50)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :bold)))
   (:align nil)
   (:text
    "The CHANT syntesizer is controlled with an SDIF file containing all the configuration and conrol data.")
   (:id 13))
  (:comment
   (:x 284)
   (:y 115)
   (:w 337)
   (:h 86)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "There exist 4 different modules combined in the different CHANT patches: FOF, FILTER, NOISE and SOUND.
Each module used in a given patch has to be initialized with some global settings (size, begin time, end time...) using these keyword arguments
[see reference for detailed description]")
   (:id 14))
  (:comment
   (:x 291)
   (:y 51)
   (:w 504)
   (:h 32)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :plain)))
   (:align nil)
   (:text
    "CHANT is initialized with one of 11 confgurations called \"patches\":
See https://github.com/openmusic-project/OM-Chant/wiki/Chant-SDIF-specification#patch-types")
   (:id 15))
  (:box
   (:library "OM-Chant")
   (:reference write-chant-sdif-file)
   (:type :function)
   (:group-id nil)
   (:name "write-chant-sdif-file")
   (:x 4)
   (:y 258)
   (:w 215)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CONTROL-DATA")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PATHNAME")
     (:value "chantfile.sdif")
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "PATCH")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DUR")
     (:value 1.0)
     (:reactive nil))
    (:input (:type :key) (:name "fob") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "reb") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "noi") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "snd") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "channels") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "sr") (:value 44100) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16)))
 (:connections
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 16 :in 9))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 2 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 2 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))