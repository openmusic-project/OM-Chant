; OM File Header - Saved 2012/11/12 19:31:18
; (6.060013 :patc (om-make-point 376 490) (om-make-point 756 76) (om-make-point 883 975) "" 183 0 "2012/04/18 14:46:13" "2012/11/12 18:01:58")
; End File Header
; External resources 
; (list (list (quote :sound) "../../../out-files/test2.aiff"))
(in-package :om)(load-lib-for (quote ("OM-Chant")))(setf *om-current-persistent* (om-load-patch1 "22-example-monster" (quote ((om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 603 751) (om-make-point 58 30) "test2" "\"test2\"" nil) (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 349 440) (om-make-point 179 30) (list 609 1000 2450 2700 3240) "(609 1000 2450 2700 3240)" nil) (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Modulate the amplitudes with a pulse-train") "" (om-make-point 401 628) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 145 59) (quote "Example: simple structure with complex internal evolutions") "" (om-make-point 432 282) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 65 26) (quote "F0 curve") "" (om-make-point 700 477) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Generate amplitudes with AUTOAMP") "" (om-make-point 374 470) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Generate bandwidths with AUTOBW") "" (om-make-point 301 336) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Generate a list of frequency curves") "" (om-make-point 28 212) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "AMPS" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj))))) (om-make-point 420 539) (om-make-point 112 75) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (0.014435 0.017117 0.020268 0.021431 0.023189 0.020774 0.022934 0.022037 0.022981 0.024368 0.02075 0.024447 0.025234 0.024679 0.023121 0.023847 0.023303 0.025539 0.022801 0.026183 0.025827 0.024031 0.023566 0.025344 0.029121 0.026956 0.02303 0.023642 0.024649 0.02623 0.030402 0.026921 0.024165 0.02548 0.022772 0.025729 0.025966 0.022742 0.024913 0.022473 0.034781 0.025652 0.026888 0.022996 0.022589 0.025542 0.021933 0.027993 0.029055 0.031314 0.02509 0.03056 0.023113 0.023198 0.02943 0.022902 0.028393 0.026446 0.021515 0.027843 0.021589 0.022486 0.025472 0.024431 0.024977 0.02563 0.022993 0.025396 0.022821 0.02268 0.020345 0.021469 0.020061 0.022334 0.020879 0.022093 0.021776 0.023406 0.020435 0.022433 0.019999)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (0.001223 0.003307 0.006338 0.007222 0.008841 0.006578 0.008929 0.008363 0.008598 0.010142 0.006632 0.010137 0.011053 0.010194 0.009231 0.009784 0.00887 0.01144 0.008822 0.012194 0.011859 0.01022 0.0092 0.010969 0.015358 0.014486 0.009909 0.009883 0.011453 0.012927 0.016517 0.01309 0.00998 0.012205 0.009371 0.0134 0.01279 0.009503 0.010554 0.008925 0.021126 0.011841 0.012969 0.008705 0.009679 0.011361 0.008571 0.014215 0.014908 0.017119 0.01191 0.015664 0.009494 0.010075 0.015168 0.009891 0.014318 0.012345 0.007692 0.01421 0.008068 0.008851 0.011528 0.010678 0.010797 0.011516 0.008737 0.011168 0.009693 0.00824 0.006219 0.007725 0.005895 0.008283 0.006475 0.007602 0.007234 0.009126 0.00606 0.008212 0.00596)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (4.4E-5 2.27E-4 6.35E-4 6.3E-4 5.07E-4 6.02E-4 9.37E-4 0.001205 6.92E-4 9.85E-4 7.36E-4 8.67E-4 9.07E-4 9.2E-4 0.001088 0.001002 6.42E-4 0.001209 0.001148 9.7E-4 0.001286 0.001126 7.64E-4 8.51E-4 0.001374 0.002283 0.001684 0.001142 0.001866 0.002255 0.001569 0.001415 9.76E-4 0.001861 0.001481 0.002341 0.002065 0.00165 9.25E-4 0.001394 0.001827 0.00127 0.00124 8.8E-4 0.001719 0.001204 0.001469 0.001436 0.001474 0.001485 0.002148 9.18E-4 0.001305 0.001681 0.00126 0.001788 0.001275 9.68E-4 0.001035 0.001809 0.001222 0.001255 9.94E-4 0.001076 9.31E-4 9.49E-4 8.62E-4 0.001013 0.001506 6.89E-4 7.97E-4 0.001038 7.15E-4 9.25E-4 4.8E-4 3.46E-4 3.71E-4 4.6E-4 4.06E-4 4.28E-4 5.81E-4)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (3.0E-6 2.4E-5 5.4E-5 5.8E-5 1.01E-4 2.46E-4 1.8E-4 1.24E-4 1.31E-4 6.8E-5 1.19E-4 1.41E-4 2.44E-4 3.46E-4 1.14E-4 9.6E-5 1.16E-4 4.47E-4 1.5E-4 1.06E-4 4.22E-4 1.96E-4 2.4E-4 1.28E-4 3.91E-4 1.46E-4 1.24E-4 3.09E-4 3.26E-4 3.22E-4 2.13E-4 7.87E-4 2.93E-4 3.54E-4 2.16E-4 1.54E-4 2.21E-4 1.84E-4 3.38E-4 2.82E-4 2.35E-4 6.56E-4 5.85E-4 2.35E-4 1.63E-4 3.87E-4 2.04E-4 3.09E-4 1.26E-4 3.06E-4 3.38E-4 1.89E-4 1.77E-4 1.31E-4 1.12E-4 1.33E-4 9.23E-4 2.43E-4 6.51E-4 1.12E-4 4.02E-4 3.62E-4 9.7E-5 4.6E-4 6.9E-5 3.7E-4 1.6E-4 7.0E-5 9.8E-5 1.34E-4 1.21E-4 6.8E-5 3.09E-4 7.6E-5 2.34E-4 1.12E-4 1.04E-4 8.1E-5 2.3E-4 5.4E-5 5.1E-5)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (1.0E-6 1.2E-5 1.4E-5 3.3E-5 5.7E-5 2.73E-4 7.0E-5 1.76E-4 1.8E-4 2.3E-5 3.9E-5 1.95E-4 1.15E-4 1.94E-4 3.2E-5 5.8E-5 6.8E-5 2.27E-4 7.5E-5 3.2E-5 3.9E-4 2.84E-4 1.33E-4 5.3E-5 2.28E-4 6.9E-5 2.8E-5 2.4E-4 1.04E-4 1.56E-4 9.7E-5 8.3E-4 1.54E-4 1.94E-4 1.1E-4 4.1E-5 8.4E-5 5.8E-5 2.38E-4 1.81E-4 1.02E-4 6.0E-4 4.84E-4 9.6E-5 3.3E-5 2.06E-4 1.28E-4 1.17E-4 5.7E-5 3.71E-4 2.55E-4 8.7E-5 4.1E-5 7.4E-5 2.5E-5 3.2E-5 9.32E-4 1.46E-4 6.24E-4 3.5E-5 4.13E-4 2.3E-4 5.9E-5 4.46E-4 1.6E-5 2.43E-4 7.2E-5 1.9E-5 3.5E-5 7.5E-5 4.1E-5 3.4E-5 3.44E-4 4.1E-5 1.77E-4 7.7E-5 5.7E-5 3.9E-5 2.1E-4 1.4E-5 1.4E-5)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) :from-file t)) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 47 40) (om-make-point 914 650))) t nil nil t) (om-load-editor-box1 "BWS" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj))))) (om-make-point 192 392) (om-make-point 103 78) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (89.159 74.835 72.564 72.475 72.684 72.515 72.616 72.479 72.473 72.649 72.581 72.485 72.852 72.495 72.558 72.902 72.501 73.128 72.615 72.602 72.555 73.233 73.037 72.567 72.614 73.295 72.659 72.674 72.796 73.277 72.99 73.456 73.119 73.472 73.322 72.883 73.29 73.357 73.389 72.952 73.522 73.649 72.706 73.742 72.975 72.86 72.751 73.547 73.508 72.874 73.015 72.678 72.969 72.835 72.7 72.636 72.871 72.952 72.704 73.116 72.725 72.495 72.673 72.668 72.583 72.495 72.728 72.525 72.516 72.635 72.598 72.517 72.473 72.474 72.701 72.644 72.993 72.843 72.886 72.862 72.621)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (73.219 74.53 76.76 77.916 77.511 76.833 77.436 76.445 77.018 77.146 77.519 78.948 77.882 79.283 78.94 79.933 77.99 80.109 78.566 78.955 78.127 78.431 78.091 77.878 79.19 81.254 78.145 80.685 79.389 81.298 80.484 80.15 78.618 81.625 81.452 81.754 79.393 78.435 78.528 78.485 79.287 81.521 79.46 78.587 78.428 80.952 81.07 80.466 79.401 78.676 78.206 80.578 78.938 79.639 78.316 79.354 79.078 79.753 79.223 79.35 78.621 77.346 77.77 78.477 77.273 80.142 78.014 79.036 77.398 78.237 79.024 76.631 77.583 77.316 78.328 77.091 77.237 75.965 77.78 76.193 77.103)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (87.061 94.025 92.432 95.516 95.87 94.828 91.34 96.719 93.434 91.608 93.616 95.807 97.77 94.747 94.512 97.504 98.676 96.176 94.652 98.846 95.645 97.086 98.313 94.67 97.257 96.996 94.552 99.2 93.177 95.847 95.974 98.439 97.098 98.213 98.059 94.012 99.047 96.412 98.412 95.477 95.047 97.121 96.552 95.115 98.61 95.503 98.339 96.789 94.03 98.92 93.939 99.012 98.045 93.729 93.136 96.637 93.403 96.019 98.759 95.511 95.5 96.015 96.246 93.861 97.64 92.526 92.879 93.035 96.165 95.14 94.616 95.815 92.299 91.42 92.911 93.203 90.164 92.462 91.759 94.729 94.803)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (117.015 116.052 121.667 113.659 117.569 121.777 119.591 121.592 116.727 114.636 115.709 117.306 122.217 114.232 121.875 120.187 120.753 116.88 117.817 115.853 122.337 123.176 120.993 115.167 119.052 121.831 116.892 120.004 119.683 122.328 118.613 117.658 120.66 122.026 124.377 120.187 118.225 121.824 122.231 123.298 119.763 115.704 122.033 118.409 121.273 123.56 116.735 122.986 116.869 117.105 123.614 122.329 120.061 116.483 116.603 116.036 121.432 115.193 114.554 116.701 117.622 119.864 115.843 119.605 116.556 114.686 115.897 120.094 120.371 121.152 118.365 117.753 118.695 113.629 118.588 117.062 120.554 115.015 118.159 116.779 115.159)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (120.46 124.379 120.041 118.737 123.732 120.928 119.239 120.036 126.975 129.429 123.799 125.279 123.675 129.431 126.611 128.047 129.667 121.17 127.728 124.717 124.766 127.007 125.694 125.281 125.919 127.569 122.343 127.412 123.948 127.962 122.117 128.478 123.204 128.646 122.421 126.62 126.331 130.168 129.707 122.515 128.629 125.412 123.253 130.411 122.005 121.809 126.324 122.18 122.267 120.934 130.076 130.019 122.456 125.1 123.883 120.39 129.797 122.032 120.725 127.49 129.315 129.387 129.049 127.516 128.397 127.672 123.03 120.294 127.146 122.85 120.284 121.83 126.821 122.691 122.507 127.024 128.103 126.521 123.845 124.687 121.81)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil t) (om-load-boxcall (quote genfun) "AUTOAMP" (quote autoamp) (quote ((om-load-inputfun (quote input-funbox) "list of formants' frequencies" "FREQLIST" (list 609 1000 2450 2700 3240)) (om-load-inputfun (quote input-funbox) "list of formants' bandwidths" "BWLIST" (list 77.64382 88.43109 122.9401 127.8438 137.6589)))) (om-make-point 316 479) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "MAPCAR 2" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 148 196) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 222 156) (om-make-point 172 30) (list 100 400 1000 2000 2300) "(100 400 1000 2000 2300)" nil) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 155 85) (om-make-point 27 30) 4 "4" nil) (om-load-boxcall (quote abstraction) "bpf-scale+jitter" (om-load-patch-abs1 "bpf-scale+jitter" (quote ((om-load-boxcomment "comment" (om-make-point 92 59) (quote "RESCALE + APPLY JITTER") "" (om-make-point 252 182) nil (om-make-color 0 0 0) (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 165 55) (om-make-point 41 30) 300 "300" nil) (om-load-boxcall (quote genfun) "OM+" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 155 85) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 198 116) (om-make-point 27 30) 0 "0" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 174 206) (om-make-point 34 30) 20 "20" nil) (om-load-boxcall (quote genfun) "JITTER" (quote jitter) (quote ((om-load-inputfun (quote input-funbox) "jitter frequency(-ies)" "FREQS" 100) (om-load-inputfun (quote input-funbox) "jitter amplitude(s)" "AMPS" 0.1))) (om-make-point 177 242) nil nil nil nil 1) (om-load-boxcall (quote genfun) "PARAM-PROCESS" (quote param-process) (quote ((om-load-inputfun (quote input-funbox) "" "INITVAL" nil) (om-load-inputfun (quote input-funbox) "" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "" "DURATION" nil) (om-load-inputfun (quote input-funbox) "" "KT" nil) (om-load-inputfunmenu1 (quote input-funmenu) "" "OP" (quote a) (list (list "add" (quote (quote a))) (list "multiply" (quote (quote m))))))) (om-make-point 107 299) nil nil nil nil 1) (om-load-boxout "output" 0 (om-make-point 130 382) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil) (om-load-boxin "input" 2 (om-make-point 110 8) "" nil nil nil) (om-load-boxcall (quote genfun) "BPF-SCALE" (quote bpf-scale) (quote ((om-load-inputfun (quote input-funbox) "a BPF" "SELF" nil) (om-load-inputkeyword (quote input-keyword) "xmax" "x2" (quote :x2) nil nil) (om-load-inputkeyword (quote input-keyword) "ymin" "y1" (quote :y1) nil nil) (om-load-inputkeyword (quote input-keyword) "ymax" "y2" (quote :y2) nil nil) (om-load-inputkeyword (quote input-keyword) "xmin" "x1" (quote :x1) nil nil))) (om-make-point 30 146) (om-make-point 190 56) nil nil nil 1) (om-load-boxin "dur" 1 (om-make-point 82 61) "" "dur" nil nil) (om-load-boxin "bpf" 0 (om-make-point 44 72) "" "bpf" nil nil))) (quote ((8 0 2 0 nil 0) (1 0 2 1 nil 0) (4 0 5 0 nil 0) (9 0 6 0 nil 0) (5 0 6 1 nil 0) (6 0 7 0 nil 0) (11 0 9 0 nil 0) (10 0 9 1 nil 0) (8 0 9 2 nil 0) (2 0 9 3 nil 0) (3 0 9 4 nil 0))) 6.060013 nil "" (om-make-point 623 396) (om-make-point 417 518)) (quote ((om-load-inputfun (quote input-funbox) "" "bpf" nil) (om-load-inputfun (quote input-funbox) "" "dur" nil) (om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 119 126) nil nil "l" "bpf-scale+jitter") (om-load-boxcall (quote genfun) "AUTOBW" (quote autobw) (quote ((om-load-inputfun (quote input-funbox) "formants' frequecy list" "FREQLIST" (list 609 1000 2450 2700 3240)))) (om-make-point 238 334) nil nil nil nil 1) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 42 45) (om-make-point 110 71) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 2.216 2.486 3.027 3.838 5.459 6.27 7.351 8.432 10.324 11.405 12.216 13.838 14.649 15.73 17.081 20.054 21.405 23.027 25.459 26.811 28.432 29.784 31.946 33.568 36.27 37.892 39.514 41.135 42.486 44.649 46.0 47.351 49.514 50.865 52.486 55.189 57.081 58.703 60.054 61.676 63.568 64.919 66.27 67.622 71.405 73.297 74.108 74.919 75.189 75.73 76.27 78.162 79.784 81.405 83.297 85.189 86.811 88.162 89.514 90.595 91.135 91.946 92.486 93.027 93.838 94.649 95.459 96.811 98.162 99.514 100.054 101.135)) (quote (0.0 29.252 30.084 31.331 32.579 33.826 34.935 35.906 36.876 38.262 38.955 39.648 40.48 41.45 42.143 42.975 44.223 44.639 45.193 45.886 46.163 46.718 46.995 47.688 47.965 48.52 48.936 49.352 49.629 49.906 50.183 50.322 50.461 50.461 50.461 50.461 50.461 50.322 50.045 49.767 49.49 49.074 48.797 48.381 47.965 46.579 45.47 44.777 43.946 43.252 42.559 41.728 41.589 41.312 40.896 40.341 39.51 38.539 37.569 36.46 35.49 34.797 34.104 33.411 32.717 32.024 31.331 30.638 29.945 29.529 28.836 28.698 28.004)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 432 342) (om-make-point 430 210) nil)) t nil nil nil) (om-load-editor-box1 "FREQS" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj))))) (om-make-point 265 243) (om-make-point 112 75) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (97.436 203.067 289.864 320.143 277.054 298.145 283.521 323.488 317.307 356.854 347.58 326.527 377.603 330.064 343.91 381.959 331.806 399.317 352.449 350.697 343.475 406.536 392.621 345.392 352.365 410.642 358.142 359.897 372.534 409.487 389.065 420.803 398.637 421.789 412.408 380.293 410.324 414.65 416.659 386.048 424.835 432.234 363.477 437.536 387.909 378.347 368.124 426.288 423.958 379.545 390.966 360.322 387.369 376.101 362.808 355.2 379.278 386.022 363.256 398.443 365.429 330.005 359.755 359.097 347.996 330.068 365.759 337.811 335.719 355.181 350.11 335.949 314.148 313.334 275.59 280.655 256.868 265.366 262.778 264.175 283.001)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (405.604 478.103 574.319 619.442 603.853 577.215 600.959 561.649 584.581 589.598 604.186 658.395 618.162 670.859 658.115 694.797 622.296 701.227 644.114 658.657 627.521 639.016 626.154 618.015 667.42 742.845 628.176 722.218 674.785 744.413 714.93 702.739 646.072 756.227 749.983 760.854 674.939 639.173 642.674 641.066 671.001 752.487 677.4 644.911 638.919 731.915 736.177 714.257 675.208 648.236 630.522 718.338 658.027 683.996 634.685 673.482 663.261 688.184 668.636 673.335 646.164 597.439 613.87 640.737 594.599 702.464 623.203 661.691 599.462 631.683 661.244 569.152 606.637 596.257 635.123 587.435 593.189 541.863 614.247 551.312 587.937)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (950.712 1205.225 1145.992 1261.303 1274.742 1235.359 1105.768 1307.087 1183.166 1115.617 1189.938 1272.336 1347.505 1232.299 1223.45 1337.23 1382.608 1286.383 1228.724 1389.232 1266.197 1321.164 1368.515 1229.41 1327.741 1317.713 1224.968 1403.047 1173.604 1273.86 1278.706 1373.403 1321.633 1364.621 1358.653 1204.721 1397.088 1295.386 1372.362 1259.839 1243.613 1322.497 1300.723 1246.163 1380.047 1260.827 1369.499 1309.779 1205.383 1392.107 1201.99 1395.714 1358.113 1194.155 1172.055 1303.961 1182.0 1280.4 1385.86 1261.114 1260.711 1280.25 1289.051 1199.078 1342.471 1149.456 1162.518 1168.303 1285.961 1247.12 1227.384 1272.669 1141.078 1108.696 1163.732 1174.54 1062.8 1147.102 1121.155 1231.6 1234.392)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (2164.42 2119.613 2387.158 2010.257 2190.366 2392.546 2286.401 2383.479 2150.992 2054.604 2103.785 2178.016 2414.213 2036.199 2397.34 2315.136 2342.521 2158.087 2202.068 2110.445 2420.125 2461.717 2354.199 2078.896 2260.643 2395.195 2158.66 2306.261 2290.841 2419.688 2239.719 2194.544 2337.993 2404.766 2521.934 2315.111 2221.299 2394.874 2414.887 2467.829 2294.68 2103.571 2405.135 2230.039 2367.853 2480.922 2151.344 2452.264 2157.607 2168.615 2483.598 2419.737 2309.045 2139.614 2145.178 2118.899 2375.62 2080.065 2050.873 2149.773 2192.856 2299.538 2109.99 2287.116 2143.005 2056.889 2112.486 2310.637 2324.016 2361.956 2227.928 2199.047 2243.596 2008.917 2238.515 2166.623 2332.859 2071.893 2218.185 2153.384 2078.523)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (2328.343 2522.022 2308.087 2245.61 2489.542 2351.051 2269.546 2307.825 2654.793 2783.548 2492.854 2567.643 2486.656 2783.649 2635.963 2710.65 2796.218 2362.853 2693.919 2539.102 2541.615 2656.448 2588.83 2567.733 2600.366 2685.639 2420.398 2677.448 2500.35 2706.195 2409.253 2733.254 2463.129 2742.09 2424.279 2636.414 2621.516 2822.974 2798.349 2428.931 2741.198 2574.434 2465.567 2836.028 2403.748 2394.108 2621.149 2412.357 2416.664 2351.346 2818.063 2815.012 2426.016 2558.532 2497.095 2324.925 2803.139 2405.088 2341.158 2681.556 2777.527 2781.315 2763.379 2682.908 2728.989 2691.003 2454.46 2320.269 2663.63 2445.533 2319.795 2395.156 2646.813 2437.615 2428.503 2657.293 2713.566 2631.288 2495.195 2537.624 2394.147)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) :from-file t)) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 38 40) (om-make-point 914 650))) t nil nil t) (om-load-boxcall (quote abstraction) "squares" (om-load-patch-abs1 "squares" (quote ((om-load-boxcall (quote genfun) "PERTURBATION" (quote perturbation) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 0.8) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 0.2))) (om-make-point 509 24) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 365 66) (om-make-point 45 30) 16.0 "16.0" nil) (om-load-boxcall (quote genfun) "PERTURBATION" (quote perturbation) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 0.3) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 0.4))) (om-make-point 423 24) nil nil nil nil 1) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 187 381) (om-make-point 224 104) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.00395 0.017776 0.019751 0.0625 0.06645 0.080276 0.082251 0.125 0.12895 0.142776 0.144751 0.1875 0.19145 0.205276 0.207251 0.25 0.25395 0.267776 0.269751 0.3125 0.31645 0.330276 0.332251 0.375 0.37895 0.392776 0.394751 0.4375 0.44145 0.455276 0.457251 0.5 0.50395 0.517776 0.519751 0.5625 0.56645 0.580276 0.582251 0.625 0.62895 0.642776 0.644751 0.6875 0.69145 0.705276 0.707251 0.75 0.75395 0.767776 0.769751 0.8125 0.81645 0.830276 0.832251 0.875 0.87895 0.892776 0.894751 0.9375 0.94145 0.955276 0.957251 1.0 1.00395 1.017776 1.019751 1.0625 1.06645 1.080276 1.082251 1.125 1.12895 1.142776 1.144751 1.1875 1.19145 1.205276 1.207251 1.25 1.25395 1.267776 1.269751 1.3125 1.31645 1.330276 1.332251 1.375 1.3789499 1.392776 1.3947508 1.4375 1.4414499 1.455276 1.4572508 1.5 1.5039499 1.517776 1.5197508 1.5625 1.5664499 1.580276 1.5822508 1.625 1.6289499 1.642776 1.6447508 1.6875 1.6914499 1.705276 1.7072508 1.75 1.7539499 1.767776 1.7697508 1.8125 1.8164499 1.830276 1.8322508 1.875 1.8789499 1.892776 1.8947508 1.9375 1.9414499 1.955276 1.9572508 2.0 2.00395 2.017776 2.019751 2.0625 2.06645 2.080276 2.082251 2.125 2.12895 2.142776 2.144751 2.1875 2.19145 2.205276 2.207251 2.25 2.25395 2.267776 2.269751 2.3125 2.31645 2.330276 2.332251 2.375 2.37895 2.392776 2.394751 2.4375 2.44145 2.455276 2.457251 2.5 2.50395 2.517776 2.519751 2.5625 2.56645 2.580276 2.582251 2.625 2.62895 2.642776 2.644751 2.6875003 2.6914504 2.7052763 2.7072513 2.75 2.75395 2.767776 2.769751 2.8124998 2.8164504 2.8302763 2.8322513 2.875 2.87895 2.892776 2.894751 2.9375003 2.9414504 2.9552763 2.9572513 3.0 3.00395 3.017776 3.019751 3.0624998 3.0664504 3.0802763 3.0822513 3.125 3.12895 3.142776 3.144751 3.1875003 3.1914504 3.2052763 3.2072513 3.25 3.25395 3.267776 3.269751 3.3124998 3.3164504 3.3302763 3.3322513 3.375 3.37895 3.392776 3.394751 3.4375003 3.4414504 3.4552763 3.4572513 3.5 3.50395 3.517776 3.519751 3.5624998 3.5664504 3.5802763 3.5822513 3.625 3.62895 3.642776 3.644751 3.6875003 3.6914504 3.7052763 3.7072513 3.75 3.75395 3.767776 3.769751 3.8124998 3.8164504 3.8302763 3.8322513 3.875 3.87895 3.892776 3.894751 3.9375003 3.9414504 3.9552763 3.9572513 4.0 4.00395 4.017776 4.019752 4.0625)) (quote (0.0 6.0E-7 6.2E-7 1.3E-7 2.4E-7 1.3E-6 1.85E-6 4.1E-7 1.72E-6 8.97E-6 1.199E-5 2.64E-6 1.52E-6 6.5E-6 7.98E-6 1.92E-6 6.98E-6 3.226E-5 3.006E-5 6.31E-6 4.63E-6 2.087E-5 1.745E-5 3.6E-6 5.52E-6 2.816E-5 3.561E-5 7.78E-6 3.47E-6 1.394E-5 2.245E-5 5.86E-6 2.954E-5 1.3104E-4 1.0224E-4 2.081E-5 6.71E-6 3.055E-5 2.67E-5 5.55E-6 1.131E-5 5.839E-5 7.615E-5 1.669E-5 7.63E-6 3.078E-5 7.255E-5 1.96E-5 1.1076E-4 5.099E-4 4.6702E-4 9.777E-5 6.558E-5 2.9087E-4 2.2682E-4 4.617E-5 2.541E-5 1.1732E-4 1.0865E-4 2.279E-5 1.431E-4 7.3468E-4 7.8288E-4 1.5956E-4 1.885E-5 1.326E-4 2.8569E-4 6.524E-5 1.0879E-4 4.7194E-4 3.2859E-4 6.536E-5 5.373E-5 2.737E-4 3.4515E-4 7.538E-5 5.767E-5 2.602E-4 2.2415E-4 4.669E-5 2.807E-5 1.2568E-4 1.0239E-4 2.101E-5 1.51E-5 7.849E-5 1.0402E-4 2.284E-5 5.675E-5 2.8763E-4 3.5793E-4 7.805E-5 6.897E-5 3.1782E-4 2.7185E-4 5.528E-5 3.52E-6 1.66E-5 1.662E-5 3.53E-6 3.43E-6 1.601E-5 1.544E-5 3.26E-6 3.78E-6 1.831E-5 2.005E-5 4.31E-6 5.42E-6 2.602E-5 2.478E-5 5.07E-6 1.14E-6 6.09E-6 8.53E-6 1.88E-6 2.95E-6 1.383E-5 1.351E-5 2.86E-6 2.78E-6 1.311E-5 1.313E-5 2.79E-6 6.02E-6 2.998E-5 3.485E-5 7.5E-6 9.89E-6 4.628E-5 4.508E-5 9.52E-6 2.416E-5 1.3656E-4 2.1583E-4 4.818E-5 4.346E-5 1.8527E-4 1.1668E-4 2.267E-5 6.538E-5 3.3216E-4 3.486E-4 7.114E-5 1.031E-5 5.85E-5 9.324E-5 2.083E-5 4.429E-5 2.197E-4 2.5798E-4 5.588E-5 4.054E-5 1.7194E-4 1.0479E-4 2.019E-5 1.47E-5 6.924E-5 7.13E-5 1.53E-5 1.9E-5 8.875E-5 8.59E-5 1.814E-5 4.828E-5 2.7445E-4 4.3849E-4 9.798E-5 1.2969E-4 6.0175E-4 5.6796E-4 1.1945E-4 4.734E-5 1.8871E-4 1.2134E-4 2.631E-5 3.87E-5 1.7267E-4 1.3836E-4 2.831E-5 1.142E-5 5.239E-5 4.732E-5 9.88E-6 1.858E-5 9.512E-5 1.2139E-4 2.655E-5 4.994E-5 2.4598E-4 2.4837E-4 5.106E-5 1.585E-5 7.08E-5 5.702E-5 1.168E-5 4.77E-6 2.171E-5 1.904E-5 3.96E-6 4.27E-6 2.089E-5 2.361E-5 5.09E-6 2.74E-6 1.166E-5 8.63E-6 1.81E-6 1.35E-6 6.96E-6 9.11E-6 2.0E-6 2.63E-6 1.184E-5 9.94E-6 2.05E-6 2.08E-6 1.019E-5 1.161E-5 2.51E-6 1.74E-6 7.76E-6 7.48E-6 1.64E-6 2.77E-6 1.265E-5 1.13E-5 2.36E-6 2.97E-6 1.587E-5 2.235E-5 4.94E-6 3.88E-6 1.62E-5 8.84E-6 1.65E-6 1.04E-6 4.89E-6 5.36E-6 1.17E-6 2.01E-6 8.99E-6 7.34E-6 1.51E-6 6.8E-7 3.07E-6 2.7E-6 5.6E-7 4.4E-7 2.06E-6 2.02E-6 4.3E-7 7.0E-7 3.44E-6 4.06E-6 8.9E-7 1.45E-6 6.85E-6 6.85E-6 0.0 0.0)) (quote bpf) 8))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil) (om-load-boxcall (quote slot) "slot" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 136 146) nil nil nil nil 4) (om-load-boxcall (quote genfun) "LAST-ELEM" (quote last-elem) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" nil))) (om-make-point 230 147) nil nil nil nil 1) (om-load-boxcall (quote genfun) "PULSE-TRAIN" (quote pulse-train) (quote ((om-load-inputfun (quote input-funbox) "Frequency of the train [Hz or bpf]" "FREQ" 10.0) (om-load-inputfun (quote input-funbox) "Total duration of the pulse train [sec or bpf]" "DURTRAIN" 1.0) (om-load-inputfun (quote input-funbox) "Duration of pulse [% of period, 0-1 or bpf]" "DURPULSE" 0.3) (om-load-inputfun (quote input-funbox) "Maximum amplitude [flt or bpf]" "MAXAMP" 1.0) (om-load-inputfun (quote input-funbox) "Minimum amplitude [% of maxamp, 0-1 or bpf]" "MINAMP" 0.2) (om-load-inputfun (quote input-funbox) "Attack [% of pulse dur, 0-1 or bpf]" "ATK" 0.2) (om-load-inputfun (quote input-funbox) "Decay [% of pulse dur, 0-1 or bpf]" "DEC" 0.1))) (om-make-point 364 106) (om-make-point 254 47) nil nil nil 3) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 372 162) (om-make-point 268 105) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.00395 0.017776 0.019751 0.0625 0.06645 0.080276 0.082251 0.125 0.12895 0.142776 0.144751 0.1875 0.19145 0.205276 0.207251 0.25 0.25395 0.267776 0.269751 0.3125 0.31645 0.330276 0.332251 0.375 0.37895 0.392776 0.394751 0.4375 0.44145 0.455276 0.457251 0.5 0.50395 0.517776 0.519751 0.5625 0.56645 0.580276 0.582251 0.625 0.62895 0.642776 0.644751 0.6875 0.69145 0.705276 0.707251 0.75 0.75395 0.767776 0.769751 0.8125 0.81645 0.830276 0.832251 0.875 0.87895 0.892776 0.894751 0.9375 0.94145 0.955276 0.957251 1.0 1.00395 1.017776 1.019751 1.0625 1.06645 1.080276 1.082251 1.125 1.12895 1.142776 1.144751 1.1875 1.19145 1.205276 1.207251 1.25 1.25395 1.267776 1.269751 1.3125 1.31645 1.330276 1.332251 1.375 1.37895 1.392776 1.394751 1.4375 1.44145 1.455276 1.457251 1.5 1.50395 1.517776 1.519751 1.5625 1.56645 1.580276 1.582251 1.625 1.62895 1.642776 1.644751 1.6875 1.69145 1.705276 1.707251 1.75 1.75395 1.767776 1.769751 1.8125 1.81645 1.830276 1.832251 1.875 1.87895 1.892776 1.894751 1.9375 1.94145 1.955276 1.957251 2.0 2.00395 2.017776 2.019751 2.0625 2.06645 2.080276 2.082251 2.125 2.12895 2.142776 2.144751 2.1875 2.19145 2.205276 2.207251 2.25 2.25395 2.267776 2.269751 2.3125 2.31645 2.330276 2.332251 2.375 2.37895 2.392776 2.394751 2.4375 2.44145 2.455276 2.457251 2.5 2.50395 2.517776 2.519751 2.5625 2.56645 2.580276 2.582251 2.625 2.62895 2.642776 2.644751 2.6875 2.69145 2.705276 2.707251 2.75 2.75395 2.767776 2.769751 2.8125 2.81645 2.830276 2.832251 2.875 2.87895 2.892776 2.894751 2.9375 2.94145 2.955276 2.957251 3.0 3.00395 3.017776 3.019751 3.0625 3.06645 3.080276 3.082251 3.125 3.12895 3.142776 3.144751 3.1875 3.19145 3.205276 3.207251 3.25 3.25395 3.267776 3.269751 3.3125 3.31645 3.330276 3.332251 3.375 3.37895 3.392776 3.394751 3.4375 3.44145 3.455276 3.457251 3.5 3.50395 3.517776 3.519751 3.5625 3.56645 3.580276 3.582251 3.625 3.62895 3.642776 3.644751 3.6875 3.69145 3.705276 3.707251 3.75 3.75395 3.767776 3.769751 3.8125 3.81645 3.830276 3.832251 3.875 3.87895 3.892776 3.894751 3.9375 3.94145 3.955276 3.957251 4.0 4.00395 4.017776 4.019752 4.0625)) (quote (0.0 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.2 0.2 0.942858 0.942858 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil) (om-load-boxcall (quote genfun) "PARAM-PROCESS" (quote param-process) (quote ((om-load-inputfun (quote input-funbox) "" "INITVAL" nil) (om-load-inputfun (quote input-funbox) "" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "" "DURATION" nil) (om-load-inputfun (quote input-funbox) "" "KT" nil) (om-load-inputfunmenu1 (quote input-funmenu) "" "OP" (quote m) (list (list "add" (quote (quote a))) (list "multiply" (quote (quote m))))))) (om-make-point 140 288) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OMOR" (quote omor) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "other things" "REST" nil))) (om-make-point 71 142) nil nil nil nil 1) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 85 9) (om-make-point 205 107) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15000002 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (6.4E-7 6.9E-7 2.78E-6 1.44E-5 5.34E-6 3.488E-5 2.644E-5 1.334E-5 4.189E-5 9.2E-6 1.477E-4 3.726E-5 2.25E-5 9.06E-5 2.07E-5 5.5379E-4 3.8933E-4 1.4366E-4 1.1044E-4 9.1716E-4 9.425E-5 6.8143E-4 1.3161E-4 4.0567E-4 2.4922E-4 1.4036E-4 5.103E-5 1.4895E-4 4.1857E-4 3.2027E-4 1.76E-5 1.768E-5 1.554E-5 2.224E-5 2.87E-5 5.72E-6 1.508E-5 1.384E-5 1.395E-5 3.548E-5 4.946E-5 4.481E-5 3.4885E-4 8.573E-5 4.0727E-4 5.153E-5 1.8473E-4 3.3151E-4 7.392E-5 7.334E-5 9.499E-5 8.408E-5 7.1326E-4 5.8365E-4 1.2104E-4 1.9352E-4 6.196E-5 4.252E-5 1.4331E-4 2.8514E-4 7.927E-5 2.642E-5 1.613E-5 2.655E-5 9.44E-6 6.73E-6 1.497E-5 7.65E-6 1.31E-5 7.23E-6 1.383E-5 8.66E-6 3.35E-5 5.31E-6 5.17E-6 1.003E-5 3.74E-6 2.29E-6 2.12E-6 3.96E-6 7.26E-6)) (quote bpf) 8))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil) (om-load-boxout "output" 0 (om-make-point 150 506) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil) (om-load-boxin "input" 0 (om-make-point 30 52) "" nil nil nil))) (quote ((8 0 3 0 nil 0) (9 0 4 0 nil 0) (4 1 5 0 nil 0) (1 0 6 0 nil 0) (5 0 6 1 nil 0) (2 0 6 2 nil 0) (0 0 6 3 nil 0) (6 0 7 0 nil 0) (9 0 8 0 nil 0) (7 0 8 1 nil 0) (12 0 9 0 nil 0) (10 0 9 1 nil 0) (3 0 11 0 nil 0))) 6.060013 nil "" (om-make-point 200 200) (om-make-point 745 576)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 340 551) nil nil "l" "squares") (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 347 621) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 808 535) (om-make-point 27 30) 0 "0" nil) (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 80 629) (om-make-point 68 30) (list 5 0.2 0.2) "(5 0.2 0.2)" nil) (om-load-editor-box1 "test2.aiff" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing" "tracknum" 1) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 397 847) (om-make-point 281 93) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "out-files")) :device :unspecific :host :unspecific :name "test2" :type "aiff") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "test2.aiff") (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :libaudio) 1 nil 1000 0 (om-make-point 941 848) (om-make-point 400 22) 0 1 (quote t) nil 0)) t nil nil nil) (om-load-boxcall (quote genfun) "SYNTHESIZE" (quote synthesize) (quote ((om-load-inputfun (quote input-funbox) "something to synthesize..." "ELEMENTS" nil) (om-load-inputkeyword (quote input-keyword) "" "name" (quote :name) nil nil))) (om-make-point 561 781) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" 1) (om-load-inputfun (quote input-funbox) "add-input" "add-input" 1))) (om-make-point 511 728) (om-make-point 87 41) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 66 655) (om-make-point 16 28) 4 "4" nil) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 704 529) (om-make-point 27 30) 5 "5" nil) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 765 518) (om-make-point 34 30) 50 "50" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 739 528) (om-make-point 22 28) 40 "40" nil) (om-load-boxcall (quote genfun) "BPF-SCALE" (quote bpf-scale) (quote ((om-load-inputfun (quote input-funbox) "a BPF" "SELF" nil) (om-load-inputkeyword (quote input-keyword) "xmax" "x2" (quote :x2) nil nil) (om-load-inputkeyword (quote input-keyword) "ymin" "y1" (quote :y1) nil nil) (om-load-inputkeyword (quote input-keyword) "ymax" "y2" (quote :y2) nil nil) (om-load-inputkeyword (quote input-keyword) "xmin" "x1" (quote :x1) nil nil))) (om-make-point 652 565) (om-make-point 190 56) nil nil nil 1) (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 600 496) (om-make-point 84 64) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (3.568 5.73 8.432 12.216 15.73 17.892 19.243 20.595 21.676 22.486 23.297 24.378 27.351 29.243 31.676 34.649 37.892 41.676 44.649 46.811 48.162 49.784 50.865 52.216 54.108 56.0 57.622 59.784 61.676 64.108 66.541 69.243 71.676 73.297 75.459 76.811 78.432 81.135 84.108 87.081 91.405)) (quote (56.073 57.964 59.015 59.646 59.646 59.225 57.964 56.073 53.971 51.449 49.558 47.876 47.456 47.666 48.927 50.398 52.29 54.181 55.652 56.073 56.073 55.442 53.761 51.659 49.768 48.507 47.876 47.666 47.876 48.927 50.188 51.87 52.92 52.71 50.609 49.137 48.297 47.666 47.666 47.876 48.927)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 432 342) (om-make-point 430 210) nil)) t nil nil nil) (om-load-editor-box1 "CH-F0" (quote ch-f0) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "start time [sec]" "action-time" 0) (om-load-inputfun (quote input-funbox) "duration [sec]" "dur" 0) (om-load-inputfun (quote input-funbox) "fundamental frequency value(s) [Hz]" "f0" 110.0))) (om-make-point 697 637) (om-make-point 76 49) (if (find-class (quote ch-f0) nil) (let ((newobj (make-instance (quote ch-f0) :action-time 0 :dur 0 :f0 (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.123 0.277 0.492 0.692 0.815 0.892 0.969 1.031 1.077 1.123 1.185 1.354 1.462 1.6 1.769 1.954 2.169 2.338 2.462 2.538 2.631 2.692 2.769 2.877 2.985 3.077 3.2 3.308 3.446 3.585 3.738 3.877 3.969 4.092 4.169 4.262 4.415 4.585 4.754 5.0)) (quote (47.069 48.62 49.482 50.0 50.0 49.655 48.62 47.069 45.345 43.276 41.724 40.345 40.0 40.172 41.207 42.413 43.966 45.517 46.724 47.069 47.069 46.551 45.172 43.448 41.897 40.862 40.345 40.172 40.345 41.207 42.241 43.621 44.482 44.31 42.587 41.379 40.69 40.172 40.172 40.345 41.207)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) :from-file t))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :midishare) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote t) nil 0)) nil nil nil t) (om-load-editor-box1 "CH-FOF" (quote ch-fof) (quote ((om-load-inputfun (quote input-funbox) "synthesis event" "self" nil) (om-load-inputfun (quote input-funbox) "number of components (FOFs)" "numcols" 1) (om-load-inputfun (quote input-funbox) "start time [sec]" "action-time" 0) (om-load-inputfun (quote input-funbox) "duration [sec]" "dur" 0) (om-load-inputfun (quote input-funbox) "control period [sec]" "kt" nil) (om-load-inputfun (quote input-funbox) "lambda function applied to each component" "user-fun" nil) (om-load-inputkeyword (quote editor-keyword) "" "freq" (quote :freq) nil nil) (om-load-inputkeyword (quote editor-keyword) "" "amp" (quote :amp) nil nil) (om-load-inputkeyword (quote editor-keyword) "" "bw" (quote :bw) nil nil) (om-load-inputkeyword (quote editor-keyword) "" "win" (quote :win) nil nil) (om-load-inputkeyword (quote editor-keyword) "" "wdur" (quote :wdur) nil nil) (om-load-inputkeyword (quote editor-keyword) "" "wout" (quote :wout) nil nil) (om-load-inputkeyword (quote editor-keyword) "" "phs" (quote :phs) nil nil))) (om-make-point 32 687) (om-make-point 277 120) (let ((copy (if (find-class (quote ch-fof) nil) (let ((rep (make-instance (quote ch-fof) :numcols 4))) (when (member (quote freq) (get-init-slots-of-class (quote ch-fof)) :key (quote car)) (setf (slot-value rep (quote freq)) (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (106.154 193.64 265.236 276.46 306.88 289.993 318.334 296.684 335.014 344.017 367.787 335.743 329.982 324.708 332.664 345.981 386.059 349.242 339.415 387.056 353.617 367.986 382.881 373.988 361.373 413.825 405.185 370.316 384.969 398.538 365.261 424.192 362.037 396.201 414.59 376.317 363.353 372.291 389.61 383.516 404.212 395.017 386.384 415.799 373.642 410.817 361.771 422.971 421.673 428.459 367.577 358.173 365.607 378.23 399.576 377.974 397.146 407.198 396.456 346.049 367.058 347.008 376.373 327.881 336.618 358.873 368.81 320.717 352.266 317.264 331.128 290.916 279.931 324.903 281.929 292.347 307.219 257.428 285.657 279.224 277.375)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (372.279 521.936 560.693 612.332 637.717 587.496 663.818 617.406 583.954 609.421 695.812 668.993 705.487 674.564 655.316 626.01 600.66 704.741 684.847 628.753 678.016 672.569 695.882 656.727 723.471 688.548 623.745 689.516 727.493 709.615 677.822 625.607 706.594 720.369 656.177 748.678 755.584 752.974 768.734 764.523 639.101 690.041 705.081 656.17 713.801 726.222 663.292 647.444 648.409 629.619 716.126 690.8 661.505 632.647 638.356 656.482 612.36 724.241 694.821 628.433 688.481 642.685 597.932 631.579 629.773 610.093 591.713 606.14 591.624 626.29 581.334 671.765 627.381 643.709 537.602 619.528 609.587 577.885 532.374 577.253 614.548)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (942.099 995.333 1162.989 1280.575 1111.701 1323.518 1109.52 1211.237 1346.683 1150.184 1128.401 1236.946 1157.541 1133.508 1154.225 1234.657 1194.76 1238.073 1254.234 1335.9 1217.208 1329.947 1394.228 1376.512 1288.188 1342.679 1406.502 1235.138 1235.422 1181.102 1246.369 1337.693 1270.338 1384.274 1412.278 1234.845 1276.268 1294.808 1339.446 1262.503 1340.465 1332.53 1234.97 1289.031 1345.768 1331.354 1361.859 1315.384 1301.6 1352.759 1372.357 1273.652 1323.939 1222.357 1382.296 1264.703 1219.807 1353.684 1242.651 1235.802 1264.023 1150.717 1208.442 1326.857 1290.192 1299.6 1262.683 1285.479 1284.987 1140.0 1295.336 1316.557 1128.647 1216.545 1243.497 1151.275 1112.453 1239.882 1283.737 1054.841 1233.022)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (2077.764 2178.34 2236.086 2166.274 1987.461 2089.926 2226.912 2299.637 2382.605 2058.562 2101.025 2373.897 2094.188 2285.421 2391.526 2403.916 2115.98 2053.872 2420.603 2276.04 2290.106 2287.341 2282.297 2280.575 2108.78 2176.415 2371.253 2469.714 2364.714 2425.908 2284.957 2174.541 2296.091 2408.005 2484.225 2299.087 2251.605 2292.301 2323.32 2423.483 2406.902 2323.361 2372.147 2226.372 2274.557 2384.634 2101.641 2453.033 2351.643 2478.587 2369.746 2352.756 2427.492 2182.076 2483.061 2141.066 2220.918 2204.533 2279.634 2322.065 2031.926 2125.206 2300.403 2400.675 2354.666 2220.668 2238.061 2020.036 2224.79 2401.272 2006.287 2284.427 2313.098 2060.111 2049.026 2112.158 2304.487 2151.275 2094.529 2232.103 1965.391)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (2264.573 2302.341 2633.53 2600.111 2679.525 2432.063 2510.298 2450.623 2778.849 2487.94 2774.32 2511.33 2692.975 2495.992 2449.41 2733.5 2570.528 2707.944 2552.955 2577.233 2396.166 2452.576 2802.453 2368.168 2804.687 2641.751 2835.872 2739.42 2609.072 2778.259 2697.786 2603.264 2357.676 2844.568 2684.715 2547.299 2460.12 2358.601 2491.502 2345.796 2753.041 2836.14 2550.033 2429.651 2818.0 2691.45 2480.522 2393.471 2826.931 2734.581 2456.262 2776.528 2591.933 2711.491 2812.68 2499.85 2727.678 2514.422 2448.377 2605.171 2565.997 2624.944 2297.592 2397.228 2758.496 2717.25 2771.024 2438.636 2768.556 2331.296 2583.768 2628.074 2378.132 2625.788 2250.603 2619.753 2569.846 2246.713 2363.952 2423.321 2402.104)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)))) (when (member (quote amp) (get-init-slots-of-class (quote ch-fof)) :key (quote car)) (setf (slot-value rep (quote amp)) (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.003504 0.01577 0.017522 0.0625 0.066004 0.07827 0.080022 0.125 0.128504 0.14077 0.142522 0.1875 0.191004 0.20327 0.205022 0.25 0.253504 0.26577 0.267522 0.3125 0.316004 0.32827 0.330022 0.375 0.378504 0.39077 0.392522 0.4375 0.441004 0.45327 0.455022 0.5 0.503504 0.51577 0.517522 0.5625 0.566004 0.57827 0.580022 0.625 0.628504 0.64077 0.642522 0.6875 0.691004 0.70327 0.705022 0.75 0.753504 0.76577 0.767522 0.8125 0.816004 0.82827 0.830022 0.875 0.878504 0.89077 0.892522 0.9375 0.941004 0.95327 0.955022 1.0 1.003504 1.01577 1.017522 1.0625 1.066004 1.07827 1.080022 1.125 1.128504 1.14077 1.142522 1.1875 1.191004 1.20327 1.205022 1.25 1.253504 1.26577 1.267522 1.3125 1.316004 1.32827 1.330022 1.375 1.378504 1.39077 1.392522 1.4375 1.441004 1.45327 1.455022 1.5 1.503504 1.51577 1.517522 1.5625 1.566004 1.57827 1.580022 1.625 1.628504 1.64077 1.642522 1.6875 1.691004 1.70327 1.705022 1.75 1.753504 1.76577 1.767522 1.8125 1.816004 1.82827 1.830022 1.875 1.878504 1.89077 1.892522 1.9375 1.941004 1.95327 1.955022 2.0 2.003505 2.01577 2.017522 2.0625 2.066005 2.07827 2.080022 2.125 2.128505 2.14077 2.142522 2.1875 2.191005 2.20327 2.205022 2.25 2.253505 2.26577 2.267522 2.3125 2.316005 2.32827 2.330022 2.375 2.378505 2.39077 2.392522 2.4375 2.441005 2.45327 2.455022 2.5 2.503505 2.51577 2.517522 2.5625 2.566005 2.57827 2.580022 2.625 2.628505 2.64077 2.642522 2.6875 2.691005 2.70327 2.705022 2.75 2.753505 2.76577 2.767522 2.8125 2.816005 2.82827 2.830022 2.875 2.878505 2.89077 2.892522 2.9375 2.941005 2.95327 2.955022 3.0 3.003505 3.01577 3.017522 3.0625 3.066005 3.07827 3.080022 3.125 3.128505 3.14077 3.142522 3.1875 3.191005 3.20327 3.205022 3.25 3.253505 3.26577 3.267522 3.3125 3.316005 3.32827 3.330022 3.375 3.378505 3.39077 3.392522 3.4375 3.441005 3.45327 3.455022 3.5 3.503505 3.51577 3.517522 3.5625 3.566005 3.57827 3.580022 3.625 3.628505 3.64077 3.642522 3.6875 3.691005 3.70327 3.705022 3.75 3.753505 3.76577 3.767522 3.8125 3.816005 3.82827 3.830022 3.875 3.878505 3.89077 3.892522 3.9375 3.941005 3.95327 3.955022 4.0 4.003504 4.01577 4.017522 4.0625)) (quote (0.0 0.011809 0.012341 0.003075 0.003581 0.014638 0.015262 0.003802 0.00417 0.016903 0.017134 0.004251 0.00455 0.018472 0.018599 0.004589 0.004155 0.016899 0.017327 0.004306 0.004542 0.018289 0.018112 0.004479 0.004502 0.018231 0.018418 0.004568 0.004804 0.019477 0.019488 0.004801 0.00415 0.016966 0.017699 0.004409 0.004929 0.019946 0.020102 0.004984 0.004991 0.020123 0.020013 0.004952 0.004702 0.018898 0.01871 0.004639 0.004769 0.019228 0.019119 0.004731 0.004772 0.019397 0.01984 0.004929 0.004834 0.019364 0.018821 0.004642 0.005068 0.020654 0.021126 0.005229 0.005165 0.020756 0.0204 0.00504 0.004783 0.019287 0.019195 0.00475 0.004891 0.01985 0.020202 0.005016 0.005635 0.022968 0.023403 0.005781 0.005391 0.021547 0.020769 0.005116 0.004637 0.018757 0.018878 0.004679 0.004829 0.019556 0.019756 0.0049 0.005167 0.020953 0.021403 0.00533 0.00608 0.024355 0.023665 0.005836 0.005246 0.021029 0.020483 0.005053 0.004965 0.020121 0.020381 0.005057 0.00469 0.018784 0.018546 0.004614 0.005146 0.020792 0.020839 0.005162 0.005032 0.020136 0.019497 0.004806 0.004766 0.019366 0.019795 0.004918 0.004617 0.018503 0.018799 0.004742 0.006956 0.027572 0.025763 0.006316 0.005192 0.021036 0.021281 0.005279 0.004988 0.019922 0.019151 0.004716 0.004538 0.018301 0.018398 0.004577 0.005108 0.020423 0.019708 0.004855 0.00469 0.019279 0.020479 0.005114 0.005705 0.023095 0.023306 0.005779 0.00615 0.024961 0.02496 0.006138 0.005018 0.020571 0.021655 0.005401 0.00574 0.022754 0.021279 0.005218 0.004631 0.018704 0.018721 0.004637 0.005574 0.022862 0.023422 0.005755 0.00458 0.018806 0.019894 0.004965 0.005581 0.022426 0.02204 0.005445 0.004796 0.019087 0.01811 0.00445 0.005252 0.021566 0.022155 0.005443 0.004318 0.017486 0.017663 0.004381 0.004647 0.018931 0.019522 0.004856 0.00499 0.020092 0.019885 0.004917 0.004968 0.020092 0.020206 0.005009 0.005126 0.020549 0.020026 0.004941 0.004719 0.01919 0.019666 0.004887 0.004822 0.019324 0.018813 0.004641 0.004543 0.018336 0.018192 0.004489 0.004069 0.016494 0.016717 0.004148 0.004223 0.016974 0.016695 0.004125 0.00424 0.017247 0.017697 0.004399 0.004249 0.017073 0.016925 0.0042 0.004419 0.017824 0.017761 0.004396 0.004437 0.018007 0.01833 0.004551 0.004384 0.017534 0.016945 0.004176 0.004387 0.017827 0.017988 0.004438 0.004 0.016151 0.016151 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.002434 0.010952 0.012169 0.0625 0.064934 0.073452 0.074669 0.125 0.127434 0.135952 0.137169 0.1875 0.189934 0.198452 0.199669 0.25 0.252434 0.260952 0.262169 0.3125 0.314934 0.323452 0.324669 0.375 0.377434 0.385952 0.387169 0.4375 0.439934 0.448452 0.449669 0.5 0.502434 0.510952 0.512169 0.5625 0.564934 0.573452 0.574669 0.625 0.627434 0.635952 0.637169 0.6875 0.689934 0.698452 0.699669 0.75 0.752434 0.760952 0.762169 0.8125 0.814934 0.823452 0.824669 0.875 0.877434 0.885952 0.887169 0.9375 0.939934 0.948452 0.949669 1.0 1.002434 1.010952 1.012169 1.0625 1.064934 1.073452 1.074669 1.125 1.127434 1.135952 1.137169 1.1875 1.189934 1.198452 1.199669 1.25 1.252434 1.260952 1.262169 1.3125 1.314934 1.323452 1.324669 1.375 1.377434 1.385952 1.387169 1.4375 1.439934 1.448452 1.449669 1.5 1.502434 1.510952 1.512169 1.5625 1.564934 1.573452 1.574669 1.625 1.627434 1.635952 1.637169 1.6875 1.689934 1.698452 1.699669 1.75 1.752434 1.760952 1.762169 1.8125 1.814934 1.823452 1.824669 1.875 1.877434 1.885952 1.887169 1.9375 1.939934 1.948452 1.949669 2.0 2.002434 2.010952 2.012169 2.0625 2.064934 2.073452 2.074669 2.125 2.127434 2.135952 2.137169 2.1875 2.189934 2.198452 2.199669 2.25 2.252434 2.260952 2.262169 2.3125 2.314934 2.323452 2.324669 2.375 2.377434 2.385952 2.387169 2.4375 2.439934 2.448452 2.449669 2.5 2.502434 2.510952 2.512169 2.5625 2.564934 2.573452 2.574669 2.625 2.627434 2.635952 2.637169 2.6875 2.689934 2.698452 2.699669 2.75 2.752434 2.760952 2.762169 2.8125 2.814934 2.823452 2.824669 2.875 2.877434 2.885952 2.887169 2.9375 2.939934 2.948452 2.949669 3.0 3.002434 3.010952 3.012169 3.0625 3.064934 3.073452 3.074669 3.125 3.127434 3.135952 3.137169 3.1875 3.189934 3.198452 3.199669 3.25 3.252434 3.260952 3.262169 3.3125 3.314934 3.323452 3.324669 3.375 3.377434 3.385952 3.387169 3.4375 3.439934 3.448452 3.449669 3.5 3.502434 3.510952 3.512169 3.5625 3.564934 3.573452 3.574669 3.625 3.627434 3.635952 3.637169 3.6875 3.689934 3.698452 3.699669 3.75 3.752434 3.760952 3.762169 3.8125 3.814934 3.823452 3.824669 3.875 3.877434 3.885952 3.887169 3.9375 3.939934 3.948452 3.949669 4.0 4.002434 4.010952 4.012169 4.0625)) (quote (0.0 0.001162 0.001474 3.46E-4 8.13E-4 0.003697 0.004151 9.6E-4 0.001356 0.005988 0.006121 0.001399 0.001687 0.007474 0.007716 0.001766 0.001316 0.005873 0.006225 0.00143 0.001758 0.007689 0.007604 0.00173 0.001696 0.007453 0.007488 0.001708 0.001951 0.008629 0.008859 0.002026 0.001326 0.005971 0.006495 0.001497 0.002073 0.009138 0.009275 0.002118 0.002125 0.009288 0.009159 0.002083 0.001894 0.008272 0.008128 0.001847 0.001957 0.008549 0.008412 0.001912 0.001902 0.008459 0.008843 0.002028 0.002026 0.00878 0.008389 0.001899 0.00227 0.010107 0.010611 0.002434 0.002372 0.010338 0.010093 0.002292 0.001993 0.008702 0.00855 0.001943 0.002017 0.008927 0.009191 0.002103 0.002852 0.012704 0.01336 0.003066 0.002897 0.012518 0.011834 0.002674 0.001981 0.00869 0.008686 0.001979 0.002134 0.00943 0.009665 0.00221 0.002512 0.011085 0.011305 0.002583 0.003303 0.01435 0.013838 0.003137 0.002462 0.010674 0.010208 0.002311 0.002219 0.009831 0.010164 0.002327 0.002016 0.008726 0.008302 0.001878 0.00268 0.011735 0.011643 0.00265 0.002394 0.010364 0.009872 0.002234 0.002006 0.008847 0.009004 0.002057 0.001866 0.008121 0.007877 0.001787 0.004225 0.018145 0.016757 0.003773 0.002425 0.010688 0.010857 0.00248 0.002167 0.009329 0.008692 0.00196 0.001887 0.008323 0.008469 0.001935 0.002272 0.009852 0.009435 0.002136 0.001996 0.009002 0.009846 0.002271 0.002912 0.01281 0.012913 0.002946 0.003313 0.014635 0.014965 0.003421 0.002382 0.010614 0.011175 0.002565 0.002824 0.012131 0.011208 0.002524 0.001957 0.008613 0.0087 0.001985 0.002779 0.012413 0.013174 0.003027 0.001978 0.008871 0.009533 0.002194 0.002765 0.01205 0.011755 0.002669 0.002004 0.008594 0.007898 0.001777 0.002516 0.01132 0.012295 0.002833 0.001614 0.007115 0.007232 0.001652 0.001904 0.008471 0.008871 0.002034 0.002221 0.009709 0.009582 0.002179 0.002153 0.009455 0.009473 0.002159 0.002303 0.009989 0.009573 0.002168 0.001869 0.008306 0.008669 0.001987 0.002086 0.009092 0.008871 0.002014 0.001721 0.007489 0.007272 0.00165 0.001244 0.005522 0.005748 0.001317 0.001453 0.0063 0.006027 0.001364 0.001418 0.006324 0.006681 0.001534 0.001385 0.006003 0.005732 0.001297 0.00152 0.006656 0.006601 0.001502 0.001541 0.006845 0.007128 0.001633 0.001519 0.006534 0.006074 0.001369 0.001535 0.006828 0.007149 0.00164 0.001192 0.005231 0.005231 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.002253 0.010138 0.011264 0.0625 0.064753 0.072638 0.073764 0.125 0.127253 0.135138 0.136264 0.1875 0.189753 0.197638 0.198764 0.25 0.252253 0.260138 0.261264 0.3125 0.314753 0.322638 0.323764 0.375 0.377253 0.385138 0.386264 0.4375 0.439753 0.447638 0.448764 0.5 0.502253 0.510138 0.511264 0.5625 0.564753 0.572638 0.573764 0.625 0.627253 0.635138 0.636264 0.6875 0.689753 0.697638 0.698764 0.75 0.752253 0.760138 0.761264 0.8125 0.814753 0.822638 0.823764 0.875 0.877253 0.885138 0.886264 0.9375 0.939753 0.947638 0.948764 1.0 1.002253 1.010138 1.011264 1.0625 1.064753 1.072638 1.073764 1.125 1.127253 1.135138 1.136264 1.1875 1.189753 1.197638 1.198764 1.25 1.252253 1.260138 1.261264 1.3125 1.314753 1.322638 1.323764 1.375 1.377253 1.385138 1.386264 1.4375 1.439753 1.447638 1.448764 1.5 1.502253 1.510138 1.511264 1.5625 1.564753 1.572638 1.573764 1.625 1.627253 1.635138 1.636264 1.6875 1.689753 1.697638 1.698764 1.75 1.752253 1.760138 1.761264 1.8125 1.814753 1.822638 1.823764 1.875 1.877253 1.885138 1.886264 1.9375 1.939753 1.947638 1.948764 2.0 2.002253 2.010138 2.011264 2.0625 2.064753 2.072638 2.073764 2.125 2.127253 2.135138 2.136264 2.1875 2.189753 2.197638 2.198764 2.25 2.252253 2.260138 2.261264 2.3125 2.314753 2.322638 2.323764 2.375 2.377253 2.385138 2.386264 2.4375 2.439753 2.447638 2.448764 2.5 2.502253 2.510138 2.511264 2.5625 2.564753 2.572638 2.573764 2.625 2.627253 2.635138 2.636264 2.6875 2.689753 2.697638 2.698764 2.75 2.752253 2.760138 2.761264 2.8125 2.814753 2.822638 2.823764 2.875 2.877253 2.885138 2.886264 2.9375 2.939753 2.947638 2.948764 3.0 3.002253 3.010138 3.011264 3.0625 3.064753 3.072638 3.073764 3.125 3.127253 3.135138 3.136264 3.1875 3.189753 3.197638 3.198764 3.25 3.252253 3.260138 3.261264 3.3125 3.314753 3.322638 3.323764 3.375 3.377253 3.385138 3.386264 3.4375 3.439753 3.447638 3.448764 3.5 3.502253 3.510138 3.511264 3.5625 3.564753 3.572638 3.573764 3.625 3.627253 3.635138 3.636264 3.6875 3.689753 3.697638 3.698764 3.75 3.752253 3.760138 3.761264 3.8125 3.814753 3.822638 3.823764 3.875 3.877253 3.885138 3.886264 3.9375 3.939753 3.947638 3.948764 4.0 4.002253 4.010138 4.011264 4.0625)) (quote (0.0 3.6E-5 5.6E-5 1.7E-5 6.6E-5 2.4E-4 2.85E-4 8.4E-5 1.27E-4 4.37E-4 4.36E-4 1.26E-4 1.08E-4 3.68E-4 3.55E-4 1.02E-4 1.2E-4 4.27E-4 4.63E-4 1.35E-4 2.01E-4 7.02E-4 7.31E-4 2.13E-4 1.9E-4 6.39E-4 5.83E-4 1.67E-4 1.82E-4 6.39E-4 6.71E-4 1.96E-4 1.47E-4 5.13E-4 5.27E-4 1.53E-4 1.75E-4 6.08E-4 6.12E-4 1.77E-4 1.83E-4 6.32E-4 6.33E-4 1.83E-4 2.09E-4 7.29E-4 7.47E-4 2.17E-4 2.0E-4 6.82E-4 6.42E-4 1.84E-4 1.57E-4 5.59E-4 6.22E-4 1.82E-4 2.36E-4 8.13E-4 8.06E-4 2.33E-4 2.03E-4 6.95E-4 6.76E-4 1.95E-4 2.57E-4 8.84E-4 8.67E-4 2.5E-4 2.07E-4 7.04E-4 6.65E-4 1.91E-4 1.62E-4 5.61E-4 5.7E-4 1.65E-4 2.49E-4 8.76E-4 9.33E-4 2.72E-4 4.57E-4 0.00156 0.001495 4.3E-4 3.1E-4 0.001054 9.95E-4 2.85E-4 3.01E-4 0.001063 0.001141 3.33E-4 4.32E-4 0.001504 0.001547 4.49E-4 3.14E-4 0.00108 0.001063 3.07E-4 2.61E-4 8.88E-4 8.41E-4 2.41E-4 2.84E-4 0.001008 0.001105 3.24E-4 3.15E-4 0.001078 0.001036 2.98E-4 4.68E-4 0.00161 0.00158 4.56E-4 3.92E-4 0.001343 0.001298 3.74E-4 2.58E-4 8.68E-4 7.88E-4 2.25E-4 2.55E-4 8.97E-4 9.49E-4 2.76E-4 3.65E-4 0.001246 0.001185 3.4E-4 2.53E-4 8.72E-4 8.68E-4 2.51E-4 2.12E-4 7.22E-4 6.82E-4 1.96E-4 3.02E-4 0.001069 0.001161 3.4E-4 2.41E-4 8.41E-4 8.7E-4 2.53E-4 2.92E-4 0.001009 0.001005 2.91E-4 2.91E-4 0.001007 0.001011 2.93E-4 2.96E-4 0.001025 0.001026 2.97E-4 4.3E-4 0.001447 0.001313 3.74E-4 2.03E-4 7.13E-4 7.56E-4 2.2E-4 2.99E-4 0.001044 0.001085 3.16E-4 2.73E-4 9.31E-4 8.85E-4 2.54E-4 3.58E-4 0.00122 0.001164 3.34E-4 2.4E-4 8.19E-4 7.85E-4 2.26E-4 2.0E-4 6.95E-4 7.02E-4 2.03E-4 3.23E-4 0.001141 0.001225 3.58E-4 2.44E-4 8.45E-4 8.5E-4 2.46E-4 2.38E-4 8.14E-4 7.86E-4 2.26E-4 2.07E-4 7.18E-4 7.27E-4 2.11E-4 1.93E-4 6.64E-4 6.48E-4 1.87E-4 1.9E-4 6.53E-4 6.44E-4 1.86E-4 1.8E-4 6.27E-4 6.43E-4 1.87E-4 2.52E-4 8.86E-4 9.4E-4 2.74E-4 1.79E-4 5.92E-4 5.03E-4 1.42E-4 1.59E-4 5.59E-4 5.85E-4 1.7E-4 1.91E-4 6.52E-4 6.17E-4 1.77E-4 1.64E-4 5.73E-4 5.97E-4 1.73E-4 1.18E-4 3.95E-4 3.46E-4 9.8E-5 6.9E-5 2.4E-4 2.43E-4 7.0E-5 7.9E-5 2.74E-4 2.84E-4 8.3E-5 8.7E-5 2.98E-4 2.92E-4 8.4E-5 8.5E-5 2.92E-4 2.95E-4 8.5E-5 1.16E-4 4.02E-4 4.02E-4 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.003211 0.014448 0.016054 0.0625 0.065711 0.076948 0.078554 0.125 0.128211 0.139448 0.141054 0.1875 0.190711 0.201948 0.203554 0.25 0.253211 0.264448 0.266054 0.3125 0.315711 0.326948 0.328554 0.375 0.378211 0.389448 0.391054 0.4375 0.440711 0.451948 0.453554 0.5 0.503211 0.514448 0.516054 0.5625 0.565711 0.576948 0.578554 0.625 0.628211 0.639448 0.641054 0.6875 0.690711 0.701948 0.703554 0.75 0.753211 0.764448 0.766054 0.8125 0.815711 0.826948 0.828554 0.875 0.878211 0.889448 0.891054 0.9375 0.940711 0.951948 0.953554 1.0 1.003211 1.014448 1.016054 1.0625 1.065711 1.076948 1.078554 1.125 1.128211 1.139448 1.141054 1.1875 1.190711 1.201948 1.203554 1.25 1.253211 1.264448 1.266054 1.3125 1.315711 1.326948 1.328554 1.375 1.378211 1.389448 1.391054 1.4375 1.440711 1.451948 1.453554 1.5 1.503211 1.514448 1.516054 1.5625 1.565711 1.576948 1.578554 1.625 1.628211 1.639448 1.641054 1.6875 1.690711 1.701948 1.703554 1.75 1.753211 1.764448 1.766054 1.8125 1.815711 1.826948 1.828554 1.875 1.878211 1.889448 1.891054 1.9375 1.940711 1.951948 1.953554 2.0 2.003211 2.014448 2.016054 2.0625 2.065711 2.076948 2.078554 2.125 2.128211 2.139448 2.141054 2.1875 2.190711 2.201948 2.203554 2.25 2.253211 2.264448 2.266054 2.3125 2.315711 2.326948 2.328554 2.375 2.378211 2.389448 2.391054 2.4375 2.440711 2.451948 2.453554 2.5 2.503211 2.514448 2.516054 2.5625 2.565711 2.576948 2.578554 2.625 2.628211 2.639448 2.641054 2.6875 2.690711 2.701948 2.703554 2.75 2.753211 2.764448 2.766054 2.8125 2.815711 2.826948 2.828554 2.875 2.878211 2.889448 2.891054 2.9375 2.940711 2.951948 2.953554 3.0 3.003211 3.014448 3.016054 3.0625 3.065711 3.076948 3.078554 3.125 3.128211 3.139448 3.141054 3.1875 3.190711 3.201948 3.203554 3.25 3.253211 3.264448 3.266054 3.3125 3.315711 3.326948 3.328554 3.375 3.378211 3.389448 3.391054 3.4375 3.440711 3.451948 3.453554 3.5 3.503211 3.514448 3.516054 3.5625 3.565711 3.576948 3.578554 3.625 3.628211 3.639448 3.641054 3.6875 3.690711 3.701948 3.703554 3.75 3.753211 3.764448 3.766054 3.8125 3.815711 3.826948 3.828554 3.875 3.878211 3.889448 3.891054 3.9375 3.940711 3.951948 3.953554 4.0 4.003211 4.014448 4.016054 4.0625)) (quote (0.0 4.0E-6 8.0E-6 2.0E-6 6.0E-6 3.0E-5 3.6E-5 8.0E-6 1.1E-5 5.0E-5 5.1E-5 1.1E-5 1.8E-5 8.3E-5 9.6E-5 2.2E-5 4.9E-5 2.17E-4 2.04E-4 4.5E-5 3.3E-5 1.45E-4 1.35E-4 3.0E-5 2.6E-5 1.15E-4 1.17E-4 2.6E-5 1.7E-5 7.2E-5 6.3E-5 1.4E-5 2.4E-5 1.08E-4 1.12E-4 2.5E-5 3.3E-5 1.55E-4 1.77E-4 4.0E-5 5.9E-5 2.71E-4 2.91E-4 6.6E-5 3.4E-5 1.41E-4 1.01E-4 2.3E-5 1.9E-5 8.7E-5 9.2E-5 2.0E-5 4.0E-5 1.97E-4 2.64E-4 6.1E-5 6.0E-5 2.5E-4 1.91E-4 4.1E-5 2.3E-5 1.02E-4 1.06E-4 2.6E-5 8.4E-5 3.65E-4 3.2E-4 7.0E-5 4.1E-5 1.88E-4 1.97E-4 4.4E-5 3.7E-5 1.59E-4 1.36E-4 3.0E-5 6.5E-5 3.07E-4 3.42E-4 7.5E-5 2.9E-5 1.3E-4 1.26E-4 2.8E-5 3.4E-5 1.63E-4 2.01E-4 4.6E-5 6.4E-5 2.86E-4 2.89E-4 6.5E-5 6.5E-5 2.9E-4 2.85E-4 6.3E-5 4.3E-5 2.24E-4 3.4E-4 7.9E-5 1.33E-4 5.67E-4 4.67E-4 1.01E-4 6.5E-5 2.93E-4 3.06E-4 6.9E-5 5.0E-5 2.17E-4 1.92E-4 4.2E-5 3.1E-5 1.42E-4 1.55E-4 3.5E-5 4.2E-5 1.87E-4 1.8E-4 4.0E-5 5.2E-5 2.43E-4 2.75E-4 6.2E-5 5.9E-5 2.62E-4 2.51E-4 5.6E-5 4.7E-5 2.35E-4 3.2E-4 7.4E-5 1.28E-4 5.69E-4 5.54E-4 1.23E-4 8.2E-5 3.48E-4 2.77E-4 6.0E-5 3.6E-5 1.58E-4 1.54E-4 3.6E-5 7.7E-5 3.36E-4 3.0E-4 6.6E-5 4.6E-5 2.13E-4 2.34E-4 5.3E-5 4.4E-5 1.85E-4 1.48E-4 3.2E-5 5.2E-5 2.45E-4 2.75E-4 6.2E-5 6.8E-5 2.94E-4 2.65E-4 5.8E-5 3.7E-5 1.66E-4 1.64E-4 3.6E-5 3.1E-5 1.35E-4 1.26E-4 2.8E-5 2.3E-5 1.04E-4 1.01E-4 2.3E-5 2.7E-5 1.65E-4 3.24E-4 7.7E-5 1.51E-4 6.36E-4 5.0E-4 1.07E-4 8.9E-5 4.24E-4 5.07E-4 1.16E-4 4.9E-5 1.9E-4 1.1E-4 2.7E-5 8.0E-5 3.58E-4 3.5E-4 7.8E-5 5.9E-5 2.5E-4 1.96E-4 4.2E-5 5.6E-5 2.71E-4 3.44E-4 7.9E-5 3.3E-5 1.27E-4 7.3E-5 1.8E-5 7.4E-5 3.2E-4 2.77E-4 6.1E-5 2.7E-5 1.18E-4 1.0E-4 2.2E-5 1.7E-5 7.7E-5 8.3E-5 1.9E-5 2.5E-5 1.14E-4 1.19E-4 2.7E-5 2.4E-5 1.06E-4 9.5E-5 2.1E-5 2.6E-5 1.29E-4 1.78E-4 4.1E-5 3.9E-5 1.6E-4 1.12E-4 2.4E-5 3.9E-5 1.84E-4 2.05E-4 4.5E-5 2.2E-5 1.0E-4 9.9E-5 2.2E-5 2.0E-5 8.7E-5 8.3E-5 1.8E-5 3.1E-5 1.48E-4 1.79E-4 4.1E-5 2.0E-5 7.8E-5 4.8E-5 1.1E-5 1.0E-5 4.6E-5 4.6E-5 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.004414 0.019861 0.022068 0.0625 0.066914 0.082361 0.084568 0.125 0.129414 0.144861 0.147068 0.1875 0.191914 0.207361 0.209568 0.25 0.254414 0.269861 0.272068 0.3125 0.316914 0.332361 0.334568 0.375 0.379414 0.394861 0.397068 0.4375 0.441914 0.457361 0.459568 0.5 0.504414 0.519861 0.522068 0.5625 0.566914 0.582361 0.584568 0.625 0.629414 0.644861 0.647068 0.6875 0.691914 0.707361 0.709568 0.75 0.754414 0.769861 0.772068 0.8125 0.816914 0.832361 0.834568 0.875 0.879414 0.894861 0.897068 0.9375 0.941914 0.957361 0.959568 1.0 1.004414 1.019861 1.022068 1.0625 1.066914 1.082361 1.084568 1.125 1.129414 1.144861 1.147068 1.1875 1.191914 1.207361 1.209568 1.25 1.254414 1.269861 1.272068 1.3125 1.316914 1.332361 1.334568 1.375 1.379414 1.394861 1.397068 1.4375 1.441914 1.457361 1.459568 1.5 1.504414 1.519861 1.522068 1.5625 1.566914 1.582361 1.584568 1.625 1.629414 1.644861 1.647068 1.6875 1.691914 1.707361 1.709568 1.75 1.754414 1.769861 1.772068 1.8125 1.816914 1.832361 1.834568 1.875 1.879414 1.894861 1.897068 1.9375 1.941914 1.957361 1.959568 2.0 2.004414 2.019861 2.022068 2.0625 2.066914 2.082361 2.084568 2.125 2.129414 2.144861 2.147068 2.1875 2.191914 2.207361 2.209568 2.25 2.254414 2.269861 2.272068 2.3125 2.316914 2.332361 2.334568 2.375 2.379414 2.394861 2.397068 2.4375 2.441914 2.457361 2.459568 2.5 2.504414 2.519861 2.522068 2.5625 2.566914 2.582361 2.584568 2.625 2.629414 2.644861 2.647068 2.6875 2.691914 2.707361 2.709568 2.75 2.754414 2.769861 2.772068 2.8125 2.816914 2.832361 2.834568 2.875 2.879414 2.894861 2.897068 2.9375 2.941914 2.957361 2.959568 3.0 3.004414 3.019861 3.022068 3.0625 3.066914 3.082361 3.084568 3.125 3.129414 3.144861 3.147068 3.1875 3.191914 3.207361 3.209568 3.25 3.254414 3.269861 3.272068 3.3125 3.316914 3.332361 3.334568 3.375 3.379414 3.394861 3.397068 3.4375 3.441914 3.457361 3.459568 3.5 3.504414 3.519861 3.522068 3.5625 3.566914 3.582361 3.584568 3.625 3.629414 3.644861 3.647068 3.6875 3.691914 3.707361 3.709568 3.75 3.754414 3.769861 3.772068 3.8125 3.816914 3.832361 3.834568 3.875 3.879414 3.894861 3.897068 3.9375 3.941914 3.957361 3.959568 4.0 4.004414 4.019861 4.022068 4.0625)) (quote (0.0 2.0E-6 5.0E-6 1.0E-6 3.0E-6 1.2E-5 1.2E-5 3.0E-6 5.0E-6 2.3E-5 2.9E-5 6.0E-6 1.0E-5 4.9E-5 8.2E-5 2.0E-5 5.5E-5 2.36E-4 1.78E-4 3.7E-5 1.9E-5 9.8E-5 1.29E-4 2.9E-5 3.6E-5 1.65E-4 1.67E-4 3.6E-5 1.2E-5 4.4E-5 2.3E-5 5.0E-6 8.0E-6 4.9E-5 9.3E-5 2.2E-5 3.5E-5 1.55E-4 1.32E-4 2.8E-5 3.1E-5 1.49E-4 1.72E-4 3.8E-5 1.4E-5 5.4E-5 3.3E-5 7.0E-6 1.2E-5 5.5E-5 5.7E-5 1.2E-5 2.2E-5 1.13E-4 1.58E-4 3.6E-5 3.0E-5 1.28E-4 8.4E-5 1.7E-5 9.0E-6 3.6E-5 7.9E-5 2.0E-5 7.8E-5 3.53E-4 3.22E-4 6.9E-5 4.9E-5 2.16E-4 1.72E-4 3.6E-5 1.9E-5 8.0E-5 5.6E-5 1.2E-5 3.7E-5 1.85E-4 1.9E-4 4.0E-5 1.4E-5 6.0E-5 4.9E-5 1.0E-5 1.6E-5 9.3E-5 1.53E-4 3.5E-5 3.4E-5 1.48E-4 1.09E-4 2.2E-5 2.9E-5 1.37E-4 1.36E-4 2.9E-5 1.9E-5 1.5E-4 3.59E-4 8.4E-5 1.32E-4 5.56E-4 3.63E-4 7.3E-5 3.5E-5 1.65E-4 1.76E-4 3.8E-5 2.6E-5 1.15E-4 9.3E-5 1.9E-5 8.0E-6 4.2E-5 5.4E-5 1.2E-5 1.5E-5 6.9E-5 6.2E-5 1.3E-5 3.0E-5 1.52E-4 2.03E-4 4.5E-5 3.9E-5 1.76E-4 1.56E-4 3.3E-5 2.0E-5 1.35E-4 2.78E-4 6.4E-5 1.14E-4 5.19E-4 4.86E-4 1.04E-4 5.8E-5 2.37E-4 1.26E-4 2.4E-5 1.0E-5 4.0E-5 5.4E-5 1.3E-5 4.1E-5 1.84E-4 1.62E-4 3.4E-5 2.5E-5 1.15E-4 1.12E-4 2.4E-5 1.7E-5 7.6E-5 5.8E-5 1.2E-5 5.8E-5 2.96E-4 3.28E-4 7.0E-5 5.1E-5 2.22E-4 1.74E-4 3.6E-5 1.5E-5 6.6E-5 5.3E-5 1.1E-5 1.2E-5 5.6E-5 6.6E-5 1.4E-5 7.0E-6 3.1E-5 2.4E-5 5.0E-6 6.0E-6 1.03E-4 3.6E-4 8.6E-5 1.47E-4 6.16E-4 3.92E-4 7.8E-5 7.7E-5 3.95E-4 5.32E-4 1.19E-4 3.6E-5 1.2E-4 8.4E-5 2.1E-5 8.3E-5 3.67E-4 3.15E-4 6.6E-5 3.7E-5 1.59E-4 1.1E-4 2.2E-5 5.1E-5 2.66E-4 3.76E-4 8.5E-5 2.5E-5 8.0E-5 4.5E-5 1.2E-5 4.9E-5 2.11E-4 1.62E-4 3.4E-5 1.2E-5 5.0E-5 3.5E-5 7.0E-6 5.0E-6 2.6E-5 3.1E-5 7.0E-6 1.3E-5 6.4E-5 6.5E-5 1.4E-5 8.0E-6 3.7E-5 3.5E-5 8.0E-6 2.2E-5 1.29E-4 2.18E-4 5.0E-5 3.9E-5 1.54E-4 6.7E-5 1.2E-5 2.9E-5 1.43E-4 1.5E-4 3.2E-5 1.5E-5 6.9E-5 6.4E-5 1.4E-5 1.0E-5 4.7E-5 4.2E-5 9.0E-6 2.5E-5 1.3E-4 1.78E-4 4.0E-5 1.3E-5 4.3E-5 1.3E-5 3.0E-6 3.0E-6 1.3E-5 1.3E-5 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)))) (when (member (quote bw) (get-init-slots-of-class (quote ch-fof)) :key (quote car)) (setf (slot-value rep (quote bw)) (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (89.159 74.835 72.564 72.475 72.684 72.515 72.616 72.479 72.473 72.649 72.581 72.485 72.852 72.495 72.558 72.902 72.501 73.128 72.615 72.602 72.555 73.233 73.037 72.567 72.614 73.295 72.659 72.674 72.796 73.277 72.99 73.456 73.119 73.472 73.322 72.883 73.29 73.357 73.389 72.952 73.522 73.649 72.706 73.742 72.975 72.86 72.751 73.547 73.508 72.874 73.015 72.678 72.969 72.835 72.7 72.636 72.871 72.952 72.704 73.116 72.725 72.495 72.673 72.668 72.583 72.495 72.728 72.525 72.516 72.635 72.598 72.517 72.473 72.474 72.701 72.644 72.993 72.843 72.886 72.862 72.621)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (73.219 74.53 76.76 77.916 77.511 76.833 77.436 76.445 77.018 77.146 77.519 78.948 77.882 79.283 78.94 79.933 77.99 80.109 78.566 78.955 78.127 78.431 78.091 77.878 79.19 81.254 78.145 80.685 79.389 81.298 80.484 80.15 78.618 81.625 81.452 81.754 79.393 78.435 78.528 78.485 79.287 81.521 79.46 78.587 78.428 80.952 81.07 80.466 79.401 78.676 78.206 80.578 78.938 79.639 78.316 79.354 79.078 79.753 79.223 79.35 78.621 77.346 77.77 78.477 77.273 80.142 78.014 79.036 77.398 78.237 79.024 76.631 77.583 77.316 78.328 77.091 77.237 75.965 77.78 76.193 77.103)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (87.061 94.025 92.432 95.516 95.87 94.828 91.34 96.719 93.434 91.608 93.616 95.807 97.77 94.747 94.512 97.504 98.676 96.176 94.652 98.846 95.645 97.086 98.313 94.67 97.257 96.996 94.552 99.2 93.177 95.847 95.974 98.439 97.098 98.213 98.059 94.012 99.047 96.412 98.412 95.477 95.047 97.121 96.552 95.115 98.61 95.503 98.339 96.789 94.03 98.92 93.939 99.012 98.045 93.729 93.136 96.637 93.403 96.019 98.759 95.511 95.5 96.015 96.246 93.861 97.64 92.526 92.879 93.035 96.165 95.14 94.616 95.815 92.299 91.42 92.911 93.203 90.164 92.462 91.759 94.729 94.803)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (117.015 116.052 121.667 113.659 117.569 121.777 119.591 121.592 116.727 114.636 115.709 117.306 122.217 114.232 121.875 120.187 120.753 116.88 117.817 115.853 122.337 123.176 120.993 115.167 119.052 121.831 116.892 120.004 119.683 122.328 118.613 117.658 120.66 122.026 124.377 120.187 118.225 121.824 122.231 123.298 119.763 115.704 122.033 118.409 121.273 123.56 116.735 122.986 116.869 117.105 123.614 122.329 120.061 116.483 116.603 116.036 121.432 115.193 114.554 116.701 117.622 119.864 115.843 119.605 116.556 114.686 115.897 120.094 120.371 121.152 118.365 117.753 118.695 113.629 118.588 117.062 120.554 115.015 118.159 116.779 115.159)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (120.46 124.379 120.041 118.737 123.732 120.928 119.239 120.036 126.975 129.429 123.799 125.279 123.675 129.431 126.611 128.047 129.667 121.17 127.728 124.717 124.766 127.007 125.694 125.281 125.919 127.569 122.343 127.412 123.948 127.962 122.117 128.478 123.204 128.646 122.421 126.62 126.331 130.168 129.707 122.515 128.629 125.412 123.253 130.411 122.005 121.809 126.324 122.18 122.267 120.934 130.076 130.019 122.456 125.1 123.883 120.39 129.797 122.032 120.725 127.49 129.315 129.387 129.049 127.516 128.397 127.672 123.03 120.294 127.146 122.85 120.284 121.83 126.821 122.691 122.507 127.024 128.103 126.521 123.845 124.687 121.81)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)))) (when (member (quote win) (get-init-slots-of-class (quote ch-fof)) :key (quote car)) (setf (slot-value rep (quote win)) 0.003)) (when (member (quote wdur) (get-init-slots-of-class (quote ch-fof)) :key (quote car)) (setf (slot-value rep (quote wdur)) 0.02)) (when (member (quote wout) (get-init-slots-of-class (quote ch-fof)) :key (quote car)) (setf (slot-value rep (quote wout)) 0.007)) (when (member (quote phs) (get-init-slots-of-class (quote ch-fof)) :key (quote car)) (setf (slot-value rep (quote phs)) 0)) (setf (lcontrols rep) (list)) (setf (action-time rep) 0) (setf (data rep) (list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (106.154 193.64 265.236 276.46 306.88 289.993 318.334 296.684 335.014 344.017 367.787 335.743 329.982 324.708 332.664 345.981 386.059 349.242 339.415 387.056 353.617 367.986 382.881 373.988 361.373 413.825 405.185 370.316 384.969 398.538 365.261 424.192 362.037 396.201 414.59 376.317 363.353 372.291 389.61 383.516 404.212 395.017 386.384 415.799 373.642 410.817 361.771 422.971 421.673 428.459 367.577 358.173 365.607 378.23 399.576 377.974 397.146 407.198 396.456 346.049 367.058 347.008 376.373 327.881 336.618 358.873 368.81 320.717 352.266 317.264 331.128 290.916 279.931 324.903 281.929 292.347 307.219 257.428 285.657 279.224 277.375)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (372.279 521.936 560.693 612.332 637.717 587.496 663.818 617.406 583.954 609.421 695.812 668.993 705.487 674.564 655.316 626.01 600.66 704.741 684.847 628.753 678.016 672.569 695.882 656.727 723.471 688.548 623.745 689.516 727.493 709.615 677.822 625.607 706.594 720.369 656.177 748.678 755.584 752.974 768.734 764.523 639.101 690.041 705.081 656.17 713.801 726.222 663.292 647.444 648.409 629.619 716.126 690.8 661.505 632.647 638.356 656.482 612.36 724.241 694.821 628.433 688.481 642.685 597.932 631.579 629.773 610.093 591.713 606.14 591.624 626.29 581.334 671.765 627.381 643.709 537.602 619.528 609.587 577.885 532.374 577.253 614.548)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (942.099 995.333 1162.989 1280.575 1111.701 1323.518 1109.52 1211.237 1346.683 1150.184 1128.401 1236.946 1157.541 1133.508 1154.225 1234.657 1194.76 1238.073 1254.234 1335.9 1217.208 1329.947 1394.228 1376.512 1288.188 1342.679 1406.502 1235.138 1235.422 1181.102 1246.369 1337.693 1270.338 1384.274 1412.278 1234.845 1276.268 1294.808 1339.446 1262.503 1340.465 1332.53 1234.97 1289.031 1345.768 1331.354 1361.859 1315.384 1301.6 1352.759 1372.357 1273.652 1323.939 1222.357 1382.296 1264.703 1219.807 1353.684 1242.651 1235.802 1264.023 1150.717 1208.442 1326.857 1290.192 1299.6 1262.683 1285.479 1284.987 1140.0 1295.336 1316.557 1128.647 1216.545 1243.497 1151.275 1112.453 1239.882 1283.737 1054.841 1233.022)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (2077.764 2178.34 2236.086 2166.274 1987.461 2089.926 2226.912 2299.637 2382.605 2058.562 2101.025 2373.897 2094.188 2285.421 2391.526 2403.916 2115.98 2053.872 2420.603 2276.04 2290.106 2287.341 2282.297 2280.575 2108.78 2176.415 2371.253 2469.714 2364.714 2425.908 2284.957 2174.541 2296.091 2408.005 2484.225 2299.087 2251.605 2292.301 2323.32 2423.483 2406.902 2323.361 2372.147 2226.372 2274.557 2384.634 2101.641 2453.033 2351.643 2478.587 2369.746 2352.756 2427.492 2182.076 2483.061 2141.066 2220.918 2204.533 2279.634 2322.065 2031.926 2125.206 2300.403 2400.675 2354.666 2220.668 2238.061 2020.036 2224.79 2401.272 2006.287 2284.427 2313.098 2060.111 2049.026 2112.158 2304.487 2151.275 2094.529 2232.103 1965.391)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.003504 0.01577 0.017522 0.0625 0.066004 0.07827 0.080022 0.125 0.128504 0.14077 0.142522 0.1875 0.191004 0.20327 0.205022 0.25 0.253504 0.26577 0.267522 0.3125 0.316004 0.32827 0.330022 0.375 0.378504 0.39077 0.392522 0.4375 0.441004 0.45327 0.455022 0.5 0.503504 0.51577 0.517522 0.5625 0.566004 0.57827 0.580022 0.625 0.628504 0.64077 0.642522 0.6875 0.691004 0.70327 0.705022 0.75 0.753504 0.76577 0.767522 0.8125 0.816004 0.82827 0.830022 0.875 0.878504 0.89077 0.892522 0.9375 0.941004 0.95327 0.955022 1.0 1.003504 1.01577 1.017522 1.0625 1.066004 1.07827 1.080022 1.125 1.128504 1.14077 1.142522 1.1875 1.191004 1.20327 1.205022 1.25 1.253504 1.26577 1.267522 1.3125 1.316004 1.32827 1.330022 1.375 1.378504 1.39077 1.392522 1.4375 1.441004 1.45327 1.455022 1.5 1.503504 1.51577 1.517522 1.5625 1.566004 1.57827 1.580022 1.625 1.628504 1.64077 1.642522 1.6875 1.691004 1.70327 1.705022 1.75 1.753504 1.76577 1.767522 1.8125 1.816004 1.82827 1.830022 1.875 1.878504 1.89077 1.892522 1.9375 1.941004 1.95327 1.955022 2.0 2.003505 2.01577 2.017522 2.0625 2.066005 2.07827 2.080022 2.125 2.128505 2.14077 2.142522 2.1875 2.191005 2.20327 2.205022 2.25 2.253505 2.26577 2.267522 2.3125 2.316005 2.32827 2.330022 2.375 2.378505 2.39077 2.392522 2.4375 2.441005 2.45327 2.455022 2.5 2.503505 2.51577 2.517522 2.5625 2.566005 2.57827 2.580022 2.625 2.628505 2.64077 2.642522 2.6875 2.691005 2.70327 2.705022 2.75 2.753505 2.76577 2.767522 2.8125 2.816005 2.82827 2.830022 2.875 2.878505 2.89077 2.892522 2.9375 2.941005 2.95327 2.955022 3.0 3.003505 3.01577 3.017522 3.0625 3.066005 3.07827 3.080022 3.125 3.128505 3.14077 3.142522 3.1875 3.191005 3.20327 3.205022 3.25 3.253505 3.26577 3.267522 3.3125 3.316005 3.32827 3.330022 3.375 3.378505 3.39077 3.392522 3.4375 3.441005 3.45327 3.455022 3.5 3.503505 3.51577 3.517522 3.5625 3.566005 3.57827 3.580022 3.625 3.628505 3.64077 3.642522 3.6875 3.691005 3.70327 3.705022 3.75 3.753505 3.76577 3.767522 3.8125 3.816005 3.82827 3.830022 3.875 3.878505 3.89077 3.892522 3.9375 3.941005 3.95327 3.955022 4.0 4.003504 4.01577 4.017522 4.0625)) (quote (0.0 0.011809 0.012341 0.003075 0.003581 0.014638 0.015262 0.003802 0.00417 0.016903 0.017134 0.004251 0.00455 0.018472 0.018599 0.004589 0.004155 0.016899 0.017327 0.004306 0.004542 0.018289 0.018112 0.004479 0.004502 0.018231 0.018418 0.004568 0.004804 0.019477 0.019488 0.004801 0.00415 0.016966 0.017699 0.004409 0.004929 0.019946 0.020102 0.004984 0.004991 0.020123 0.020013 0.004952 0.004702 0.018898 0.01871 0.004639 0.004769 0.019228 0.019119 0.004731 0.004772 0.019397 0.01984 0.004929 0.004834 0.019364 0.018821 0.004642 0.005068 0.020654 0.021126 0.005229 0.005165 0.020756 0.0204 0.00504 0.004783 0.019287 0.019195 0.00475 0.004891 0.01985 0.020202 0.005016 0.005635 0.022968 0.023403 0.005781 0.005391 0.021547 0.020769 0.005116 0.004637 0.018757 0.018878 0.004679 0.004829 0.019556 0.019756 0.0049 0.005167 0.020953 0.021403 0.00533 0.00608 0.024355 0.023665 0.005836 0.005246 0.021029 0.020483 0.005053 0.004965 0.020121 0.020381 0.005057 0.00469 0.018784 0.018546 0.004614 0.005146 0.020792 0.020839 0.005162 0.005032 0.020136 0.019497 0.004806 0.004766 0.019366 0.019795 0.004918 0.004617 0.018503 0.018799 0.004742 0.006956 0.027572 0.025763 0.006316 0.005192 0.021036 0.021281 0.005279 0.004988 0.019922 0.019151 0.004716 0.004538 0.018301 0.018398 0.004577 0.005108 0.020423 0.019708 0.004855 0.00469 0.019279 0.020479 0.005114 0.005705 0.023095 0.023306 0.005779 0.00615 0.024961 0.02496 0.006138 0.005018 0.020571 0.021655 0.005401 0.00574 0.022754 0.021279 0.005218 0.004631 0.018704 0.018721 0.004637 0.005574 0.022862 0.023422 0.005755 0.00458 0.018806 0.019894 0.004965 0.005581 0.022426 0.02204 0.005445 0.004796 0.019087 0.01811 0.00445 0.005252 0.021566 0.022155 0.005443 0.004318 0.017486 0.017663 0.004381 0.004647 0.018931 0.019522 0.004856 0.00499 0.020092 0.019885 0.004917 0.004968 0.020092 0.020206 0.005009 0.005126 0.020549 0.020026 0.004941 0.004719 0.01919 0.019666 0.004887 0.004822 0.019324 0.018813 0.004641 0.004543 0.018336 0.018192 0.004489 0.004069 0.016494 0.016717 0.004148 0.004223 0.016974 0.016695 0.004125 0.00424 0.017247 0.017697 0.004399 0.004249 0.017073 0.016925 0.0042 0.004419 0.017824 0.017761 0.004396 0.004437 0.018007 0.01833 0.004551 0.004384 0.017534 0.016945 0.004176 0.004387 0.017827 0.017988 0.004438 0.004 0.016151 0.016151 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.002434 0.010952 0.012169 0.0625 0.064934 0.073452 0.074669 0.125 0.127434 0.135952 0.137169 0.1875 0.189934 0.198452 0.199669 0.25 0.252434 0.260952 0.262169 0.3125 0.314934 0.323452 0.324669 0.375 0.377434 0.385952 0.387169 0.4375 0.439934 0.448452 0.449669 0.5 0.502434 0.510952 0.512169 0.5625 0.564934 0.573452 0.574669 0.625 0.627434 0.635952 0.637169 0.6875 0.689934 0.698452 0.699669 0.75 0.752434 0.760952 0.762169 0.8125 0.814934 0.823452 0.824669 0.875 0.877434 0.885952 0.887169 0.9375 0.939934 0.948452 0.949669 1.0 1.002434 1.010952 1.012169 1.0625 1.064934 1.073452 1.074669 1.125 1.127434 1.135952 1.137169 1.1875 1.189934 1.198452 1.199669 1.25 1.252434 1.260952 1.262169 1.3125 1.314934 1.323452 1.324669 1.375 1.377434 1.385952 1.387169 1.4375 1.439934 1.448452 1.449669 1.5 1.502434 1.510952 1.512169 1.5625 1.564934 1.573452 1.574669 1.625 1.627434 1.635952 1.637169 1.6875 1.689934 1.698452 1.699669 1.75 1.752434 1.760952 1.762169 1.8125 1.814934 1.823452 1.824669 1.875 1.877434 1.885952 1.887169 1.9375 1.939934 1.948452 1.949669 2.0 2.002434 2.010952 2.012169 2.0625 2.064934 2.073452 2.074669 2.125 2.127434 2.135952 2.137169 2.1875 2.189934 2.198452 2.199669 2.25 2.252434 2.260952 2.262169 2.3125 2.314934 2.323452 2.324669 2.375 2.377434 2.385952 2.387169 2.4375 2.439934 2.448452 2.449669 2.5 2.502434 2.510952 2.512169 2.5625 2.564934 2.573452 2.574669 2.625 2.627434 2.635952 2.637169 2.6875 2.689934 2.698452 2.699669 2.75 2.752434 2.760952 2.762169 2.8125 2.814934 2.823452 2.824669 2.875 2.877434 2.885952 2.887169 2.9375 2.939934 2.948452 2.949669 3.0 3.002434 3.010952 3.012169 3.0625 3.064934 3.073452 3.074669 3.125 3.127434 3.135952 3.137169 3.1875 3.189934 3.198452 3.199669 3.25 3.252434 3.260952 3.262169 3.3125 3.314934 3.323452 3.324669 3.375 3.377434 3.385952 3.387169 3.4375 3.439934 3.448452 3.449669 3.5 3.502434 3.510952 3.512169 3.5625 3.564934 3.573452 3.574669 3.625 3.627434 3.635952 3.637169 3.6875 3.689934 3.698452 3.699669 3.75 3.752434 3.760952 3.762169 3.8125 3.814934 3.823452 3.824669 3.875 3.877434 3.885952 3.887169 3.9375 3.939934 3.948452 3.949669 4.0 4.002434 4.010952 4.012169 4.0625)) (quote (0.0 0.001162 0.001474 3.46E-4 8.13E-4 0.003697 0.004151 9.6E-4 0.001356 0.005988 0.006121 0.001399 0.001687 0.007474 0.007716 0.001766 0.001316 0.005873 0.006225 0.00143 0.001758 0.007689 0.007604 0.00173 0.001696 0.007453 0.007488 0.001708 0.001951 0.008629 0.008859 0.002026 0.001326 0.005971 0.006495 0.001497 0.002073 0.009138 0.009275 0.002118 0.002125 0.009288 0.009159 0.002083 0.001894 0.008272 0.008128 0.001847 0.001957 0.008549 0.008412 0.001912 0.001902 0.008459 0.008843 0.002028 0.002026 0.00878 0.008389 0.001899 0.00227 0.010107 0.010611 0.002434 0.002372 0.010338 0.010093 0.002292 0.001993 0.008702 0.00855 0.001943 0.002017 0.008927 0.009191 0.002103 0.002852 0.012704 0.01336 0.003066 0.002897 0.012518 0.011834 0.002674 0.001981 0.00869 0.008686 0.001979 0.002134 0.00943 0.009665 0.00221 0.002512 0.011085 0.011305 0.002583 0.003303 0.01435 0.013838 0.003137 0.002462 0.010674 0.010208 0.002311 0.002219 0.009831 0.010164 0.002327 0.002016 0.008726 0.008302 0.001878 0.00268 0.011735 0.011643 0.00265 0.002394 0.010364 0.009872 0.002234 0.002006 0.008847 0.009004 0.002057 0.001866 0.008121 0.007877 0.001787 0.004225 0.018145 0.016757 0.003773 0.002425 0.010688 0.010857 0.00248 0.002167 0.009329 0.008692 0.00196 0.001887 0.008323 0.008469 0.001935 0.002272 0.009852 0.009435 0.002136 0.001996 0.009002 0.009846 0.002271 0.002912 0.01281 0.012913 0.002946 0.003313 0.014635 0.014965 0.003421 0.002382 0.010614 0.011175 0.002565 0.002824 0.012131 0.011208 0.002524 0.001957 0.008613 0.0087 0.001985 0.002779 0.012413 0.013174 0.003027 0.001978 0.008871 0.009533 0.002194 0.002765 0.01205 0.011755 0.002669 0.002004 0.008594 0.007898 0.001777 0.002516 0.01132 0.012295 0.002833 0.001614 0.007115 0.007232 0.001652 0.001904 0.008471 0.008871 0.002034 0.002221 0.009709 0.009582 0.002179 0.002153 0.009455 0.009473 0.002159 0.002303 0.009989 0.009573 0.002168 0.001869 0.008306 0.008669 0.001987 0.002086 0.009092 0.008871 0.002014 0.001721 0.007489 0.007272 0.00165 0.001244 0.005522 0.005748 0.001317 0.001453 0.0063 0.006027 0.001364 0.001418 0.006324 0.006681 0.001534 0.001385 0.006003 0.005732 0.001297 0.00152 0.006656 0.006601 0.001502 0.001541 0.006845 0.007128 0.001633 0.001519 0.006534 0.006074 0.001369 0.001535 0.006828 0.007149 0.00164 0.001192 0.005231 0.005231 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.002253 0.010138 0.011264 0.0625 0.064753 0.072638 0.073764 0.125 0.127253 0.135138 0.136264 0.1875 0.189753 0.197638 0.198764 0.25 0.252253 0.260138 0.261264 0.3125 0.314753 0.322638 0.323764 0.375 0.377253 0.385138 0.386264 0.4375 0.439753 0.447638 0.448764 0.5 0.502253 0.510138 0.511264 0.5625 0.564753 0.572638 0.573764 0.625 0.627253 0.635138 0.636264 0.6875 0.689753 0.697638 0.698764 0.75 0.752253 0.760138 0.761264 0.8125 0.814753 0.822638 0.823764 0.875 0.877253 0.885138 0.886264 0.9375 0.939753 0.947638 0.948764 1.0 1.002253 1.010138 1.011264 1.0625 1.064753 1.072638 1.073764 1.125 1.127253 1.135138 1.136264 1.1875 1.189753 1.197638 1.198764 1.25 1.252253 1.260138 1.261264 1.3125 1.314753 1.322638 1.323764 1.375 1.377253 1.385138 1.386264 1.4375 1.439753 1.447638 1.448764 1.5 1.502253 1.510138 1.511264 1.5625 1.564753 1.572638 1.573764 1.625 1.627253 1.635138 1.636264 1.6875 1.689753 1.697638 1.698764 1.75 1.752253 1.760138 1.761264 1.8125 1.814753 1.822638 1.823764 1.875 1.877253 1.885138 1.886264 1.9375 1.939753 1.947638 1.948764 2.0 2.002253 2.010138 2.011264 2.0625 2.064753 2.072638 2.073764 2.125 2.127253 2.135138 2.136264 2.1875 2.189753 2.197638 2.198764 2.25 2.252253 2.260138 2.261264 2.3125 2.314753 2.322638 2.323764 2.375 2.377253 2.385138 2.386264 2.4375 2.439753 2.447638 2.448764 2.5 2.502253 2.510138 2.511264 2.5625 2.564753 2.572638 2.573764 2.625 2.627253 2.635138 2.636264 2.6875 2.689753 2.697638 2.698764 2.75 2.752253 2.760138 2.761264 2.8125 2.814753 2.822638 2.823764 2.875 2.877253 2.885138 2.886264 2.9375 2.939753 2.947638 2.948764 3.0 3.002253 3.010138 3.011264 3.0625 3.064753 3.072638 3.073764 3.125 3.127253 3.135138 3.136264 3.1875 3.189753 3.197638 3.198764 3.25 3.252253 3.260138 3.261264 3.3125 3.314753 3.322638 3.323764 3.375 3.377253 3.385138 3.386264 3.4375 3.439753 3.447638 3.448764 3.5 3.502253 3.510138 3.511264 3.5625 3.564753 3.572638 3.573764 3.625 3.627253 3.635138 3.636264 3.6875 3.689753 3.697638 3.698764 3.75 3.752253 3.760138 3.761264 3.8125 3.814753 3.822638 3.823764 3.875 3.877253 3.885138 3.886264 3.9375 3.939753 3.947638 3.948764 4.0 4.002253 4.010138 4.011264 4.0625)) (quote (0.0 3.6E-5 5.6E-5 1.7E-5 6.6E-5 2.4E-4 2.85E-4 8.4E-5 1.27E-4 4.37E-4 4.36E-4 1.26E-4 1.08E-4 3.68E-4 3.55E-4 1.02E-4 1.2E-4 4.27E-4 4.63E-4 1.35E-4 2.01E-4 7.02E-4 7.31E-4 2.13E-4 1.9E-4 6.39E-4 5.83E-4 1.67E-4 1.82E-4 6.39E-4 6.71E-4 1.96E-4 1.47E-4 5.13E-4 5.27E-4 1.53E-4 1.75E-4 6.08E-4 6.12E-4 1.77E-4 1.83E-4 6.32E-4 6.33E-4 1.83E-4 2.09E-4 7.29E-4 7.47E-4 2.17E-4 2.0E-4 6.82E-4 6.42E-4 1.84E-4 1.57E-4 5.59E-4 6.22E-4 1.82E-4 2.36E-4 8.13E-4 8.06E-4 2.33E-4 2.03E-4 6.95E-4 6.76E-4 1.95E-4 2.57E-4 8.84E-4 8.67E-4 2.5E-4 2.07E-4 7.04E-4 6.65E-4 1.91E-4 1.62E-4 5.61E-4 5.7E-4 1.65E-4 2.49E-4 8.76E-4 9.33E-4 2.72E-4 4.57E-4 0.00156 0.001495 4.3E-4 3.1E-4 0.001054 9.95E-4 2.85E-4 3.01E-4 0.001063 0.001141 3.33E-4 4.32E-4 0.001504 0.001547 4.49E-4 3.14E-4 0.00108 0.001063 3.07E-4 2.61E-4 8.88E-4 8.41E-4 2.41E-4 2.84E-4 0.001008 0.001105 3.24E-4 3.15E-4 0.001078 0.001036 2.98E-4 4.68E-4 0.00161 0.00158 4.56E-4 3.92E-4 0.001343 0.001298 3.74E-4 2.58E-4 8.68E-4 7.88E-4 2.25E-4 2.55E-4 8.97E-4 9.49E-4 2.76E-4 3.65E-4 0.001246 0.001185 3.4E-4 2.53E-4 8.72E-4 8.68E-4 2.51E-4 2.12E-4 7.22E-4 6.82E-4 1.96E-4 3.02E-4 0.001069 0.001161 3.4E-4 2.41E-4 8.41E-4 8.7E-4 2.53E-4 2.92E-4 0.001009 0.001005 2.91E-4 2.91E-4 0.001007 0.001011 2.93E-4 2.96E-4 0.001025 0.001026 2.97E-4 4.3E-4 0.001447 0.001313 3.74E-4 2.03E-4 7.13E-4 7.56E-4 2.2E-4 2.99E-4 0.001044 0.001085 3.16E-4 2.73E-4 9.31E-4 8.85E-4 2.54E-4 3.58E-4 0.00122 0.001164 3.34E-4 2.4E-4 8.19E-4 7.85E-4 2.26E-4 2.0E-4 6.95E-4 7.02E-4 2.03E-4 3.23E-4 0.001141 0.001225 3.58E-4 2.44E-4 8.45E-4 8.5E-4 2.46E-4 2.38E-4 8.14E-4 7.86E-4 2.26E-4 2.07E-4 7.18E-4 7.27E-4 2.11E-4 1.93E-4 6.64E-4 6.48E-4 1.87E-4 1.9E-4 6.53E-4 6.44E-4 1.86E-4 1.8E-4 6.27E-4 6.43E-4 1.87E-4 2.52E-4 8.86E-4 9.4E-4 2.74E-4 1.79E-4 5.92E-4 5.03E-4 1.42E-4 1.59E-4 5.59E-4 5.85E-4 1.7E-4 1.91E-4 6.52E-4 6.17E-4 1.77E-4 1.64E-4 5.73E-4 5.97E-4 1.73E-4 1.18E-4 3.95E-4 3.46E-4 9.8E-5 6.9E-5 2.4E-4 2.43E-4 7.0E-5 7.9E-5 2.74E-4 2.84E-4 8.3E-5 8.7E-5 2.98E-4 2.92E-4 8.4E-5 8.5E-5 2.92E-4 2.95E-4 8.5E-5 1.16E-4 4.02E-4 4.02E-4 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.003211 0.014448 0.016054 0.0625 0.065711 0.076948 0.078554 0.125 0.128211 0.139448 0.141054 0.1875 0.190711 0.201948 0.203554 0.25 0.253211 0.264448 0.266054 0.3125 0.315711 0.326948 0.328554 0.375 0.378211 0.389448 0.391054 0.4375 0.440711 0.451948 0.453554 0.5 0.503211 0.514448 0.516054 0.5625 0.565711 0.576948 0.578554 0.625 0.628211 0.639448 0.641054 0.6875 0.690711 0.701948 0.703554 0.75 0.753211 0.764448 0.766054 0.8125 0.815711 0.826948 0.828554 0.875 0.878211 0.889448 0.891054 0.9375 0.940711 0.951948 0.953554 1.0 1.003211 1.014448 1.016054 1.0625 1.065711 1.076948 1.078554 1.125 1.128211 1.139448 1.141054 1.1875 1.190711 1.201948 1.203554 1.25 1.253211 1.264448 1.266054 1.3125 1.315711 1.326948 1.328554 1.375 1.378211 1.389448 1.391054 1.4375 1.440711 1.451948 1.453554 1.5 1.503211 1.514448 1.516054 1.5625 1.565711 1.576948 1.578554 1.625 1.628211 1.639448 1.641054 1.6875 1.690711 1.701948 1.703554 1.75 1.753211 1.764448 1.766054 1.8125 1.815711 1.826948 1.828554 1.875 1.878211 1.889448 1.891054 1.9375 1.940711 1.951948 1.953554 2.0 2.003211 2.014448 2.016054 2.0625 2.065711 2.076948 2.078554 2.125 2.128211 2.139448 2.141054 2.1875 2.190711 2.201948 2.203554 2.25 2.253211 2.264448 2.266054 2.3125 2.315711 2.326948 2.328554 2.375 2.378211 2.389448 2.391054 2.4375 2.440711 2.451948 2.453554 2.5 2.503211 2.514448 2.516054 2.5625 2.565711 2.576948 2.578554 2.625 2.628211 2.639448 2.641054 2.6875 2.690711 2.701948 2.703554 2.75 2.753211 2.764448 2.766054 2.8125 2.815711 2.826948 2.828554 2.875 2.878211 2.889448 2.891054 2.9375 2.940711 2.951948 2.953554 3.0 3.003211 3.014448 3.016054 3.0625 3.065711 3.076948 3.078554 3.125 3.128211 3.139448 3.141054 3.1875 3.190711 3.201948 3.203554 3.25 3.253211 3.264448 3.266054 3.3125 3.315711 3.326948 3.328554 3.375 3.378211 3.389448 3.391054 3.4375 3.440711 3.451948 3.453554 3.5 3.503211 3.514448 3.516054 3.5625 3.565711 3.576948 3.578554 3.625 3.628211 3.639448 3.641054 3.6875 3.690711 3.701948 3.703554 3.75 3.753211 3.764448 3.766054 3.8125 3.815711 3.826948 3.828554 3.875 3.878211 3.889448 3.891054 3.9375 3.940711 3.951948 3.953554 4.0 4.003211 4.014448 4.016054 4.0625)) (quote (0.0 4.0E-6 8.0E-6 2.0E-6 6.0E-6 3.0E-5 3.6E-5 8.0E-6 1.1E-5 5.0E-5 5.1E-5 1.1E-5 1.8E-5 8.3E-5 9.6E-5 2.2E-5 4.9E-5 2.17E-4 2.04E-4 4.5E-5 3.3E-5 1.45E-4 1.35E-4 3.0E-5 2.6E-5 1.15E-4 1.17E-4 2.6E-5 1.7E-5 7.2E-5 6.3E-5 1.4E-5 2.4E-5 1.08E-4 1.12E-4 2.5E-5 3.3E-5 1.55E-4 1.77E-4 4.0E-5 5.9E-5 2.71E-4 2.91E-4 6.6E-5 3.4E-5 1.41E-4 1.01E-4 2.3E-5 1.9E-5 8.7E-5 9.2E-5 2.0E-5 4.0E-5 1.97E-4 2.64E-4 6.1E-5 6.0E-5 2.5E-4 1.91E-4 4.1E-5 2.3E-5 1.02E-4 1.06E-4 2.6E-5 8.4E-5 3.65E-4 3.2E-4 7.0E-5 4.1E-5 1.88E-4 1.97E-4 4.4E-5 3.7E-5 1.59E-4 1.36E-4 3.0E-5 6.5E-5 3.07E-4 3.42E-4 7.5E-5 2.9E-5 1.3E-4 1.26E-4 2.8E-5 3.4E-5 1.63E-4 2.01E-4 4.6E-5 6.4E-5 2.86E-4 2.89E-4 6.5E-5 6.5E-5 2.9E-4 2.85E-4 6.3E-5 4.3E-5 2.24E-4 3.4E-4 7.9E-5 1.33E-4 5.67E-4 4.67E-4 1.01E-4 6.5E-5 2.93E-4 3.06E-4 6.9E-5 5.0E-5 2.17E-4 1.92E-4 4.2E-5 3.1E-5 1.42E-4 1.55E-4 3.5E-5 4.2E-5 1.87E-4 1.8E-4 4.0E-5 5.2E-5 2.43E-4 2.75E-4 6.2E-5 5.9E-5 2.62E-4 2.51E-4 5.6E-5 4.7E-5 2.35E-4 3.2E-4 7.4E-5 1.28E-4 5.69E-4 5.54E-4 1.23E-4 8.2E-5 3.48E-4 2.77E-4 6.0E-5 3.6E-5 1.58E-4 1.54E-4 3.6E-5 7.7E-5 3.36E-4 3.0E-4 6.6E-5 4.6E-5 2.13E-4 2.34E-4 5.3E-5 4.4E-5 1.85E-4 1.48E-4 3.2E-5 5.2E-5 2.45E-4 2.75E-4 6.2E-5 6.8E-5 2.94E-4 2.65E-4 5.8E-5 3.7E-5 1.66E-4 1.64E-4 3.6E-5 3.1E-5 1.35E-4 1.26E-4 2.8E-5 2.3E-5 1.04E-4 1.01E-4 2.3E-5 2.7E-5 1.65E-4 3.24E-4 7.7E-5 1.51E-4 6.36E-4 5.0E-4 1.07E-4 8.9E-5 4.24E-4 5.07E-4 1.16E-4 4.9E-5 1.9E-4 1.1E-4 2.7E-5 8.0E-5 3.58E-4 3.5E-4 7.8E-5 5.9E-5 2.5E-4 1.96E-4 4.2E-5 5.6E-5 2.71E-4 3.44E-4 7.9E-5 3.3E-5 1.27E-4 7.3E-5 1.8E-5 7.4E-5 3.2E-4 2.77E-4 6.1E-5 2.7E-5 1.18E-4 1.0E-4 2.2E-5 1.7E-5 7.7E-5 8.3E-5 1.9E-5 2.5E-5 1.14E-4 1.19E-4 2.7E-5 2.4E-5 1.06E-4 9.5E-5 2.1E-5 2.6E-5 1.29E-4 1.78E-4 4.1E-5 3.9E-5 1.6E-4 1.12E-4 2.4E-5 3.9E-5 1.84E-4 2.05E-4 4.5E-5 2.2E-5 1.0E-4 9.9E-5 2.2E-5 2.0E-5 8.7E-5 8.3E-5 1.8E-5 3.1E-5 1.48E-4 1.79E-4 4.1E-5 2.0E-5 7.8E-5 4.8E-5 1.1E-5 1.0E-5 4.6E-5 4.6E-5 0.0 0.0)) (quote bpf) 6))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (89.159 74.835 72.564 72.475 72.684 72.515 72.616 72.479 72.473 72.649 72.581 72.485 72.852 72.495 72.558 72.902 72.501 73.128 72.615 72.602 72.555 73.233 73.037 72.567 72.614 73.295 72.659 72.674 72.796 73.277 72.99 73.456 73.119 73.472 73.322 72.883 73.29 73.357 73.389 72.952 73.522 73.649 72.706 73.742 72.975 72.86 72.751 73.547 73.508 72.874 73.015 72.678 72.969 72.835 72.7 72.636 72.871 72.952 72.704 73.116 72.725 72.495 72.673 72.668 72.583 72.495 72.728 72.525 72.516 72.635 72.598 72.517 72.473 72.474 72.701 72.644 72.993 72.843 72.886 72.862 72.621)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (73.219 74.53 76.76 77.916 77.511 76.833 77.436 76.445 77.018 77.146 77.519 78.948 77.882 79.283 78.94 79.933 77.99 80.109 78.566 78.955 78.127 78.431 78.091 77.878 79.19 81.254 78.145 80.685 79.389 81.298 80.484 80.15 78.618 81.625 81.452 81.754 79.393 78.435 78.528 78.485 79.287 81.521 79.46 78.587 78.428 80.952 81.07 80.466 79.401 78.676 78.206 80.578 78.938 79.639 78.316 79.354 79.078 79.753 79.223 79.35 78.621 77.346 77.77 78.477 77.273 80.142 78.014 79.036 77.398 78.237 79.024 76.631 77.583 77.316 78.328 77.091 77.237 75.965 77.78 76.193 77.103)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (87.061 94.025 92.432 95.516 95.87 94.828 91.34 96.719 93.434 91.608 93.616 95.807 97.77 94.747 94.512 97.504 98.676 96.176 94.652 98.846 95.645 97.086 98.313 94.67 97.257 96.996 94.552 99.2 93.177 95.847 95.974 98.439 97.098 98.213 98.059 94.012 99.047 96.412 98.412 95.477 95.047 97.121 96.552 95.115 98.61 95.503 98.339 96.789 94.03 98.92 93.939 99.012 98.045 93.729 93.136 96.637 93.403 96.019 98.759 95.511 95.5 96.015 96.246 93.861 97.64 92.526 92.879 93.035 96.165 95.14 94.616 95.815 92.299 91.42 92.911 93.203 90.164 92.462 91.759 94.729 94.803)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0 1.05 1.1 1.15 1.2 1.25 1.3 1.35 1.4 1.45 1.5 1.55 1.6 1.65 1.7 1.75 1.8 1.85 1.9 1.95 2.0 2.05 2.1 2.15 2.2 2.25 2.3 2.35 2.4 2.45 2.5 2.55 2.6 2.65 2.7 2.75 2.8 2.85 2.9 2.95 3.0 3.05 3.1 3.15 3.2 3.25 3.3 3.35 3.4 3.45 3.5 3.55 3.6 3.65 3.7 3.75 3.8 3.85 3.9 3.95 4.0)) (quote (117.015 116.052 121.667 113.659 117.569 121.777 119.591 121.592 116.727 114.636 115.709 117.306 122.217 114.232 121.875 120.187 120.753 116.88 117.817 115.853 122.337 123.176 120.993 115.167 119.052 121.831 116.892 120.004 119.683 122.328 118.613 117.658 120.66 122.026 124.377 120.187 118.225 121.824 122.231 123.298 119.763 115.704 122.033 118.409 121.273 123.56 116.735 122.986 116.869 117.105 123.614 122.329 120.061 116.483 116.603 116.036 121.432 115.193 114.554 116.701 117.622 119.864 115.843 119.605 116.556 114.686 115.897 120.094 120.371 121.152 118.365 117.753 118.695 113.629 118.588 117.062 120.554 115.015 118.159 116.779 115.159)) (quote bpf) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) (list 0.003 0.003 0.003 0.003) (list 0.02 0.02 0.02 0.02) (list 0.007 0.007 0.007 0.007) (list 0 0 0 0))) rep)))) (when copy (setf (dur copy) (quote (5 0.2 0.2))) (setf (kt copy) nil)) copy) nil nil (pairlis (quote (panel-list cur-group-ind show-opt-fields color-list winsize winpos)) (list (list (list "group 1" (list 0 (quote t)) (list 1 (quote t)) (list 2 (quote t)) (list 3 nil) (list 4 nil) (list 5 nil) (list 6 nil)) (list "All open" (list 0 (quote t)) (list 1 (quote t)) (list 2 (quote t)) (list 3 (quote t)) (list 4 (quote t)) (list 5 (quote t)) (list 6 (quote t))) (list "All close" (list 0 nil) (list 1 nil) (list 2 nil) (list 3 nil) (list 4 nil) (list 5 nil) (list 6 nil))) 0 (quote t) (list (om-make-color 0 0 0) (om-make-color 0 0 0) (om-make-color 0 0 0) (om-make-color 0 0 0) (om-make-color 0 0 0) (om-make-color 0 0 0) (om-make-color 0 0 0)) (om-make-point 1140 831) (om-make-point 225 58))) t nil nil nil))) (quote ((10 0 8 1 nil 0) (15 0 9 1 nil 0) (17 0 10 0 nil 0) (9 0 10 1 nil 0) (14 0 11 0 nil 0) (12 0 11 1 nil 0) (16 0 14 0 nil 0) (13 0 14 1 nil 0) (17 0 15 0 nil 0) (11 0 17 1 nil 0) (18 0 19 0 nil 0) (8 1 19 1 nil 0) (23 0 22 0 nil 0) (24 0 23 0 nil 0) (0 0 23 1 nil 0) (32 0 24 0 nil 0) (31 0 24 1 nil 0) (30 0 29 0 nil 0) (26 0 29 1 nil 0) (28 0 29 2 nil 0) (27 0 29 3 nil 0) (20 0 29 4 nil 0) (29 0 31 3 nil 0) (25 0 32 1 nil 0) (21 0 32 3 nil 0) (11 0 32 6 nil 0) (19 0 32 7 nil 0) (9 1 32 8 nil 0))) nil 6.060013))
