
(:patch
 (:om-version 0.011)
 (:name "28-chant-qon")
 (:doc "")
 (:info
  (:created "2019/07/31 18:09:00")
  (:modified "2019/07/31 18:29:32"))
 (:window (:size (814 746)) (:position (377 77)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 119)
   (:y 189)
   (:w 135)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :italic)))
   (:align nil)
   (:text "converts each note to sound synthesis parameters =>")
   (:id 0))
  (:comment
   (:x 587)
   (:y 142)
   (:w 161)
   (:h 47)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :italic)))
   (:align nil)
   (:text
    "voice parameters
(vibrato, attacks, etc.)")
   (:id 1))
  (:comment
   (:x 545)
   (:y 65)
   (:w 73)
   (:h 30)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :italic)))
   (:align nil)
   (:text "song score")
   (:id 2))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 419)
   (:y 604)
   (:w 328)
   (:h 108)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (847 255)) (:position (79 46)))
   (:edition-params (:staff :gf))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 20348)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 7200 6900 6500)
         (:list 7200 6900 6500)
         (:list 7200 6900 6500)
         (:list 7200 6900 6500)
         (:list 7200 6900 6500)
         (:list 7200 6900 6500)
         (:list 7200 6900 6500)
         (:list 7200 6700 6400)
         (:list 7900 7600)
         (:list 7900 7600)
         (:list 7900 7600)
         (:list 7900 7600)
         (:list 7900 7600)
         (:list 7900 7600)
         (:list 7900 7600)
         (:list 7400 6900 6200)
         (:list 6900 6500 6200)
         (:list 6900 6500 6200)
         (:list 6900 6500 6200)
         (:list 6900 6500 6200)
         (:list 6900 6500 6200)
         (:list 6900 6500 6200)
         (:list 6900 6500 6200)
         (:list 6900 6400 6000)
         (:list 7600 7200)
         (:list 7600 7200)
         (:list 7600 7200)
         (:list 7600 7200)
         (:list 7600 7200)
         (:list 7600 7200)
         (:list 7600 7200)
         (:list 7000 6500 6200)
         (:list 7000 6500 6200)
         (:list 7000 6500 6200)
         (:list 7000 6500 6200)
         (:list 7000 6500 6200)
         (:list 7000 6500 6200)
         (:list 7000 6500 6200)
         (:list 7000 6500 6200)
         (:list 7200 6500 5700)
         (:list 7200 6700 6400)
         (:list 7200 6900 6500)
         (:list 8400 8100 7700)
         (:list 8600 8200 7700)
         (:list 8400 8100 7700)
         (:list 8400 8100 7700)
         (:list 8600 8200 7700)
         (:list 8400 8100 7700)
         (:list 6500 6000 5700 4500)
         (:list 6500 6000 5700 4500)
         (:list 6500 6000 5700 4500)
         (:list 6500 6000 5700 4500)
         (:list 6700 6500 6200 4600)
         (:list 6700 6500 6200 4600)
         (:list 6700 6500 6200 4600)
         (:list 6700 6500 6200 4600)
         (:list 6800 6500 6200 4600)
         (:list 6800 6500 6200 4600)
         (:list 6800 6500 6200 4600)
         (:list 6800 6500 6200 4600)
         (:list 6900 6500 6000 6000 4800)
         (:list 6900 6500 6000 6000 4800)
         (:list 7200 6900 6000 4800)
         (:list 7200 6900 6000 4800)
         (:list 7700 7200 5700 4500)
         (:list 7700 7200 5700 4500)
         (:list 8100 7700 7200 5300 4100)
         (:list 8100 7700 7200 5300 4100)
         (:list 8400 8100 7700 7200 4800 3600)
         (:list 8100 7700 7200)
         (:list 8100 7700 7200)
         (:list 8400 7900 7600 7200 5800 5500 5200 4800)
         (:list 7900 7600 7200)
         (:list 7200)
         (:list 7700 6900 6500 6000 5700 5300)))
       (:lonset
        (:list
         0
         210
         420
         629
         839
         1049
         1259
         1469
         1678
         1888
         2098
         2308
         2517
         2727
         2937
         3147
         3357
         3566
         3776
         3986
         4196
         4406
         4615
         4825
         5035
         5245
         5455
         5664
         5874
         6084
         6294
         6503
         6713
         6923
         7133
         7343
         7552
         7762
         7972
         8182
         9021
         9860
         10699
         11119
         11538
         12378
         12797
         13217
         14056
         14266
         14476
         14685
         14895
         15105
         15315
         15524
         15734
         15944
         16154
         16364
         16573
         16783
         16993
         17203
         17413
         17622
         17832
         18042
         18252
         18671
         18986
         19091
         19510
         19825
         19930
         20348))
       (:ldur
        (:list
         (:list 51 51 51)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 50 50 50)
         (:list 208 208 208)
         (:list 51 51)
         (:list 51 51)
         (:list 51 51)
         (:list 50 50)
         (:list 51 51)
         (:list 51 51)
         (:list 51 51)
         (:list 208 208 208)
         (:list 50 50 50)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 51 51 51)
         (:list 208 208 208)
         (:list 51 51)
         (:list 50 50)
         (:list 50 50)
         (:list 51 51)
         (:list 51 51)
         (:list 51 51)
         (:list 50 50)
         (:list 209 209 209)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 50 50 50)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 51 51 51)
         (:list 260 260 260)
         (:list 260 260 260)
         (:list 261 261 261)
         (:list 156 156 156)
         (:list 155 155 155)
         (:list 313 313 313)
         (:list 155 155 155)
         (:list 156 156 156)
         (:list 313 313 313)
         (:list 51 51 51 51)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 51 51 51 51)
         (:list 51 51 51 51)
         (:list 51 51 51 51)
         (:list 50 50 50 50)
         (:list 51 51 51 51)
         (:list 51 51 51 51)
         (:list 51 51 51 51)
         (:list 51 51 51 51)
         (:list 50 50 50 50)
         (:list 104 104 104 104 104)
         (:list 103 103 103 103 103)
         (:list 103 103 103 103)
         (:list 103 103 103 103)
         (:list 103 103 103 103)
         (:list 104 104 104 104)
         (:list 156 156 156 156 156)
         (:list 156 156 156 156 156)
         (:list 313 313 313 313 313 313)
         (:list 103 103 103)
         (:list 103 103 103)
         (:list 313 313 313 313 365 365 365 365)
         (:list 104 104 104)
         (:list 103)
         (:list 103 103 103 103 418 418)))
       (:lvel
        (:list
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50 50)
         (:list 50 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50)
         (:list 50 50 50 50 50)
         (:list 50 50 50 50 50)
         (:list 50 50 50 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50)
         (:list 50 50 50 50 50 50 50 50)
         (:list 50 50 50)
         (:list 50)
         (:list 50 50 50 50 50 50)))
       (:loffset
        (:list
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1)
         (:list 1 1 1 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0)
         (:list 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1)
         (:list 1 1 1 1 1 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 3))
  (:box
   (:reference simple-base-string)
   (:type :value)
   (:group-id nil)
   (:name "aux")
   (:x 427)
   (:y 251)
   (:w 111)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "ch_28-chant-qon")
   (:id 4))
  (:box
   (:reference textbuffer)
   (:type :object)
   (:group-id nil)
   (:name "env-vibrato")
   (:x 504)
   (:y 153)
   (:w 70)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "env-vibrato")
   (:display :hidden)
   (:showname t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :value)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :value))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "((0.05 0.1) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0.15 0.1) (0.05 0.1) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0.15 0.1) (0.05 0.1) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0.1 0.1) (0.1 0.1) (0 0) (0.1 0.1) (0.1 0.1) (0.1 0.1) (0.1 0.1) (0.1 0.1) (0 0) (0 0) (0.15 0.1))"
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 5))
  (:box
   (:reference textbuffer)
   (:type :object)
   (:group-id nil)
   (:name "amp-vibrato")
   (:x 427)
   (:y 131)
   (:w 70)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "amp-vibrato")
   (:display :hidden)
   (:showname t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :value)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :value))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(0.1 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.1 0.1 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.1 0.1 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.02 0.1 0.1 0.06 0.08 0.08 0.08 0.08 0.08 0.06 0.06 0.1)"
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 6))
  (:box
   (:reference textbuffer)
   (:type :object)
   (:group-id nil)
   (:name "decays")
   (:x 357)
   (:y 131)
   (:w 70)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "decays")
   (:display :hidden)
   (:showname t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :value)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :value))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(0.1 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.1 0.1 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.1 0.1 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.04 0.1 0.1 0.04 0.1 0.1 0.1 0.1 0.1 0.04 0.04 0.1)"
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 7))
  (:box
   (:reference textbuffer)
   (:type :object)
   (:group-id nil)
   (:name "attacks")
   (:x 288)
   (:y 131)
   (:w 70)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "attacks")
   (:display :hidden)
   (:showname t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :value)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size (480 130)) (:position (100 69)))
   (:edition-params (:output-mode :value))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(0.1 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.3 0.1 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.3 0.1 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.06 0.3 0.2 0.06 0.2 0.2 0.2 0.2 0.2 0.06 0.06 0.3)"
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 8))
  (:box
   (:reference
    (:patch
     (:om-version 0.011)
     (:name "notes-to-chant")
     (:doc "")
     (:info (:created nil) (:modified nil))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:reference cons)
       (:type :value)
       (:group-id nil)
       (:name "aux 2")
       (:x 712)
       (:y 212)
       (:w 39)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list s o))
       (:id 0))
      (:box
       (:reference
        (:patch
         (:om-version 0.011)
         (:name "modulate-f0")
         (:doc "")
         (:info (:created nil) (:modified nil))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:reference param-process)
           (:type :function)
           (:group-id nil)
           (:name "param-process")
           (:x 134)
           (:y 447)
           (:w 94)
           (:h nil)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "INITVAL")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PROCESS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "DURATION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "KT")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "OP")
             (:value a)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:comment
           (:x 212)
           (:y 286)
           (:w 140)
           (:h 30)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font (:face "Verdana") (:size 12) (:style :plain)))
           (:align nil)
           (:text "amplitude modulation")
           (:id 1))
          (:box
           (:reference bpf)
           (:type :object)
           (:group-id nil)
           (:name "vibrato")
           (:x 219)
           (:y 360)
           (:w 223)
           (:h 64)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:name "vibrato")
           (:display :mini-view)
           (:showname t)
           (:show-markers t)
           (:group-id nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "X-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "Y-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "decimals")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "X-POINTS") (:reactive nil))
            (:output (:name "Y-POINTS") (:reactive nil))
            (:output (:name "decimals") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class bpf)
             (:slots
              ((:onset 0)
               (:duration 1.0)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))
               (:action nil)
               (:color (:color 0 0 0 1.0))
               (:decimals 3)
               (:x-points
                (:list
                 0.0
                 0.005
                 0.01
                 0.015
                 0.02
                 0.025
                 0.03
                 0.033
                 0.035
                 0.04
                 0.045
                 0.05
                 0.055
                 0.06
                 0.065
                 0.067
                 0.07
                 0.075
                 0.08
                 0.085
                 0.09
                 0.095
                 0.1
                 0.105
                 0.11
                 0.115
                 0.12
                 0.125
                 0.13
                 0.133
                 0.135
                 0.14
                 0.145
                 0.15
                 0.155
                 0.16
                 0.165
                 0.167
                 0.17
                 0.175
                 0.18
                 0.185
                 0.19
                 0.195
                 0.2
                 0.205
                 0.21
                 0.215
                 0.22
                 0.225
                 0.23
                 0.233
                 0.235
                 0.24
                 0.245
                 0.25
                 0.255
                 0.26
                 0.265
                 0.267
                 0.27
                 0.275
                 0.28
                 0.285
                 0.29
                 0.295
                 0.3
                 0.305
                 0.31
                 0.315
                 0.32
                 0.325
                 0.33
                 0.333
                 0.335
                 0.34
                 0.345
                 0.35
                 0.355
                 0.36
                 0.365
                 0.367
                 0.37
                 0.375
                 0.38
                 0.385
                 0.39
                 0.395
                 0.4
                 0.405
                 0.41
                 0.415
                 0.42
                 0.425
                 0.43
                 0.433
                 0.435
                 0.44
                 0.445
                 0.45
                 0.455
                 0.46
                 0.465
                 0.467
                 0.47
                 0.475
                 0.48
                 0.485
                 0.49
                 0.495
                 0.5
                 0.505
                 0.51
                 0.515
                 0.52
                 0.525
                 0.53
                 0.533
                 0.535
                 0.54
                 0.545
                 0.55
                 0.555
                 0.56
                 0.565
                 0.567
                 0.57
                 0.575
                 0.58
                 0.585
                 0.59
                 0.595
                 0.6
                 0.605
                 0.61
                 0.615
                 0.62
                 0.625
                 0.63
                 0.633
                 0.635
                 0.64
                 0.645
                 0.65
                 0.655
                 0.66
                 0.665
                 0.667
                 0.67
                 0.675
                 0.68
                 0.685
                 0.69
                 0.695
                 0.7
                 0.705
                 0.71
                 0.715
                 0.72
                 0.725
                 0.73
                 0.733
                 0.735
                 0.74
                 0.745
                 0.75
                 0.755
                 0.76
                 0.765
                 0.767
                 0.77
                 0.775
                 0.78
                 0.785
                 0.79
                 0.795
                 0.8
                 0.805
                 0.81
                 0.815
                 0.82
                 0.825
                 0.83
                 0.833
                 0.835
                 0.84
                 0.845
                 0.85
                 0.855
                 0.86
                 0.865
                 0.867
                 0.87
                 0.875
                 0.88
                 0.885
                 0.89
                 0.895
                 0.9
                 0.905
                 0.91
                 0.915
                 0.92
                 0.925
                 0.93
                 0.933
                 0.935
                 0.94
                 0.945
                 0.95
                 0.955
                 0.96
                 0.965
                 0.967
                 0.97
                 0.975
                 0.98
                 0.985
                 0.99
                 0.995
                 1.0))
               (:y-points
                (:list
                 0.0
                 0.001
                 0.004
                 0.009
                 0.014
                 0.021
                 0.028
                 0.032
                 0.035
                 0.04
                 0.044
                 0.047
                 0.046
                 0.044
                 0.038
                 0.035
                 0.03
                 0.02
                 0.007
                 -0.008
                 -0.024
                 -0.041
                 -0.059
                 -0.074
                 -0.087
                 -0.097
                 -0.104
                 -0.107
                 -0.106
                 -0.104
                 -0.101
                 -0.09
                 -0.076
                 -0.059
                 -0.04
                 -0.019
                 0.002
                 0.009
                 0.02
                 0.037
                 0.052
                 0.066
                 0.077
                 0.086
                 0.092
                 0.096
                 0.097
                 0.094
                 0.088
                 0.079
                 0.066
                 0.057
                 0.052
                 0.037
                 0.021
                 0.004
                 -0.014
                 -0.03
                 -0.045
                 -0.05
                 -0.061
                 -0.076
                 -0.088
                 -0.097
                 -0.102
                 -0.104
                 -0.102
                 -0.094
                 -0.082
                 -0.068
                 -0.051
                 -0.033
                 -0.014
                 -0.001
                 0.006
                 0.024
                 0.042
                 0.058
                 0.072
                 0.084
                 0.092
                 0.094
                 0.097
                 0.097
                 0.094
                 0.088
                 0.079
                 0.066
                 0.051
                 0.037
                 0.021
                 0.004
                 -0.013
                 -0.03
                 -0.045
                 -0.054
                 -0.059
                 -0.073
                 -0.084
                 -0.091
                 -0.096
                 -0.096
                 -0.093
                 -0.091
                 -0.088
                 -0.079
                 -0.068
                 -0.054
                 -0.038
                 -0.021
                 -0.004
                 0.016
                 0.034
                 0.052
                 0.067
                 0.08
                 0.09
                 0.095
                 0.097
                 0.101
                 0.102
                 0.098
                 0.092
                 0.082
                 0.069
                 0.064
                 0.054
                 0.037
                 0.019
                 0.0
                 -0.019
                 -0.036
                 -0.052
                 -0.068
                 -0.082
                 -0.092
                 -0.099
                 -0.103
                 -0.103
                 -0.1
                 -0.098
                 -0.087
                 -0.073
                 -0.057
                 -0.039
                 -0.019
                 0.002
                 0.009
                 0.022
                 0.04
                 0.057
                 0.073
                 0.086
                 0.097
                 0.104
                 0.108
                 0.109
                 0.106
                 0.1
                 0.09
                 0.077
                 0.068
                 0.062
                 0.045
                 0.026
                 0.006
                 -0.014
                 -0.032
                 -0.05
                 -0.055
                 -0.066
                 -0.078
                 -0.088
                 -0.095
                 -0.099
                 -0.098
                 -0.095
                 -0.086
                 -0.075
                 -0.06
                 -0.044
                 -0.026
                 -0.006
                 0.007
                 0.013
                 0.032
                 0.049
                 0.065
                 0.08
                 0.091
                 0.1
                 0.101
                 0.104
                 0.105
                 0.102
                 0.096
                 0.086
                 0.073
                 0.058
                 0.039
                 0.02
                 0.003
                 -0.013
                 -0.027
                 -0.038
                 -0.043
                 -0.045
                 -0.05
                 -0.051
                 -0.05
                 -0.047
                 -0.042
                 -0.036
                 -0.033
                 -0.029
                 -0.022
                 -0.015
                 -0.009
                 -0.004
                 -0.001
                 0.0))))
             (:add-slots
              ((:decimals 3)
               (:color (:color 0 0 0 1.0))
               (:name nil)
               (:action nil)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))))))
           (:id 2))
          (:box
           (:reference bpf)
           (:type :object)
           (:group-id nil)
           (:name "envelope")
           (:x 39)
           (:y 218)
           (:w 99)
           (:h 49)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:name "envelope")
           (:display :mini-view)
           (:showname t)
           (:show-markers t)
           (:group-id nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "X-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "Y-POINTS")
             (:value (:list 0 100))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "decimals")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "X-POINTS") (:reactive nil))
            (:output (:name "Y-POINTS") (:reactive nil))
            (:output (:name "decimals") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class bpf)
             (:slots
              ((:onset 0)
               (:duration 1.0)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))
               (:action nil)
               (:color (:color 0 0 0 1.0))
               (:decimals 3)
               (:x-points (:list 0.0 0.1 0.9 1.0))
               (:y-points (:list 0.0 1.0 1.0 0.0))))
             (:add-slots
              ((:decimals 3)
               (:color (:color 0 0 0 1.0))
               (:name nil)
               (:action nil)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))))))
           (:id 3))
          (:box
           (:reference adsr)
           (:type :function)
           (:group-id nil)
           (:name "adsr")
           (:x 66)
           (:y 154)
           (:w 70)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "AMP1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "AMP2")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "A")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "D")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "S")
             (:value 5)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "R")
             (:value 2)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:reference list)
           (:type :function)
           (:group-id nil)
           (:name "list")
           (:x 218)
           (:y 193.0)
           (:w 52)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "x")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "x")
             (:value 2)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:reference jitter)
           (:type :function)
           (:group-id nil)
           (:name "jitter")
           (:x 260)
           (:y 138)
           (:w 62)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FREQS")
             (:value 30)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "AMPS")
             (:value (:list 0.01))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:reference vibrato)
           (:type :function)
           (:group-id nil)
           (:name "vibrato")
           (:x 185)
           (:y 139.0)
           (:w 73)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FREQS")
             (:value 20)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "AMPS")
             (:value 1.0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:reference fixnum)
           (:type :value)
           (:group-id nil)
           (:name "aux 7")
           (:x 183)
           (:y 108.0)
           (:w 21)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 6)
           (:id 8))
          (:box
           (:reference param-process)
           (:type :function)
           (:group-id nil)
           (:name "param-process")
           (:x 121)
           (:y 283)
           (:w 110)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "INITVAL")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PROCESS")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "DURATION")
             (:value 5)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "KT")
             (:value 0.005)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "OP")
             (:value m)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:reference -)
           (:type :function)
           (:group-id nil)
           (:name "-")
           (:x 43)
           (:y 110)
           (:w 42)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM")
             (:value z)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value z)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value z)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:reference
            (:out (:type omout) (:name nil) (:index 1) (:doc nil)))
           (:type :io)
           (:group-id nil)
           (:name nil)
           (:x 157)
           (:y 515)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 11))
          (:box
           (:reference
            (:in (:type omin) (:index 1) (:name "freq") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "freq")
           (:x 116)
           (:y 366)
           (:w 44)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:reference
            (:in (:type omin) (:index 2) (:name "dur") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "dur")
           (:x 17)
           (:y 51)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:reference
            (:in (:type omin) (:index 3) (:name "attack") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "attack")
           (:x 73)
           (:y 52)
           (:w 55)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:reference
            (:in (:type omin) (:index 4) (:name "release") (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "release")
           (:x 113)
           (:y 52)
           (:w 60)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:reference
            (:in
             (:type omin)
             (:index 5)
             (:name "amp-vibrato")
             (:doc "")))
           (:type :io)
           (:group-id nil)
           (:name "amp-vibrato")
           (:x 218)
           (:y 73.0)
           (:w 87)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0 1.0 1.0 0.0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 11 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 9 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 3 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 9 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 5 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 5 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 7 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 9 :out 0))
           (:to (:box 0 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 9 :out 0))
           (:to (:box 2 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 4 :in 4))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 0 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 9 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 10 :in 0))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 14 :out 0))
           (:to (:box 4 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 14 :out 0))
           (:to (:box 10 :in 1))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 4 :in 5))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 15 :out 0))
           (:to (:box 10 :in 2))
           (:attributes (:color nil :style nil :modif nil)))
          (:connection
           (:from (:box 16 :out 0))
           (:to (:box 7 :in 1))
           (:attributes (:color nil :style nil :modif nil))))))
       (:type :patch)
       (:group-id nil)
       (:name "modulate-f0")
       (:x 223)
       (:y 325)
       (:w 164)
       (:h 59)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "freq")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "dur")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "attack")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "release")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "amp-vibrato")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name nil) (:reactive nil)))
       (:id 1))
      (:box
       (:reference fixnum)
       (:type :value)
       (:group-id nil)
       (:name "aux")
       (:x 441)
       (:y 433)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 2))
      (:box
       (:library "OM-Chant")
       (:reference autobw)
       (:type :function)
       (:group-id nil)
       (:name "autobw")
       (:x 616)
       (:y 371)
       (:w 49)
       (:h nil)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FREQLIST")
         (:value (:list 609 1000 2450 2700 3240))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:comment
       (:x 600)
       (:y 298)
       (:w 64)
       (:h 30)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "formants")
       (:id 4))
      (:comment
       (:x 645)
       (:y 172)
       (:w 114)
       (:h 51)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "vels scaled between 0 et 1")
       (:id 5))
      (:comment
       (:x 237)
       (:y 203)
       (:w 36)
       (:h 30)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "pitch")
       (:id 6))
      (:comment
       (:x 19)
       (:y 233)
       (:w 49)
       (:h 30)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "onsets")
       (:id 7))
      (:comment
       (:x 92)
       (:y 269)
       (:w 66)
       (:h 30)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "durations")
       (:id 8))
      (:box
       (:library "OM-Chant")
       (:reference autobend)
       (:type :function)
       (:group-id nil)
       (:name "autobend")
       (:x 744)
       (:y 332)
       (:w 85)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LFREQS")
         (:value (:list 1000 1500 2450))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUND")
         (:value 200.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:reference ms->sec)
       (:type :function)
       (:group-id nil)
       (:name "ms->sec")
       (:x 130)
       (:y 230)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:reference ms->sec)
       (:type :function)
       (:group-id nil)
       (:name "ms->sec")
       (:x 41)
       (:y 188)
       (:w 78)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:reference split)
       (:type :function)
       (:group-id nil)
       (:name "SPLIT")
       (:x 279)
       (:y 241)
       (:w 59)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "out") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 12))
      (:box
       (:reference flat)
       (:type :function)
       (:group-id nil)
       (:name "flat")
       (:x 503)
       (:y 116)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:reference om-scale)
       (:type :function)
       (:group-id nil)
       (:name "om-scale")
       (:x 562)
       (:y 182)
       (:w 82)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1.0)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "minin")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "maxin")
         (:value 127)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:reference om*)
       (:type :function)
       (:group-id nil)
       (:name "om*")
       (:x 581)
       (:y 405)
       (:w 60)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 480)
       (:y 431)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:reference flat)
       (:type :function)
       (:group-id nil)
       (:name "flat")
       (:x 403)
       (:y 650)
       (:w 54)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:library "OM-Chant")
       (:reference vowel-formants)
       (:type :function)
       (:group-id nil)
       (:name "vowel-formants")
       (:x 684)
       (:y 242)
       (:w 115)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOWEL")
         (:value
          (:list
           (:list 450 0 70)
           (:list 800 -9 80)
           (:list 2830 -16 100)
           (:list 3500 -28 130)
           (:list 4950 -55 135)))
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "amp")
         (:value lin)
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil))
        (:output (:name "out2") (:reactive nil))
        (:output (:name "out3") (:reactive nil)))
       (:id 18))
      (:box
       (:library "OM-Chant")
       (:reference ch-fof)
       (:type :object)
       (:group-id nil)
       (:name "CH-FOF 2")
       (:x 405)
       (:y 473)
       (:w 220)
       (:h 56)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-FOF 2")
       (:display :hidden)
       (:showname t)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ELTS")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 20)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "KT")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "USER-FUN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "freq")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "amp")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "bw")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ELTS") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "KT") (:reactive nil))
        (:output (:name "USER-FUN") (:reactive nil))
        (:output (:name "freq") (:reactive nil))
        (:output (:name "amp") (:reactive nil))
        (:output (:name "bw") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class ch-fof)
         (:slots
          ((:elts 1)
           (:field-names
            (:list "freq" "amp" "bw" "win" "wdur" "wout" "phs"))
           (:onset 0)
           (:dur 20)
           (:kt nil)
           (:user-fun nil)
           (:action-time 0)))
         (:add-slots ((:data nil)))))
       (:id 19))
      (:box
       (:reference list)
       (:type :function)
       (:group-id nil)
       (:name "list")
       (:x 338)
       (:y 540)
       (:w 52)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "x")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:reference car)
       (:type :function)
       (:group-id nil)
       (:name "car")
       (:x 148)
       (:y 182)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:reference mc->f)
       (:type :function)
       (:group-id nil)
       (:name "mc->f")
       (:x 211)
       (:y 219)
       (:w 66)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MIDICS?")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:reference car)
       (:type :function)
       (:group-id nil)
       (:name "car")
       (:x 222)
       (:y 169)
       (:w 53)
       (:h 30)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:library "OM-Chant")
       (:reference ch-f0)
       (:type :object)
       (:group-id nil)
       (:name "CH-F0")
       (:x 74)
       (:y 404)
       (:w 157)
       (:h 65)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:name "CH-F0")
       (:display :hidden)
       (:showname t)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION-TIME")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DUR")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "F0")
         (:value 110.0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "ACTION-TIME") (:reactive nil))
        (:output (:name "DUR") (:reactive nil))
        (:output (:name "F0") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class ch-f0)
         (:slots ((:onset 0) (:action-time 0) (:dur 0) (:f0 110.0)))))
       (:id 24))
      (:box
       (:reference chord-seq)
       (:type :slots)
       (:group-id nil)
       (:name "CHORD-SEQ SLOTS")
       (:x 292)
       (:y 52)
       (:w 129)
       (:h 30)
       (:color (:color 0.9 0.88 0.81 1.0))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:group-id nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list (:list 1000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value 100)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil)))
       (:id 25))
      (:box
       (:reference
        (:object
         (:class omcollect)
         (:slots ((:name "collect") (:protected-p nil) (:icon nil)))))
       (:type :special)
       (:group-id nil)
       (:name "collect")
       (:x 326)
       (:y 589)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 26))
      (:box
       (:reference
        (:object
         (:class ompatchiterator)
         (:slots
          ((:name "iterate")
           (:protected-p nil)
           (:icon nil)
           (:n-iter 0)))))
       (:type :special)
       (:group-id nil)
       (:name "iterate")
       (:x 275)
       (:y 657)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 27))
      (:box
       (:reference
        (:in (:type omin) (:index 1) (:name "chord-seq") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "chord-seq")
       (:x 271)
       (:y -14)
       (:w 75)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 28))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 297)
       (:y 172)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 29))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 426)
       (:y 202)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 30))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 521)
       (:y 345)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 31))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 474)
       (:y 345)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 32))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 566)
       (:y 241)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 33))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 139)
       (:y 116)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 34))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 213)
       (:y 107)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 35))
      (:box
       (:reference
        (:object
         (:class omlooplist)
         (:slots
          ((:name "list-loop")
           (:protected-p nil)
           (:icon nil)
           (:looped-list nil)))))
       (:type :special)
       (:group-id nil)
       (:name "list-loop")
       (:x 48)
       (:y 116)
       (:w 65)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 36))
      (:box
       (:reference
        (:in (:type omin) (:index 2) (:name "attacks") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "attacks")
       (:x 476)
       (:y 282)
       (:w 60)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 37))
      (:box
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "output 1")
       (:x 393)
       (:y 711)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 38))
      (:box
       (:reference
        (:in (:type omin) (:index 3) (:name "decays") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "decays")
       (:x 523)
       (:y 283)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 39))
      (:box
       (:reference
        (:in (:type omin) (:index 4) (:name "amp-vibrato") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "amp-vibrato")
       (:x 413)
       (:y 146)
       (:w 87)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 40))
      (:box
       (:reference
        (:in (:type omin) (:index 5) (:name "env-vib") (:doc "")))
       (:type :io)
       (:group-id nil)
       (:name "env-vib")
       (:x 297)
       (:y 112)
       (:w 61)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 41)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 18 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 24 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 19 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 19 :in 8))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 3 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 19 :in 6))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 1 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 16 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 24 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 19 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 24 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 1 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 1))
       (:to (:box 1 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 14 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 33 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 19 :in 7))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 19 :in 3))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 38 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 1))
       (:to (:box 9 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 2))
       (:to (:box 15 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 20 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 26 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 10 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 1 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 9 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 23 :out 0))
       (:to (:box 22 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 24 :out 0))
       (:to (:box 20 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 25 :out 1))
       (:to (:box 35 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 25 :out 2))
       (:to (:box 36 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 25 :out 3))
       (:to (:box 34 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 25 :out 4))
       (:to (:box 13 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 26 :out 0))
       (:to (:box 27 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 26 :out 1))
       (:to (:box 17 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 28 :out 0))
       (:to (:box 25 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 29 :out 0))
       (:to (:box 12 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 30 :out 0))
       (:to (:box 1 :in 4))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 31 :out 0))
       (:to (:box 16 :in 2))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 32 :out 0))
       (:to (:box 16 :in 1))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 33 :out 0))
       (:to (:box 15 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 34 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 35 :out 0))
       (:to (:box 23 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 36 :out 0))
       (:to (:box 11 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 37 :out 0))
       (:to (:box 32 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 39 :out 0))
       (:to (:box 31 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 40 :out 0))
       (:to (:box 30 :in 0))
       (:attributes (:color nil :style nil :modif nil)))
      (:connection
       (:from (:box 41 :out 0))
       (:to (:box 29 :in 0))
       (:attributes (:color nil :style nil :modif nil))))))
   (:type :patch)
   (:group-id nil)
   (:name "notes-to-chant")
   (:x 256)
   (:y 204)
   (:w 200)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "chord-seq")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "attacks")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "decays")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "amp-vibrato")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "env-vib")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 9))
  (:box
   (:reference chord-seq)
   (:type :object)
   (:group-id nil)
   (:name "CHORD-SEQ21")
   (:x 65)
   (:y 42)
   (:w 460)
   (:h 74)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "CHORD-SEQ21")
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 19899)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 8100)
         (:list 8400)
         (:list 8400)
         (:list 8400)
         (:list 8400)
         (:list 8400)
         (:list 8400)
         (:list 8400)
         (:list 8400)
         (:list 7700)
         (:list 7700)
         (:list 8100)
         (:list 8100)
         (:list 8100)
         (:list 8100)
         (:list 8100)
         (:list 8100)
         (:list 8100)
         (:list 8100)
         (:list 7400)
         (:list 7400)
         (:list 7700)
         (:list 7700)
         (:list 7700)
         (:list 7200)
         (:list 7900)
         (:list 7900)
         (:list 7900)
         (:list 7200)
         (:list 8100)
         (:list 7700)
         (:list 8100)
         (:list 8400)
         (:list 8900)
         (:list 8400)
         (:list 8600)
         (:list 8200)
         (:list 8400)
         (:list 7700)
         (:list 8100)
         (:list 8400)
         (:list 8900)
         (:list 8400)
         (:list 8600)
         (:list 8200)
         (:list 8400)
         (:list 7700)
         (:list 7700)
         (:list 7900)
         (:list 8000)
         (:list 8100)
         (:list 7700)
         (:list 7200)
         (:list 7400)
         (:list 7600)
         (:list 7700)))
       (:lonset
        (:list
         0
         390
         600
         809
         1019
         1229
         1439
         1649
         1858
         2068
         3327
         3747
         3956
         4166
         4376
         4586
         4795
         5005
         5215
         5425
         6684
         7103
         7313
         7523
         7733
         7942
         8152
         8362
         8572
         8781
         8991
         9201
         9411
         9621
         9830
         10040
         10250
         10460
         10670
         10879
         11089
         11299
         11509
         11719
         11928
         12138
         12977
         13607
         13816
         14656
         15495
         16334
         17173
         18432
         18642
         18851
         19899))
       (:ldur
        (:list
         (:list 318)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 156)
         (:list 156)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 1047)
         (:list 418)
         (:list 155)
         (:list 156)
         (:list 156)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 156)
         (:list 156)
         (:list 1047)
         (:list 417)
         (:list 156)
         (:list 156)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 156)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 156)
         (:list 156)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 156)
         (:list 156)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 156)
         (:list 156)
         (:list 155)
         (:list 155)
         (:list 156)
         (:list 733)
         (:list 628)
         (:list 208)
         (:list 838)
         (:list 837)
         (:list 837)
         (:list 837)
         (:list 1152)
         (:list 208)
         (:list 208)
         (:list 1048)))
       (:lvel
        (:list
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 100)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)
         (:list 112)))
       (:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset
        (:list
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)
         (:list 0)))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)
         (:list 1)))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))
       (:llegato nil)))))
   (:id 10))
  (:box
   (:reference symbol)
   (:type :value)
   (:group-id nil)
   (:name "aux 3")
   (:x 414)
   (:y 283)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value t)
   (:id 11))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name "ch_28-chant-qon.aiff")
   (:x 103)
   (:y 363)
   (:w 311)
   (:h 74)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "ch_28-chant-qon.aiff")
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples 877547)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname
        (:pathname
         (:directory
          (:absolute
           "Users"
           "bresson"
           "_SHARED-FILES"
           "WORKSPACES"
           "my-workspace"
           "out-files"))
         (:device nil)
         (:host nil)
         (:name "ch_28-chant-qon")
         (:type "aiff")))
       (:sample-rate 44100)
       (:n-channels 1)
       (:n-samples 877547)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 12))
  (:box
   (:reference synthesize)
   (:type :function)
   (:group-id nil)
   (:name "synthesize")
   (:x 390)
   (:y 315)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "OBJ")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "run") (:value nil) (:reactive nil))
    (:input (:type :key) (:name "name") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:reference sound-silence)
   (:type :function)
   (:group-id nil)
   (:name "sound-silence")
   (:x 65)
   (:y 481)
   (:w 105)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "DUR")
     (:value 1.0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 96)
   (:y 444)
   (:w 42)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1030)
   (:id 15))
  (:box
   (:reference sound-seq)
   (:type :function)
   (:group-id nil)
   (:name "sound-seq")
   (:x 159)
   (:y 525)
   (:w 89)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "S1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "S2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:reference sound)
   (:type :object)
   (:group-id nil)
   (:name "ch_28-chant-qon.aiff")
   (:x 87)
   (:y 625)
   (:w 311)
   (:h 76)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name "ch_28-chant-qon.aiff")
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (650 200)) (:position (142 115)))
   (:edition-params)
   (:value
    (:object
     (:class sound)
     (:slots
      ((:onset 0)
       (:duration 0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:default-frame-type marker-frame)
       (:frames nil)
       (:buffer nil)
       (:n-samples 922970)
       (:n-channels 1)
       (:sample-rate 44100)
       (:smpl-type :float)
       (:sample-size 16)))
     (:add-slots
      ((:markers nil)
       (:file-pathname nil)
       (:sample-rate 44100)
       (:n-channels 1)
       (:n-samples 922970)
       (:gain 1.0)
       (:access-from-file nil)))))
   (:id 17))
  (:box
   (:reference sound-vol)
   (:type :function)
   (:group-id nil)
   (:name "sound-vol")
   (:x 244)
   (:y 563)
   (:w 86)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "S") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "GAIN")
     (:value 1.0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:reference single-float)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 282)
   (:y 528)
   (:w 33)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.4)
   (:id 19)))
 (:connections
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 13 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 1))
   (:to (:box 9 :in 4))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 1))
   (:to (:box 9 :in 3))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 1))
   (:to (:box 9 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 8 :out 1))
   (:to (:box 9 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 13 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 16 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 16 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 18 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 18 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))